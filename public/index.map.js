function trim(e){return rtrim(ltrim(e))}function ltrim(e){return e.replace(/^\s+/,"")}function rtrim(e){return e.replace(/\s+$/,"")}function disableAllTheseDays(e){var t=e.getMonth(),a=e.getDate(),n=e.getFullYear();for(i=0;i<disabledDays.length;i++)if(-1!=$.inArray(t+1+"-"+a+"-"+n,disabledDays))return[!1];return[!0]}function getRandomInt(e,t){return Math.floor(Math.random()*(t-e+1))+e}function AjaxClient(e,t,i,a,n,r,s,o,l,c){if(0==s)var d=a;else d=jQuery("#"+s).serialize();var u="";null!=r&&(u="string"==typeof r?',"'+r+'"':","+r);var p=!0;if(void 0===l||(p=l),void 0===c)var f="Ajax/"+e+"/"+t+".php";else if("local"==c)f=window.location.href;else f=c;void 0!==o&&0!=o||($(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")),jQuery.ajax({url:f,type:i,dataType:"json",cache:p,data:d,success:function(e){void 0!==o&&0!=o||($(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")),window.jsozn=e,""!=jsozn.debug&&void 0!==jsozn.debug&&alert_message("error","Ошибка №"+jsozn.debug),$.globalEval(n+"(jsozn"+u+")")},error:function(e){}})}!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(h,e){function t(e,t){return t.toUpperCase()}var i=[],d=i.slice,m=i.concat,o=i.push,n=i.indexOf,a={},r=a.toString,v=a.hasOwnProperty,g={},_=h.document,s="2.1.1",w=function(e,t){return new w.fn.init(e,t)},l=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,c=/^-ms-/,u=/-([\da-z])/gi;function p(e){var t=e.length,i=w.type(e);return"function"!==i&&!w.isWindow(e)&&(!(1!==e.nodeType||!t)||("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e))}w.fn=w.prototype={jquery:s,constructor:w,selector:"",length:0,toArray:function(){return d.call(this)},get:function(e){return null!=e?e<0?this[e+this.length]:this[e]:d.call(this)},pushStack:function(e){var t=w.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return w.each(this,e,t)},map:function(i){return this.pushStack(w.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:o,sort:i.sort,splice:i.splice},w.extend=w.fn.extend=function(){var e,t,i,a,n,r,s=arguments[0]||{},o=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[o]||{},o++),"object"==typeof s||w.isFunction(s)||(s={}),o===l&&(s=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)i=s[t],s!==(a=e[t])&&(c&&a&&(w.isPlainObject(a)||(n=w.isArray(a)))?(r=n?(n=!1,i&&w.isArray(i)?i:[]):i&&w.isPlainObject(i)?i:{},s[t]=w.extend(c,r,a)):void 0!==a&&(s[t]=a));return s},w.extend({expando:"jQuery"+(s+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===w.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){return!w.isArray(e)&&0<=e-parseFloat(e)},isPlainObject:function(e){return"object"===w.type(e)&&!e.nodeType&&!w.isWindow(e)&&!(e.constructor&&!v.call(e.constructor.prototype,"isPrototypeOf"))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?a[r.call(e)]||"object":typeof e},globalEval:function(e){var t,i=eval;(e=w.trim(e))&&(1===e.indexOf("use strict")?((t=_.createElement("script")).text=e,_.head.appendChild(t).parentNode.removeChild(t)):i(e))},camelCase:function(e){return e.replace(c,"ms-").replace(u,t)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,i){var a=0,n=e.length,r=p(e);if(i){if(r)for(;a<n&&!1!==t.apply(e[a],i);a++);else for(a in e)if(!1===t.apply(e[a],i))break}else if(r)for(;a<n&&!1!==t.call(e[a],a,e[a]);a++);else for(a in e)if(!1===t.call(e[a],a,e[a]))break;return e},trim:function(e){return null==e?"":(e+"").replace(l,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(p(Object(e))?w.merge(i,"string"==typeof e?[e]:e):o.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:n.call(t,e,i)},merge:function(e,t){for(var i=+t.length,a=0,n=e.length;a<i;a++)e[n++]=t[a];return e.length=n,e},grep:function(e,t,i){for(var a=[],n=0,r=e.length,s=!i;n<r;n++)!t(e[n],n)!=s&&a.push(e[n]);return a},map:function(e,t,i){var a,n=0,r=e.length,s=[];if(p(e))for(;n<r;n++)null!=(a=t(e[n],n,i))&&s.push(a);else for(n in e)null!=(a=t(e[n],n,i))&&s.push(a);return m.apply([],s)},guid:1,proxy:function(e,t){var i,a,n;return"string"==typeof t&&(i=e[t],t=e,e=i),w.isFunction(e)?(a=d.call(arguments,2),(n=function(){return e.apply(t||this,a.concat(d.call(arguments)))}).guid=e.guid=e.guid||w.guid++,n):void 0},now:Date.now,support:g}),w.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){a["[object "+t+"]"]=t.toLowerCase()});var f=function(i){function u(e,t,i){var a="0x"+t-65536;return a!=a||i?t:a<0?String.fromCharCode(65536+a):String.fromCharCode(a>>10|55296,1023&a|56320)}var e,h,b,r,a,m,p,v,$,c,d,g,k,n,_,y,s,o,w,x="sizzle"+-new Date,C=i.document,S=0,f=0,l=ne(),T=ne(),j=ne(),D=function(e,t){return e===t&&(d=!0),0},E="undefined",M={}.hasOwnProperty,t=[],A=t.pop,I=t.push,P=t.push,O=t.slice,N=t.indexOf||function(e){for(var t=0,i=this.length;t<i;t++)if(this[t]===e)return t;return-1},F="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",H="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",z=H.replace("w","w#"),R="\\["+L+"*("+H+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+z+"))|)"+L+"*\\]",B=":("+H+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+R+")*)|.*)\\)|)",q=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),W=new RegExp("^"+L+"*,"+L+"*"),U=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),Y=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),X=new RegExp(B),G=new RegExp("^"+z+"$"),V={ID:new RegExp("^#("+H+")"),CLASS:new RegExp("^\\.("+H+")"),TAG:new RegExp("^("+H.replace("w","w*")+")"),ATTR:new RegExp("^"+R),PSEUDO:new RegExp("^"+B),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+F+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},K=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,J=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=/'|\\/g,ie=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig");try{P.apply(t=O.call(C.childNodes),C.childNodes),t[C.childNodes.length].nodeType}catch(e){P={apply:t.length?function(e,t){I.apply(e,O.call(t))}:function(e,t){for(var i=e.length,a=0;e[i++]=t[a++];);e.length=i-1}}}function ae(e,t,i,a){var n,r,s,o,l,c,d,u,p,f;if((t?t.ownerDocument||t:C)!==k&&g(t),i=i||[],!e||"string"!=typeof e)return i;if(1!==(o=(t=t||k).nodeType)&&9!==o)return[];if(_&&!a){if(n=J.exec(e))if(s=n[1]){if(9===o){if(!(r=t.getElementById(s))||!r.parentNode)return i;if(r.id===s)return i.push(r),i}else if(t.ownerDocument&&(r=t.ownerDocument.getElementById(s))&&w(t,r)&&r.id===s)return i.push(r),i}else{if(n[2])return P.apply(i,t.getElementsByTagName(e)),i;if((s=n[3])&&h.getElementsByClassName&&t.getElementsByClassName)return P.apply(i,t.getElementsByClassName(s)),i}if(h.qsa&&(!y||!y.test(e))){if(u=d=x,p=t,f=9===o&&e,1===o&&"object"!==t.nodeName.toLowerCase()){for(c=m(e),(d=t.getAttribute("id"))?u=d.replace(te,"\\$&"):t.setAttribute("id",u),u="[id='"+u+"'] ",l=c.length;l--;)c[l]=u+he(c[l]);p=ee.test(e)&&pe(t.parentNode)||t,f=c.join(",")}if(f)try{return P.apply(i,p.querySelectorAll(f)),i}catch(e){}finally{d||t.removeAttribute("id")}}}return v(e.replace(q,"$1"),t,i,a)}function ne(){var a=[];return function e(t,i){return a.push(t+" ")>b.cacheLength&&delete e[a.shift()],e[t+" "]=i}}function re(e){return e[x]=!0,e}function se(e){var t=k.createElement("div");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function oe(e,t){for(var i=e.split("|"),a=e.length;a--;)b.attrHandle[i[a]]=t}function le(e,t){var i=t&&e,a=i&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||1<<31)-(~e.sourceIndex||1<<31);if(a)return a;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function ce(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function de(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function ue(s){return re(function(r){return r=+r,re(function(e,t){for(var i,a=s([],e.length,r),n=a.length;n--;)e[i=a[n]]&&(e[i]=!(t[i]=e[i]))})})}function pe(e){return e&&typeof e.getElementsByTagName!==E&&e}for(e in h=ae.support={},a=ae.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},g=ae.setDocument=function(e){var t,l=e?e.ownerDocument||e:C,i=l.defaultView;return l!==k&&9===l.nodeType&&l.documentElement?(n=(k=l).documentElement,_=!a(l),i&&i!==i.top&&(i.addEventListener?i.addEventListener("unload",function(){g()},!1):i.attachEvent&&i.attachEvent("onunload",function(){g()})),h.attributes=se(function(e){return e.className="i",!e.getAttribute("className")}),h.getElementsByTagName=se(function(e){return e.appendChild(l.createComment("")),!e.getElementsByTagName("*").length}),h.getElementsByClassName=Z.test(l.getElementsByClassName)&&se(function(e){return e.innerHTML="<div class='a'></div><div class='a i'></div>",e.firstChild.className="i",2===e.getElementsByClassName("i").length}),h.getById=se(function(e){return n.appendChild(e).id=x,!l.getElementsByName||!l.getElementsByName(x).length}),h.getById?(b.find.ID=function(e,t){if(typeof t.getElementById!==E&&_){var i=t.getElementById(e);return i&&i.parentNode?[i]:[]}},b.filter.ID=function(e){var t=e.replace(ie,u);return function(e){return e.getAttribute("id")===t}}):(delete b.find.ID,b.filter.ID=function(e){var i=e.replace(ie,u);return function(e){var t=typeof e.getAttributeNode!==E&&e.getAttributeNode("id");return t&&t.value===i}}),b.find.TAG=h.getElementsByTagName?function(e,t){return typeof t.getElementsByTagName!==E?t.getElementsByTagName(e):void 0}:function(e,t){var i,a=[],n=0,r=t.getElementsByTagName(e);if("*"!==e)return r;for(;i=r[n++];)1===i.nodeType&&a.push(i);return a},b.find.CLASS=h.getElementsByClassName&&function(e,t){return typeof t.getElementsByClassName!==E&&_?t.getElementsByClassName(e):void 0},s=[],y=[],(h.qsa=Z.test(l.querySelectorAll))&&(se(function(e){e.innerHTML="<select msallowclip=''><option selected=''></option></select>",e.querySelectorAll("[msallowclip^='']").length&&y.push("[*^$]="+L+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||y.push("\\["+L+"*(?:value|"+F+")"),e.querySelectorAll(":checked").length||y.push(":checked")}),se(function(e){var t=l.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&y.push("name"+L+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||y.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),y.push(",.*:")})),(h.matchesSelector=Z.test(o=n.matches||n.webkitMatchesSelector||n.mozMatchesSelector||n.oMatchesSelector||n.msMatchesSelector))&&se(function(e){h.disconnectedMatch=o.call(e,"div"),o.call(e,"[s!='']:x"),s.push("!=",B)}),y=y.length&&new RegExp(y.join("|")),s=s.length&&new RegExp(s.join("|")),t=Z.test(n.compareDocumentPosition),w=t||Z.test(n.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,a=t&&t.parentNode;return e===a||!(!a||1!==a.nodeType||!(i.contains?i.contains(a):e.compareDocumentPosition&&16&e.compareDocumentPosition(a)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return d=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!h.sortDetached&&t.compareDocumentPosition(e)===i?e===l||e.ownerDocument===C&&w(C,e)?-1:t===l||t.ownerDocument===C&&w(C,t)?1:c?N.call(c,e)-N.call(c,t):0:4&i?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,a=0,n=e.parentNode,r=t.parentNode,s=[e],o=[t];if(!n||!r)return e===l?-1:t===l?1:n?-1:r?1:c?N.call(c,e)-N.call(c,t):0;if(n===r)return le(e,t);for(i=e;i=i.parentNode;)s.unshift(i);for(i=t;i=i.parentNode;)o.unshift(i);for(;s[a]===o[a];)a++;return a?le(s[a],o[a]):s[a]===C?-1:o[a]===C?1:0},l):k},ae.matches=function(e,t){return ae(e,null,null,t)},ae.matchesSelector=function(e,t){if((e.ownerDocument||e)!==k&&g(e),t=t.replace(Y,"='$1']"),!(!h.matchesSelector||!_||s&&s.test(t)||y&&y.test(t)))try{var i=o.call(e,t);if(i||h.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){}return 0<ae(t,k,null,[e]).length},ae.contains=function(e,t){return(e.ownerDocument||e)!==k&&g(e),w(e,t)},ae.attr=function(e,t){(e.ownerDocument||e)!==k&&g(e);var i=b.attrHandle[t.toLowerCase()],a=i&&M.call(b.attrHandle,t.toLowerCase())?i(e,t,!_):void 0;return void 0!==a?a:h.attributes||!_?e.getAttribute(t):(a=e.getAttributeNode(t))&&a.specified?a.value:null},ae.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ae.uniqueSort=function(e){var t,i=[],a=0,n=0;if(d=!h.detectDuplicates,c=!h.sortStable&&e.slice(0),e.sort(D),d){for(;t=e[n++];)t===e[n]&&(a=i.push(n));for(;a--;)e.splice(i[a],1)}return c=null,e},r=ae.getText=function(e){var t,i="",a=0,n=e.nodeType;if(n){if(1===n||9===n||11===n){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=r(e)}else if(3===n||4===n)return e.nodeValue}else for(;t=e[a++];)i+=r(t);return i},(b=ae.selectors={cacheLength:50,createPseudo:re,match:V,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ie,u),e[3]=(e[3]||e[4]||e[5]||"").replace(ie,u),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||ae.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&ae.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return V.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&X.test(i)&&(t=m(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ie,u).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=l[e+" "];return t||(t=new RegExp("(^|"+L+")"+e+"("+L+"|$)"))&&l(e,function(e){return t.test("string"==typeof e.className&&e.className||typeof e.getAttribute!==E&&e.getAttribute("class")||"")})},ATTR:function(i,a,n){return function(e){var t=ae.attr(e,i);return null==t?"!="===a:!a||(t+="","="===a?t===n:"!="===a?t!==n:"^="===a?n&&0===t.indexOf(n):"*="===a?n&&-1<t.indexOf(n):"$="===a?n&&t.slice(-n.length)===n:"~="===a?-1<(" "+t+" ").indexOf(n):"|="===a&&(t===n||t.slice(0,n.length+1)===n+"-"))}},CHILD:function(f,e,t,h,m){var v="nth"!==f.slice(0,3),g="last"!==f.slice(-4),_="of-type"===e;return 1===h&&0===m?function(e){return!!e.parentNode}:function(e,t,i){var a,n,r,s,o,l,c=v!=g?"nextSibling":"previousSibling",d=e.parentNode,u=_&&e.nodeName.toLowerCase(),p=!i&&!_;if(d){if(v){for(;c;){for(r=e;r=r[c];)if(_?r.nodeName.toLowerCase()===u:1===r.nodeType)return!1;l=c="only"===f&&!l&&"nextSibling"}return!0}if(l=[g?d.firstChild:d.lastChild],g&&p){for(o=(a=(n=d[x]||(d[x]={}))[f]||[])[0]===S&&a[1],s=a[0]===S&&a[2],r=o&&d.childNodes[o];r=++o&&r&&r[c]||(s=o=0)||l.pop();)if(1===r.nodeType&&++s&&r===e){n[f]=[S,o,s];break}}else if(p&&(a=(e[x]||(e[x]={}))[f])&&a[0]===S)s=a[1];else for(;(r=++o&&r&&r[c]||(s=o=0)||l.pop())&&((_?r.nodeName.toLowerCase()!==u:1!==r.nodeType)||!++s||(p&&((r[x]||(r[x]={}))[f]=[S,s]),r!==e)););return(s-=m)===h||s%h==0&&0<=s/h}}},PSEUDO:function(e,r){var t,s=b.pseudos[e]||b.setFilters[e.toLowerCase()]||ae.error("unsupported pseudo: "+e);return s[x]?s(r):1<s.length?(t=[e,e,"",r],b.setFilters.hasOwnProperty(e.toLowerCase())?re(function(e,t){for(var i,a=s(e,r),n=a.length;n--;)e[i=N.call(e,a[n])]=!(t[i]=a[n])}):function(e){return s(e,0,t)}):s}},pseudos:{not:re(function(e){var a=[],n=[],o=p(e.replace(q,"$1"));return o[x]?re(function(e,t,i,a){for(var n,r=o(e,null,a,[]),s=e.length;s--;)(n=r[s])&&(e[s]=!(t[s]=n))}):function(e,t,i){return a[0]=e,o(a,null,i,n),!n.pop()}}),has:re(function(t){return function(e){return 0<ae(t,e).length}}),contains:re(function(t){return function(e){return-1<(e.textContent||e.innerText||r(e)).indexOf(t)}}),lang:re(function(i){return G.test(i||"")||ae.error("unsupported lang: "+i),i=i.replace(ie,u).toLowerCase(),function(e){var t;do{if(t=_?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===n},focus:function(e){return e===k.activeElement&&(!k.hasFocus||k.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return!1===e.disabled},disabled:function(e){return!0===e.disabled},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return K.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ue(function(){return[0]}),last:ue(function(e,t){return[t-1]}),eq:ue(function(e,t,i){return[i<0?i+t:i]}),even:ue(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:ue(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:ue(function(e,t,i){for(var a=i<0?i+t:i;0<=--a;)e.push(a);return e}),gt:ue(function(e,t,i){for(var a=i<0?i+t:i;++a<t;)e.push(a);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=ce(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=de(e);function fe(){}function he(e){for(var t=0,i=e.length,a="";t<i;t++)a+=e[t].value;return a}function me(s,e,t){var o=e.dir,l=t&&"parentNode"===o,c=f++;return e.first?function(e,t,i){for(;e=e[o];)if(1===e.nodeType||l)return s(e,t,i)}:function(e,t,i){var a,n,r=[S,c];if(i){for(;e=e[o];)if((1===e.nodeType||l)&&s(e,t,i))return!0}else for(;e=e[o];)if(1===e.nodeType||l){if((a=(n=e[x]||(e[x]={}))[o])&&a[0]===S&&a[1]===c)return r[2]=a[2];if((n[o]=r)[2]=s(e,t,i))return!0}}}function ve(n){return 1<n.length?function(e,t,i){for(var a=n.length;a--;)if(!n[a](e,t,i))return!1;return!0}:n[0]}function ge(e,t,i,a,n){for(var r,s=[],o=0,l=e.length,c=null!=t;o<l;o++)!(r=e[o])||i&&!i(r,a,n)||(s.push(r),c&&t.push(o));return s}function _e(f,h,m,v,g,e){return v&&!v[x]&&(v=_e(v)),g&&!g[x]&&(g=_e(g,e)),re(function(e,t,i,a){var n,r,s,o=[],l=[],c=t.length,d=e||function(e,t,i){for(var a=0,n=t.length;a<n;a++)ae(e,t[a],i);return i}(h||"*",i.nodeType?[i]:i,[]),u=!f||!e&&h?d:ge(d,o,f,i,a),p=m?g||(e?f:c||v)?[]:t:u;if(m&&m(u,p,i,a),v)for(n=ge(p,l),v(n,[],i,a),r=n.length;r--;)(s=n[r])&&(p[l[r]]=!(u[l[r]]=s));if(e){if(g||f){if(g){for(n=[],r=p.length;r--;)(s=p[r])&&n.push(u[r]=s);g(null,p=[],n,a)}for(r=p.length;r--;)(s=p[r])&&-1<(n=g?N.call(e,s):o[r])&&(e[n]=!(t[n]=s))}}else p=ge(p===t?p.splice(c,p.length):p),g?g(null,t,p,a):P.apply(t,p)})}function ye(e){for(var a,t,i,n=e.length,r=b.relative[e[0].type],s=r||b.relative[" "],o=r?1:0,l=me(function(e){return e===a},s,!0),c=me(function(e){return-1<N.call(a,e)},s,!0),d=[function(e,t,i){return!r&&(i||t!==$)||((a=t).nodeType?l:c)(e,t,i)}];o<n;o++)if(t=b.relative[e[o].type])d=[me(ve(d),t)];else{if((t=b.filter[e[o].type].apply(null,e[o].matches))[x]){for(i=++o;i<n&&!b.relative[e[i].type];i++);return _e(1<o&&ve(d),1<o&&he(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(q,"$1"),t,o<i&&ye(e.slice(o,i)),i<n&&ye(e=e.slice(i)),i<n&&he(e))}d.push(t)}return ve(d)}function be(v,g){function e(e,t,i,a,n){var r,s,o,l=0,c="0",d=e&&[],u=[],p=$,f=e||y&&b.find.TAG("*",n),h=S+=null==p?1:Math.random()||.1,m=f.length;for(n&&($=t!==k&&t);c!==m&&null!=(r=f[c]);c++){if(y&&r){for(s=0;o=v[s++];)if(o(r,t,i)){a.push(r);break}n&&(S=h)}_&&((r=!o&&r)&&l--,e&&d.push(r))}if(l+=c,_&&c!==l){for(s=0;o=g[s++];)o(d,u,t,i);if(e){if(0<l)for(;c--;)d[c]||u[c]||(u[c]=A.call(a));u=ge(u)}P.apply(a,u),n&&!e&&0<u.length&&1<l+g.length&&ae.uniqueSort(a)}return n&&(S=h,$=p),d}var _=0<g.length,y=0<v.length;return _?re(e):e}return fe.prototype=b.filters=b.pseudos,b.setFilters=new fe,m=ae.tokenize=function(e,t){var i,a,n,r,s,o,l,c=T[e+" "];if(c)return t?0:c.slice(0);for(s=e,o=[],l=b.preFilter;s;){for(r in i&&!(a=W.exec(s))||(a&&(s=s.slice(a[0].length)||s),o.push(n=[])),i=!1,(a=U.exec(s))&&(i=a.shift(),n.push({value:i,type:a[0].replace(q," ")}),s=s.slice(i.length)),b.filter)!(a=V[r].exec(s))||l[r]&&!(a=l[r](a))||(i=a.shift(),n.push({value:i,type:r,matches:a}),s=s.slice(i.length));if(!i)break}return t?s.length:s?ae.error(e):T(e,o).slice(0)},p=ae.compile=function(e,t){var i,a=[],n=[],r=j[e+" "];if(!r){for(i=(t=t||m(e)).length;i--;)(r=ye(t[i]))[x]?a.push(r):n.push(r);(r=j(e,be(n,a))).selector=e}return r},v=ae.select=function(e,t,i,a){var n,r,s,o,l,c="function"==typeof e&&e,d=!a&&m(e=c.selector||e);if(i=i||[],1===d.length){if(2<(r=d[0]=d[0].slice(0)).length&&"ID"===(s=r[0]).type&&h.getById&&9===t.nodeType&&_&&b.relative[r[1].type]){if(!(t=(b.find.ID(s.matches[0].replace(ie,u),t)||[])[0]))return i;c&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(n=V.needsContext.test(e)?0:r.length;n--&&(s=r[n],!b.relative[o=s.type]);)if((l=b.find[o])&&(a=l(s.matches[0].replace(ie,u),ee.test(r[0].type)&&pe(t.parentNode)||t))){if(r.splice(n,1),!(e=a.length&&he(r)))return P.apply(i,a),i;break}}return(c||p(e,d))(a,t,!_,i,ee.test(e)&&pe(t.parentNode)||t),i},h.sortStable=x.split("").sort(D).join("")===x,h.detectDuplicates=!!d,g(),h.sortDetached=se(function(e){return 1&e.compareDocumentPosition(k.createElement("div"))}),se(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||oe("type|href|height|width",function(e,t,i){return i?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),h.attributes&&se(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||oe("value",function(e,t,i){return i||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),se(function(e){return null==e.getAttribute("disabled")})||oe(F,function(e,t,i){var a;return i?void 0:!0===e[t]?t.toLowerCase():(a=e.getAttributeNode(t))&&a.specified?a.value:null}),ae}(h);w.find=f,w.expr=f.selectors,w.expr[":"]=w.expr.pseudos,w.unique=f.uniqueSort,w.text=f.getText,w.isXMLDoc=f.isXML,w.contains=f.contains;var y=w.expr.match.needsContext,b=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,$=/^.[^:#\[\.,]*$/;function k(e,i,a){if(w.isFunction(i))return w.grep(e,function(e,t){return!!i.call(e,t,e)!==a});if(i.nodeType)return w.grep(e,function(e){return e===i!==a});if("string"==typeof i){if($.test(i))return w.filter(i,e,a);i=w.filter(i,e)}return w.grep(e,function(e){return 0<=n.call(i,e)!==a})}w.filter=function(e,t,i){var a=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===a.nodeType?w.find.matchesSelector(a,e)?[a]:[]:w.find.matches(e,w.grep(t,function(e){return 1===e.nodeType}))},w.fn.extend({find:function(e){var t,i=this.length,a=[],n=this;if("string"!=typeof e)return this.pushStack(w(e).filter(function(){for(t=0;t<i;t++)if(w.contains(n[t],this))return!0}));for(t=0;t<i;t++)w.find(e,n[t],a);return(a=this.pushStack(1<i?w.unique(a):a)).selector=this.selector?this.selector+" "+e:e,a},filter:function(e){return this.pushStack(k(this,e||[],!1))},not:function(e){return this.pushStack(k(this,e||[],!0))},is:function(e){return!!k(this,"string"==typeof e&&y.test(e)?w(e):e||[],!1).length}});var x,C=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;(w.fn.init=function(e,t){var i,a;if(!e)return this;if("string"!=typeof e)return e.nodeType?(this.context=this[0]=e,this.length=1,this):w.isFunction(e)?void 0!==x.ready?x.ready(e):e(w):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),w.makeArray(e,this));if(!(i="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:C.exec(e))||!i[1]&&t)return!t||t.jquery?(t||x).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof w?t[0]:t,w.merge(this,w.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:_,!0)),b.test(i[1])&&w.isPlainObject(t))for(i in t)w.isFunction(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(a=_.getElementById(i[2]))&&a.parentNode&&(this.length=1,this[0]=a),this.context=_,this.selector=e,this}).prototype=w.fn,x=w(_);var S=/^(?:parents|prev(?:Until|All))/,T={children:!0,contents:!0,next:!0,prev:!0};function j(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}w.extend({dir:function(e,t,i){for(var a=[],n=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(n&&w(e).is(i))break;a.push(e)}return a},sibling:function(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}}),w.fn.extend({has:function(e){var t=w(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(w.contains(this,t[e]))return!0})},closest:function(e,t){for(var i,a=0,n=this.length,r=[],s=y.test(e)||"string"!=typeof e?w(e,t||this.context):0;a<n;a++)for(i=this[a];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(s?-1<s.index(i):1===i.nodeType&&w.find.matchesSelector(i,e))){r.push(i);break}return this.pushStack(1<r.length?w.unique(r):r)},index:function(e){return e?"string"==typeof e?n.call(w(e),this[0]):n.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(w.unique(w.merge(this.get(),w(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),w.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return w.dir(e,"parentNode")},parentsUntil:function(e,t,i){return w.dir(e,"parentNode",i)},next:function(e){return j(e,"nextSibling")},prev:function(e){return j(e,"previousSibling")},nextAll:function(e){return w.dir(e,"nextSibling")},prevAll:function(e){return w.dir(e,"previousSibling")},nextUntil:function(e,t,i){return w.dir(e,"nextSibling",i)},prevUntil:function(e,t,i){return w.dir(e,"previousSibling",i)},siblings:function(e){return w.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return w.sibling(e.firstChild)},contents:function(e){return e.contentDocument||w.merge([],e.childNodes)}},function(a,n){w.fn[a]=function(e,t){var i=w.map(this,n,e);return"Until"!==a.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=w.filter(t,i)),1<this.length&&(T[a]||w.unique(i),S.test(a)&&i.reverse()),this.pushStack(i)}});var D,E=/\S+/g,M={};function A(){_.removeEventListener("DOMContentLoaded",A,!1),h.removeEventListener("load",A,!1),w.ready()}w.Callbacks=function(n){var e,i;n="string"==typeof n?M[n]||(i=M[e=n]={},w.each(e.match(E)||[],function(e,t){i[t]=!0}),i):w.extend({},n);var t,a,r,s,o,l,c=[],d=!n.once&&[],u=function(e){for(t=n.memory&&e,a=!0,l=s||0,s=0,o=c.length,r=!0;c&&l<o;l++)if(!1===c[l].apply(e[0],e[1])&&n.stopOnFalse){t=!1;break}r=!1,c&&(d?d.length&&u(d.shift()):t?c=[]:p.disable())},p={add:function(){if(c){var e=c.length;!function a(e){w.each(e,function(e,t){var i=w.type(t);"function"===i?n.unique&&p.has(t)||c.push(t):t&&t.length&&"string"!==i&&a(t)})}(arguments),r?o=c.length:t&&(s=e,u(t))}return this},remove:function(){return c&&w.each(arguments,function(e,t){for(var i;-1<(i=w.inArray(t,c,i));)c.splice(i,1),r&&(i<=o&&o--,i<=l&&l--)}),this},has:function(e){return e?-1<w.inArray(e,c):!(!c||!c.length)},empty:function(){return c=[],o=0,this},disable:function(){return c=d=t=void 0,this},disabled:function(){return!c},lock:function(){return d=void 0,t||p.disable(),this},locked:function(){return!d},fireWith:function(e,t){return!c||a&&!d||(t=[e,(t=t||[]).slice?t.slice():t],r?d.push(t):u(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!a}};return p},w.extend({Deferred:function(e){var r=[["resolve","done",w.Callbacks("once memory"),"resolved"],["reject","fail",w.Callbacks("once memory"),"rejected"],["notify","progress",w.Callbacks("memory")]],n="pending",s={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},then:function(){var n=arguments;return w.Deferred(function(a){w.each(r,function(e,t){var i=w.isFunction(n[e])&&n[e];o[t[1]](function(){var e=i&&i.apply(this,arguments);e&&w.isFunction(e.promise)?e.promise().done(a.resolve).fail(a.reject).progress(a.notify):a[t[0]+"With"](this===s?a.promise():this,i?[e]:arguments)})}),n=null}).promise()},promise:function(e){return null!=e?w.extend(e,s):s}},o={};return s.pipe=s.then,w.each(r,function(e,t){var i=t[2],a=t[3];s[t[1]]=i.add,a&&i.add(function(){n=a},r[1^e][2].disable,r[2][2].lock),o[t[0]]=function(){return o[t[0]+"With"](this===o?s:this,arguments),this},o[t[0]+"With"]=i.fireWith}),s.promise(o),e&&e.call(o,o),o},when:function(e){function t(t,i,a){return function(e){i[t]=this,a[t]=1<arguments.length?d.call(arguments):e,a===n?c.notifyWith(i,a):--l||c.resolveWith(i,a)}}var n,i,a,r=0,s=d.call(arguments),o=s.length,l=1!==o||e&&w.isFunction(e.promise)?o:0,c=1===l?e:w.Deferred();if(1<o)for(n=new Array(o),i=new Array(o),a=new Array(o);r<o;r++)s[r]&&w.isFunction(s[r].promise)?s[r].promise().done(t(r,a,s)).fail(c.reject).progress(t(r,i,n)):--l;return l||c.resolveWith(a,s),c.promise()}}),w.fn.ready=function(e){return w.ready.promise().done(e),this},w.extend({isReady:!1,readyWait:1,holdReady:function(e){e?w.readyWait++:w.ready(!0)},ready:function(e){(!0===e?--w.readyWait:w.isReady)||((w.isReady=!0)!==e&&0<--w.readyWait||(D.resolveWith(_,[w]),w.fn.triggerHandler&&(w(_).triggerHandler("ready"),w(_).off("ready"))))}}),w.ready.promise=function(e){return D||(D=w.Deferred(),"complete"===_.readyState?setTimeout(w.ready):(_.addEventListener("DOMContentLoaded",A,!1),h.addEventListener("load",A,!1))),D.promise(e)},w.ready.promise();var I=w.access=function(e,t,i,a,n,r,s){var o=0,l=e.length,c=null==i;if("object"===w.type(i))for(o in n=!0,i)w.access(e,t,o,i[o],!0,r,s);else if(void 0!==a&&(n=!0,w.isFunction(a)||(s=!0),c&&(t=s?(t.call(e,a),null):(c=t,function(e,t,i){return c.call(w(e),i)})),t))for(;o<l;o++)t(e[o],i,s?a:a.call(e[o],o,t(e[o],i)));return n?e:c?t.call(e):l?t(e[0],i):r};function P(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=w.expando+Math.random()}w.acceptData=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType},P.uid=1,P.accepts=w.acceptData,P.prototype={key:function(t){if(!P.accepts(t))return 0;var i={},a=t[this.expando];if(!a){a=P.uid++;try{i[this.expando]={value:a},Object.defineProperties(t,i)}catch(e){i[this.expando]=a,w.extend(t,i)}}return this.cache[a]||(this.cache[a]={}),a},set:function(e,t,i){var a,n=this.key(e),r=this.cache[n];if("string"==typeof t)r[t]=i;else if(w.isEmptyObject(r))w.extend(this.cache[n],t);else for(a in t)r[a]=t[a];return r},get:function(e,t){var i=this.cache[this.key(e)];return void 0===t?i:i[t]},access:function(e,t,i){var a;return void 0===t||t&&"string"==typeof t&&void 0===i?void 0!==(a=this.get(e,t))?a:this.get(e,w.camelCase(t)):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,a,n,r=this.key(e),s=this.cache[r];if(void 0===t)this.cache[r]={};else{i=(a=w.isArray(t)?t.concat(t.map(w.camelCase)):(n=w.camelCase(t),t in s?[t,n]:(a=n)in s?[a]:a.match(E)||[])).length;for(;i--;)delete s[a[i]]}},hasData:function(e){return!w.isEmptyObject(this.cache[e[this.expando]]||{})},discard:function(e){e[this.expando]&&delete this.cache[e[this.expando]]}};var O=new P,N=new P,F=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,L=/([A-Z])/g;function H(e,t,i){var a;if(void 0===i&&1===e.nodeType)if(a="data-"+t.replace(L,"-$1").toLowerCase(),"string"==typeof(i=e.getAttribute(a))){try{i="true"===i||"false"!==i&&("null"===i?null:+i+""===i?+i:F.test(i)?w.parseJSON(i):i)}catch(e){}N.set(e,t,i)}else i=void 0;return i}w.extend({hasData:function(e){return N.hasData(e)||O.hasData(e)},data:function(e,t,i){return N.access(e,t,i)},removeData:function(e,t){N.remove(e,t)},_data:function(e,t,i){return O.access(e,t,i)},_removeData:function(e,t){O.remove(e,t)}}),w.fn.extend({data:function(a,e){var t,i,n,r=this[0],s=r&&r.attributes;if(void 0!==a)return"object"==typeof a?this.each(function(){N.set(this,a)}):I(this,function(t){var e,i=w.camelCase(a);if(r&&void 0===t){if(void 0!==(e=N.get(r,a)))return e;if(void 0!==(e=N.get(r,i)))return e;if(void 0!==(e=H(r,i,void 0)))return e}else this.each(function(){var e=N.get(this,i);N.set(this,i,t),-1!==a.indexOf("-")&&void 0!==e&&N.set(this,a,t)})},null,e,1<arguments.length,null,!0);if(this.length&&(n=N.get(r),1===r.nodeType&&!O.get(r,"hasDataAttrs"))){for(t=s.length;t--;)s[t]&&(0===(i=s[t].name).indexOf("data-")&&(i=w.camelCase(i.slice(5)),H(r,i,n[i])));O.set(r,"hasDataAttrs",!0)}return n},removeData:function(e){return this.each(function(){N.remove(this,e)})}}),w.extend({queue:function(e,t,i){var a;return e?(t=(t||"fx")+"queue",a=O.get(e,t),i&&(!a||w.isArray(i)?a=O.access(e,t,w.makeArray(i)):a.push(i)),a||[]):void 0},dequeue:function(e,t){t=t||"fx";var i=w.queue(e,t),a=i.length,n=i.shift(),r=w._queueHooks(e,t);"inprogress"===n&&(n=i.shift(),a--),n&&("fx"===t&&i.unshift("inprogress"),delete r.stop,n.call(e,function(){w.dequeue(e,t)},r)),!a&&r&&r.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return O.get(e,i)||O.access(e,i,{empty:w.Callbacks("once memory").add(function(){O.remove(e,[t+"queue",i])})})}}),w.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?w.queue(this[0],t):void 0===i?this:this.each(function(){var e=w.queue(this,t,i);w._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&w.dequeue(this,t)})},dequeue:function(e){return this.each(function(){w.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--n||r.resolveWith(s,[s])}var a,n=1,r=w.Deferred(),s=this,o=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(a=O.get(s[o],e+"queueHooks"))&&a.empty&&(n++,a.empty.add(i));return i(),r.promise(t)}});function z(e,t){return e=t||e,"none"===w.css(e,"display")||!w.contains(e.ownerDocument,e)}var R,B,q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,W=["Top","Right","Bottom","Left"],U=/^(?:checkbox|radio)$/i;R=_.createDocumentFragment().appendChild(_.createElement("div")),(B=_.createElement("input")).setAttribute("type","radio"),B.setAttribute("checked","checked"),B.setAttribute("name","t"),R.appendChild(B),g.checkClone=R.cloneNode(!0).cloneNode(!0).lastChild.checked,R.innerHTML="<textarea>x</textarea>",g.noCloneChecked=!!R.cloneNode(!0).lastChild.defaultValue;var Y="undefined";g.focusinBubbles="onfocusin"in h;var X=/^key/,G=/^(?:mouse|pointer|contextmenu)|click/,V=/^(?:focusinfocus|focusoutblur)$/,K=/^([^.]*)(?:\.(.+)|)$/;function Q(){return!0}function Z(){return!1}function J(){try{return _.activeElement}catch(e){}}w.event={global:{},add:function(t,e,i,a,n){var r,s,o,l,c,d,u,p,f,h,m,v=O.get(t);if(v)for(i.handler&&(i=(r=i).handler,n=r.selector),i.guid||(i.guid=w.guid++),(l=v.events)||(l=v.events={}),(s=v.handle)||(s=v.handle=function(e){return typeof w!=Y&&w.event.triggered!==e.type?w.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(E)||[""]).length;c--;)f=m=(o=K.exec(e[c])||[])[1],h=(o[2]||"").split(".").sort(),f&&(u=w.event.special[f]||{},f=(n?u.delegateType:u.bindType)||f,u=w.event.special[f]||{},d=w.extend({type:f,origType:m,data:a,handler:i,guid:i.guid,selector:n,needsContext:n&&w.expr.match.needsContext.test(n),namespace:h.join(".")},r),(p=l[f])||((p=l[f]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,a,h,s)||t.addEventListener&&t.addEventListener(f,s,!1)),u.add&&(u.add.call(t,d),d.handler.guid||(d.handler.guid=i.guid)),n?p.splice(p.delegateCount++,0,d):p.push(d),w.event.global[f]=!0)},remove:function(e,t,i,a,n){var r,s,o,l,c,d,u,p,f,h,m,v=O.hasData(e)&&O.get(e);if(v&&(l=v.events)){for(c=(t=(t||"").match(E)||[""]).length;c--;)if(f=m=(o=K.exec(t[c])||[])[1],h=(o[2]||"").split(".").sort(),f){for(u=w.event.special[f]||{},p=l[f=(a?u.delegateType:u.bindType)||f]||[],o=o[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=p.length;r--;)d=p[r],!n&&m!==d.origType||i&&i.guid!==d.guid||o&&!o.test(d.namespace)||a&&a!==d.selector&&("**"!==a||!d.selector)||(p.splice(r,1),d.selector&&p.delegateCount--,u.remove&&u.remove.call(e,d));s&&!p.length&&(u.teardown&&!1!==u.teardown.call(e,h,v.handle)||w.removeEvent(e,f,v.handle),delete l[f])}else for(f in l)w.event.remove(e,f+t[c],i,a,!0);w.isEmptyObject(l)&&(delete v.handle,O.remove(e,"events"))}},trigger:function(e,t,i,a){var n,r,s,o,l,c,d,u=[i||_],p=v.call(e,"type")?e.type:e,f=v.call(e,"namespace")?e.namespace.split("."):[];if(r=s=i=i||_,3!==i.nodeType&&8!==i.nodeType&&!V.test(p+w.event.triggered)&&(0<=p.indexOf(".")&&(p=(f=p.split(".")).shift(),f.sort()),l=p.indexOf(":")<0&&"on"+p,(e=e[w.expando]?e:new w.Event(p,"object"==typeof e&&e)).isTrigger=a?2:3,e.namespace=f.join("."),e.namespace_re=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:w.makeArray(t,[e]),d=w.event.special[p]||{},a||!d.trigger||!1!==d.trigger.apply(i,t))){if(!a&&!d.noBubble&&!w.isWindow(i)){for(o=d.delegateType||p,V.test(o+p)||(r=r.parentNode);r;r=r.parentNode)u.push(r),s=r;s===(i.ownerDocument||_)&&u.push(s.defaultView||s.parentWindow||h)}for(n=0;(r=u[n++])&&!e.isPropagationStopped();)e.type=1<n?o:d.bindType||p,(c=(O.get(r,"events")||{})[e.type]&&O.get(r,"handle"))&&c.apply(r,t),(c=l&&r[l])&&c.apply&&w.acceptData(r)&&(e.result=c.apply(r,t),!1===e.result&&e.preventDefault());return e.type=p,a||e.isDefaultPrevented()||d._default&&!1!==d._default.apply(u.pop(),t)||!w.acceptData(i)||l&&w.isFunction(i[p])&&!w.isWindow(i)&&((s=i[l])&&(i[l]=null),i[w.event.triggered=p](),w.event.triggered=void 0,s&&(i[l]=s)),e.result}},dispatch:function(e){e=w.event.fix(e);var t,i,a,n,r,s=[],o=d.call(arguments),l=(O.get(this,"events")||{})[e.type]||[],c=w.event.special[e.type]||{};if((o[0]=e).delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,e)){for(s=w.event.handlers.call(this,e,l),t=0;(n=s[t++])&&!e.isPropagationStopped();)for(e.currentTarget=n.elem,i=0;(r=n.handlers[i++])&&!e.isImmediatePropagationStopped();)e.namespace_re&&!e.namespace_re.test(r.namespace)||(e.handleObj=r,e.data=r.data,void 0!==(a=((w.event.special[r.origType]||{}).handle||r.handler).apply(n.elem,o))&&!1===(e.result=a)&&(e.preventDefault(),e.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,t){var i,a,n,r,s=[],o=t.delegateCount,l=e.target;if(o&&l.nodeType&&(!e.button||"click"!==e.type))for(;l!==this;l=l.parentNode||this)if(!0!==l.disabled||"click"!==e.type){for(a=[],i=0;i<o;i++)void 0===a[n=(r=t[i]).selector+" "]&&(a[n]=r.needsContext?0<=w(n,this).index(l):w.find(n,this,null,[l]).length),a[n]&&a.push(r);a.length&&s.push({elem:l,handlers:a})}return o<t.length&&s.push({elem:this,handlers:t.slice(o)}),s},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var i,a,n,r=t.button;return null==e.pageX&&null!=t.clientX&&(a=(i=e.target.ownerDocument||_).documentElement,n=i.body,e.pageX=t.clientX+(a&&a.scrollLeft||n&&n.scrollLeft||0)-(a&&a.clientLeft||n&&n.clientLeft||0),e.pageY=t.clientY+(a&&a.scrollTop||n&&n.scrollTop||0)-(a&&a.clientTop||n&&n.clientTop||0)),e.which||void 0===r||(e.which=1&r?1:2&r?3:4&r?2:0),e}},fix:function(e){if(e[w.expando])return e;var t,i,a,n=e.type,r=e,s=this.fixHooks[n];for(s||(this.fixHooks[n]=s=G.test(n)?this.mouseHooks:X.test(n)?this.keyHooks:{}),a=s.props?this.props.concat(s.props):this.props,e=new w.Event(r),t=a.length;t--;)e[i=a[t]]=r[i];return e.target||(e.target=_),3===e.target.nodeType&&(e.target=e.target.parentNode),s.filter?s.filter(e,r):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==J()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===J()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&w.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return w.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,i,a){var n=w.extend(new w.Event,i,{type:e,isSimulated:!0,originalEvent:{}});a?w.event.trigger(n,null,t):w.event.dispatch.call(t,n),n.isDefaultPrevented()&&i.preventDefault()}},w.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i,!1)},w.Event=function(e,t){return this instanceof w.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Q:Z):this.type=e,t&&w.extend(this,t),this.timeStamp=e&&e.timeStamp||w.now(),void(this[w.expando]=!0)):new w.Event(e,t)},w.Event.prototype={isDefaultPrevented:Z,isPropagationStopped:Z,isImmediatePropagationStopped:Z,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Q,e&&e.preventDefault&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Q,e&&e.stopPropagation&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Q,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},w.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,n){w.event.special[e]={delegateType:n,bindType:n,handle:function(e){var t,i=e.relatedTarget,a=e.handleObj;return i&&(i===this||w.contains(this,i))||(e.type=a.origType,t=a.handler.apply(this,arguments),e.type=n),t}}}),g.focusinBubbles||w.each({focus:"focusin",blur:"focusout"},function(i,a){function n(e){w.event.simulate(a,e.target,w.event.fix(e),!0)}w.event.special[a]={setup:function(){var e=this.ownerDocument||this,t=O.access(e,a);t||e.addEventListener(i,n,!0),O.access(e,a,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=O.access(e,a)-1;t?O.access(e,a,t):(e.removeEventListener(i,n,!0),O.remove(e,a))}}}),w.fn.extend({on:function(e,t,i,a,n){var r,s;if("object"==typeof e){for(s in"string"!=typeof t&&(i=i||t,t=void 0),e)this.on(s,t,i,e[s],n);return this}if(null==i&&null==a?(a=t,i=t=void 0):null==a&&("string"==typeof t?(a=i,i=void 0):(a=i,i=t,t=void 0)),!1===a)a=Z;else if(!a)return this;return 1===n&&(r=a,(a=function(e){return w().off(e),r.apply(this,arguments)}).guid=r.guid||(r.guid=w.guid++)),this.each(function(){w.event.add(this,e,a,i,t)})},one:function(e,t,i,a){return this.on(e,t,i,a,1)},off:function(e,t,i){var a,n;if(e&&e.preventDefault&&e.handleObj)return a=e.handleObj,w(e.delegateTarget).off(a.namespace?a.origType+"."+a.namespace:a.origType,a.selector,a.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=Z),this.each(function(){w.event.remove(this,e,i,t)});for(n in e)this.off(n,t,e[n]);return this},trigger:function(e,t){return this.each(function(){w.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];return i?w.event.trigger(e,t,i,!0):void 0}});var ee=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,te=/<([\w:]+)/,ie=/<|&#?\w+;/,ae=/<(?:script|style|link)/i,ne=/checked\s*(?:[^=]|=\s*.checked.)/i,re=/^$|\/(?:java|ecma)script/i,se=/^true\/(.*)/,oe=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,le={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ce(e,t){return w.nodeName(e,"table")&&w.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function de(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function ue(e){var t=se.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function pe(e,t){for(var i=0,a=e.length;i<a;i++)O.set(e[i],"globalEval",!t||O.get(t[i],"globalEval"))}function fe(e,t){var i,a,n,r,s,o,l,c;if(1===t.nodeType){if(O.hasData(e)&&(r=O.access(e),s=O.set(t,r),c=r.events))for(n in delete s.handle,s.events={},c)for(i=0,a=c[n].length;i<a;i++)w.event.add(t,n,c[n][i]);N.hasData(e)&&(o=N.access(e),l=w.extend({},o),N.set(t,l))}}function he(e,t){var i=e.getElementsByTagName?e.getElementsByTagName(t||"*"):e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&w.nodeName(e,t)?w.merge([e],i):i}le.optgroup=le.option,le.tbody=le.tfoot=le.colgroup=le.caption=le.thead,le.th=le.td,w.extend({clone:function(e,t,i){var a,n,r,s,o,l,c,d=e.cloneNode(!0),u=w.contains(e.ownerDocument,e);if(!(g.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||w.isXMLDoc(e)))for(s=he(d),a=0,n=(r=he(e)).length;a<n;a++)o=r[a],l=s[a],"input"===(c=l.nodeName.toLowerCase())&&U.test(o.type)?l.checked=o.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=o.defaultValue);if(t)if(i)for(r=r||he(e),s=s||he(d),a=0,n=r.length;a<n;a++)fe(r[a],s[a]);else fe(e,d);return 0<(s=he(d,"script")).length&&pe(s,!u&&he(e,"script")),d},buildFragment:function(e,t,i,a){for(var n,r,s,o,l,c,d=t.createDocumentFragment(),u=[],p=0,f=e.length;p<f;p++)if((n=e[p])||0===n)if("object"===w.type(n))w.merge(u,n.nodeType?[n]:n);else if(ie.test(n)){for(r=r||d.appendChild(t.createElement("div")),s=(te.exec(n)||["",""])[1].toLowerCase(),o=le[s]||le._default,r.innerHTML=o[1]+n.replace(ee,"<$1><$2>")+o[2],c=o[0];c--;)r=r.lastChild;w.merge(u,r.childNodes),(r=d.firstChild).textContent=""}else u.push(t.createTextNode(n));for(d.textContent="",p=0;n=u[p++];)if((!a||-1===w.inArray(n,a))&&(l=w.contains(n.ownerDocument,n),r=he(d.appendChild(n),"script"),l&&pe(r),i))for(c=0;n=r[c++];)re.test(n.type||"")&&i.push(n);return d},cleanData:function(e){for(var t,i,a,n,r=w.event.special,s=0;void 0!==(i=e[s]);s++){if(w.acceptData(i)&&((n=i[O.expando])&&(t=O.cache[n]))){if(t.events)for(a in t.events)r[a]?w.event.remove(i,a):w.removeEvent(i,a,t.handle);O.cache[n]&&delete O.cache[n]}delete N.cache[i[N.expando]]}}}),w.fn.extend({text:function(e){return I(this,function(e){return void 0===e?w.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||ce(this,e).appendChild(e)})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=ce(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var i,a=e?w.filter(e,this):this,n=0;null!=(i=a[n]);n++)t||1!==i.nodeType||w.cleanData(he(i)),i.parentNode&&(t&&w.contains(i.ownerDocument,i)&&pe(he(i,"script")),i.parentNode.removeChild(i));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(w.cleanData(he(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return w.clone(this,e,t)})},html:function(e){return I(this,function(e){var t=this[0]||{},i=0,a=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!ae.test(e)&&!le[(te.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(ee,"<$1><$2>");try{for(;i<a;i++)1===(t=this[i]||{}).nodeType&&(w.cleanData(he(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var t=arguments[0];return this.domManip(arguments,function(e){t=this.parentNode,w.cleanData(he(this)),t&&t.replaceChild(e,this)}),t&&(t.length||t.nodeType)?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(i,a){i=m.apply([],i);var e,t,n,r,s,o,l=0,c=this.length,d=this,u=c-1,p=i[0],f=w.isFunction(p);if(f||1<c&&"string"==typeof p&&!g.checkClone&&ne.test(p))return this.each(function(e){var t=d.eq(e);f&&(i[0]=p.call(this,e,t.html())),t.domManip(i,a)});if(c&&(t=(e=w.buildFragment(i,this[0].ownerDocument,!1,this)).firstChild,1===e.childNodes.length&&(e=t),t)){for(r=(n=w.map(he(e,"script"),de)).length;l<c;l++)s=e,l!==u&&(s=w.clone(s,!0,!0),r&&w.merge(n,he(s,"script"))),a.call(this[l],s,l);if(r)for(o=n[n.length-1].ownerDocument,w.map(n,ue),l=0;l<r;l++)s=n[l],re.test(s.type||"")&&!O.access(s,"globalEval")&&w.contains(o,s)&&(s.src?w._evalUrl&&w._evalUrl(s.src):w.globalEval(s.textContent.replace(oe,"")))}return this}}),w.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,s){w.fn[e]=function(e){for(var t,i=[],a=w(e),n=a.length-1,r=0;r<=n;r++)t=r===n?this:this.clone(!0),w(a[r])[s](t),o.apply(i,t.get());return this.pushStack(i)}});var me,ve={};function ge(e,t){var i,a=w(t.createElement(e)).appendTo(t.body),n=h.getDefaultComputedStyle&&(i=h.getDefaultComputedStyle(a[0]))?i.display:w.css(a[0],"display");return a.detach(),n}function _e(e){var t=_,i=ve[e];return i||("none"!==(i=ge(e,t))&&i||((t=(me=(me||w("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement))[0].contentDocument).write(),t.close(),i=ge(e,t),me.detach()),ve[e]=i),i}var ye=/^margin/,be=new RegExp("^("+q+")(?!px)[a-z%]+$","i"),$e=function(e){return e.ownerDocument.defaultView.getComputedStyle(e,null)};function ke(e,t,i){var a,n,r,s,o=e.style;return(i=i||$e(e))&&(s=i.getPropertyValue(t)||i[t]),i&&(""!==s||w.contains(e.ownerDocument,e)||(s=w.style(e,t)),be.test(s)&&ye.test(t)&&(a=o.width,n=o.minWidth,r=o.maxWidth,o.minWidth=o.maxWidth=o.width=s,s=i.width,o.width=a,o.minWidth=n,o.maxWidth=r)),void 0!==s?s+"":s}function we(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}!function(){var t,i,a=_.documentElement,n=_.createElement("div"),r=_.createElement("div");if(r.style){function e(){r.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",r.innerHTML="",a.appendChild(n);var e=h.getComputedStyle(r,null);t="1%"!==e.top,i="4px"===e.width,a.removeChild(n)}r.style.backgroundClip="content-box",r.cloneNode(!0).style.backgroundClip="",g.clearCloneStyle="content-box"===r.style.backgroundClip,n.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",n.appendChild(r),h.getComputedStyle&&w.extend(g,{pixelPosition:function(){return e(),t},boxSizingReliable:function(){return null==i&&e(),i},reliableMarginRight:function(){var e,t=r.appendChild(_.createElement("div"));return t.style.cssText=r.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",t.style.marginRight=t.style.width="0",r.style.width="1px",a.appendChild(n),e=!parseFloat(h.getComputedStyle(t,null).marginRight),a.removeChild(n),e}})}}(),w.swap=function(e,t,i,a){var n,r,s={};for(r in t)s[r]=e.style[r],e.style[r]=t[r];for(r in n=i.apply(e,a||[]),t)e.style[r]=s[r];return n};var xe=/^(none|table(?!-c[ea]).+)/,Ce=new RegExp("^("+q+")(.*)$","i"),Se=new RegExp("^([+-])=("+q+")","i"),Te={position:"absolute",visibility:"hidden",display:"block"},je={letterSpacing:"0",fontWeight:"400"},De=["Webkit","O","Moz","ms"];function Ee(e,t){if(t in e)return t;for(var i=t[0].toUpperCase()+t.slice(1),a=t,n=De.length;n--;)if((t=De[n]+i)in e)return t;return a}function Me(e,t,i){var a=Ce.exec(t);return a?Math.max(0,a[1]-(i||0))+(a[2]||"px"):t}function Ae(e,t,i,a,n){for(var r=i===(a?"border":"content")?4:"width"===t?1:0,s=0;r<4;r+=2)"margin"===i&&(s+=w.css(e,i+W[r],!0,n)),a?("content"===i&&(s-=w.css(e,"padding"+W[r],!0,n)),"margin"!==i&&(s-=w.css(e,"border"+W[r]+"Width",!0,n))):(s+=w.css(e,"padding"+W[r],!0,n),"padding"!==i&&(s+=w.css(e,"border"+W[r]+"Width",!0,n)));return s}function Ie(e,t,i){var a=!0,n="width"===t?e.offsetWidth:e.offsetHeight,r=$e(e),s="border-box"===w.css(e,"boxSizing",!1,r);if(n<=0||null==n){if(((n=ke(e,t,r))<0||null==n)&&(n=e.style[t]),be.test(n))return n;a=s&&(g.boxSizingReliable()||n===e.style[t]),n=parseFloat(n)||0}return n+Ae(e,t,i||(s?"border":"content"),a,r)+"px"}function Pe(e,t){for(var i,a,n,r=[],s=0,o=e.length;s<o;s++)(a=e[s]).style&&(r[s]=O.get(a,"olddisplay"),i=a.style.display,t?(r[s]||"none"!==i||(a.style.display=""),""===a.style.display&&z(a)&&(r[s]=O.access(a,"olddisplay",_e(a.nodeName)))):(n=z(a),"none"===i&&n||O.set(a,"olddisplay",n?i:w.css(a,"display"))));for(s=0;s<o;s++)(a=e[s]).style&&(t&&"none"!==a.style.display&&""!==a.style.display||(a.style.display=t?r[s]||"":"none"));return e}function Oe(e,t,i,a,n){return new Oe.prototype.init(e,t,i,a,n)}w.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=ke(e,"opacity");return""===i?"1":i}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(e,t,i,a){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var n,r,s,o=w.camelCase(t),l=e.style;return t=w.cssProps[o]||(w.cssProps[o]=Ee(l,o)),s=w.cssHooks[t]||w.cssHooks[o],void 0===i?s&&"get"in s&&void 0!==(n=s.get(e,!1,a))?n:l[t]:("string"===(r=typeof i)&&(n=Se.exec(i))&&(i=(n[1]+1)*n[2]+parseFloat(w.css(e,t)),r="number"),void(null!=i&&i==i&&("number"!==r||w.cssNumber[o]||(i+="px"),g.clearCloneStyle||""!==i||0!==t.indexOf("background")||(l[t]="inherit"),s&&"set"in s&&void 0===(i=s.set(e,i,a))||(l[t]=i))))}},css:function(e,t,i,a){var n,r,s,o=w.camelCase(t);return t=w.cssProps[o]||(w.cssProps[o]=Ee(e.style,o)),(s=w.cssHooks[t]||w.cssHooks[o])&&"get"in s&&(n=s.get(e,!0,i)),void 0===n&&(n=ke(e,t,a)),"normal"===n&&t in je&&(n=je[t]),""===i||i?(r=parseFloat(n),!0===i||w.isNumeric(r)?r||0:n):n}}),w.each(["height","width"],function(e,n){w.cssHooks[n]={get:function(e,t,i){return t?xe.test(w.css(e,"display"))&&0===e.offsetWidth?w.swap(e,Te,function(){return Ie(e,n,i)}):Ie(e,n,i):void 0},set:function(e,t,i){var a=i&&$e(e);return Me(0,t,i?Ae(e,n,i,"border-box"===w.css(e,"boxSizing",!1,a),a):0)}}}),w.cssHooks.marginRight=we(g.reliableMarginRight,function(e,t){return t?w.swap(e,{display:"inline-block"},ke,[e,"marginRight"]):void 0}),w.each({margin:"",padding:"",border:"Width"},function(n,r){w.cssHooks[n+r]={expand:function(e){for(var t=0,i={},a="string"==typeof e?e.split(" "):[e];t<4;t++)i[n+W[t]+r]=a[t]||a[t-2]||a[0];return i}},ye.test(n)||(w.cssHooks[n+r].set=Me)}),w.fn.extend({css:function(e,t){return I(this,function(e,t,i){var a,n,r={},s=0;if(w.isArray(t)){for(a=$e(e),n=t.length;s<n;s++)r[t[s]]=w.css(e,t[s],!1,a);return r}return void 0!==i?w.style(e,t,i):w.css(e,t)},e,t,1<arguments.length)},show:function(){return Pe(this,!0)},hide:function(){return Pe(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){z(this)?w(this).show():w(this).hide()})}}),((w.Tween=Oe).prototype={constructor:Oe,init:function(e,t,i,a,n,r){this.elem=e,this.prop=i,this.easing=n||"swing",this.options=t,this.start=this.now=this.cur(),this.end=a,this.unit=r||(w.cssNumber[i]?"":"px")},cur:function(){var e=Oe.propHooks[this.prop];return e&&e.get?e.get(this):Oe.propHooks._default.get(this)},run:function(e){var t,i=Oe.propHooks[this.prop];return this.pos=t=this.options.duration?w.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):Oe.propHooks._default.set(this),this}}).init.prototype=Oe.prototype,(Oe.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=w.css(e.elem,e.prop,""))&&"auto"!==t?t:0:e.elem[e.prop]},set:function(e){w.fx.step[e.prop]?w.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[w.cssProps[e.prop]]||w.cssHooks[e.prop])?w.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}}).scrollTop=Oe.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},w.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},w.fx=Oe.prototype.init,w.fx.step={};var Ne,Fe,Le,He,ze,Re=/^(?:toggle|show|hide)$/,Be=new RegExp("^(?:([+-])=|)("+q+")([a-z%]*)$","i"),qe=/queueHooks$/,We=[function(t,e,i){var a,n,r,s,o,l,c,d=this,u={},p=t.style,f=t.nodeType&&z(t),h=O.get(t,"fxshow");for(a in i.queue||(null==(o=w._queueHooks(t,"fx")).unqueued&&(o.unqueued=0,l=o.empty.fire,o.empty.fire=function(){o.unqueued||l()}),o.unqueued++,d.always(function(){d.always(function(){o.unqueued--,w.queue(t,"fx").length||o.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],c=w.css(t,"display"),"inline"===("none"===c?O.get(t,"olddisplay")||_e(t.nodeName):c)&&"none"===w.css(t,"float")&&(p.display="inline-block")),i.overflow&&(p.overflow="hidden",d.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]})),e)if(n=e[a],Re.exec(n)){if(delete e[a],r=r||"toggle"===n,n===(f?"hide":"show")){if("show"!==n||!h||void 0===h[a])continue;f=!0}u[a]=h&&h[a]||w.style(t,a)}else c=void 0;if(w.isEmptyObject(u))"inline"===("none"===c?_e(t.nodeName):c)&&(p.display=c);else for(a in h?"hidden"in h&&(f=h.hidden):h=O.access(t,"fxshow",{}),r&&(h.hidden=!f),f?w(t).show():d.done(function(){w(t).hide()}),d.done(function(){var e;for(e in O.remove(t,"fxshow"),u)w.style(t,e,u[e])}),u)s=Ge(f?h[a]:0,a,d),a in h||(h[a]=s.start,f&&(s.end=s.start,s.start="width"===a||"height"===a?1:0))}],Ue={"*":[function(e,t){var i=this.createTween(e,t),a=i.cur(),n=Be.exec(t),r=n&&n[3]||(w.cssNumber[e]?"":"px"),s=(w.cssNumber[e]||"px"!==r&&+a)&&Be.exec(w.css(i.elem,e)),o=1,l=20;if(s&&s[3]!==r)for(r=r||s[3],n=n||[],s=+a||1;s/=o=o||".5",w.style(i.elem,e,s+r),o!==(o=i.cur()/a)&&1!==o&&--l;);return n&&(s=i.start=+s||+a||0,i.unit=r,i.end=n[1]?s+(n[1]+1)*n[2]:+n[2]),i}]};function Ye(){return setTimeout(function(){Ne=void 0}),Ne=w.now()}function Xe(e,t){var i,a=0,n={height:e};for(t=t?1:0;a<4;a+=2-t)n["margin"+(i=W[a])]=n["padding"+i]=e;return t&&(n.opacity=n.width=e),n}function Ge(e,t,i){for(var a,n=(Ue[t]||[]).concat(Ue["*"]),r=0,s=n.length;r<s;r++)if(a=n[r].call(i,t,e))return a}function Ve(r,e,t){var i,s,a=0,n=We.length,o=w.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var e=Ne||Ye(),t=Math.max(0,c.startTime+c.duration-e),i=1-(t/c.duration||0),a=0,n=c.tweens.length;a<n;a++)c.tweens[a].run(i);return o.notifyWith(r,[c,i,t]),i<1&&n?t:(o.resolveWith(r,[c]),!1)},c=o.promise({elem:r,props:w.extend({},e),opts:w.extend(!0,{specialEasing:{}},t),originalProperties:e,originalOptions:t,startTime:Ne||Ye(),duration:t.duration,tweens:[],createTween:function(e,t){var i=w.Tween(r,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(i),i},stop:function(e){var t=0,i=e?c.tweens.length:0;if(s)return this;for(s=!0;t<i;t++)c.tweens[t].run(1);return e?o.resolveWith(r,[c,e]):o.rejectWith(r,[c,e]),this}}),d=c.props;for(function(e,t){var i,a,n,r,s;for(i in e)if(n=t[a=w.camelCase(i)],r=e[i],w.isArray(r)&&(n=r[1],r=e[i]=r[0]),i!==a&&(e[a]=r,delete e[i]),(s=w.cssHooks[a])&&"expand"in s)for(i in r=s.expand(r),delete e[a],r)i in e||(e[i]=r[i],t[i]=n);else t[a]=n}(d,c.opts.specialEasing);a<n;a++)if(i=We[a].call(c,r,d,c.opts))return i;return w.map(d,Ge,c),w.isFunction(c.opts.start)&&c.opts.start.call(r,c),w.fx.timer(w.extend(l,{elem:r,anim:c,queue:c.opts.queue})),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always)}w.Animation=w.extend(Ve,{tweener:function(e,t){for(var i,a=0,n=(e=w.isFunction(e)?(t=e,["*"]):e.split(" ")).length;a<n;a++)i=e[a],Ue[i]=Ue[i]||[],Ue[i].unshift(t)},prefilter:function(e,t){t?We.unshift(e):We.push(e)}}),w.speed=function(e,t,i){var a=e&&"object"==typeof e?w.extend({},e):{complete:i||!i&&t||w.isFunction(e)&&e,duration:e,easing:i&&t||t&&!w.isFunction(t)&&t};return a.duration=w.fx.off?0:"number"==typeof a.duration?a.duration:a.duration in w.fx.speeds?w.fx.speeds[a.duration]:w.fx.speeds._default,null!=a.queue&&!0!==a.queue||(a.queue="fx"),a.old=a.complete,a.complete=function(){w.isFunction(a.old)&&a.old.call(this),a.queue&&w.dequeue(this,a.queue)},a},w.fn.extend({fadeTo:function(e,t,i,a){return this.filter(z).css("opacity",0).show().end().animate({opacity:t},e,i,a)},animate:function(t,e,i,a){function n(){var e=Ve(this,w.extend({},t),s);(r||O.get(this,"finish"))&&e.stop(!0)}var r=w.isEmptyObject(t),s=w.speed(e,i,a);return n.finish=n,r||!1===s.queue?this.each(n):this.queue(s.queue,n)},stop:function(n,e,r){function s(e){var t=e.stop;delete e.stop,t(r)}return"string"!=typeof n&&(r=e,e=n,n=void 0),e&&!1!==n&&this.queue(n||"fx",[]),this.each(function(){var e=!0,t=null!=n&&n+"queueHooks",i=w.timers,a=O.get(this);if(t)a[t]&&a[t].stop&&s(a[t]);else for(t in a)a[t]&&a[t].stop&&qe.test(t)&&s(a[t]);for(t=i.length;t--;)i[t].elem!==this||null!=n&&i[t].queue!==n||(i[t].anim.stop(r),e=!1,i.splice(t,1));!e&&r||w.dequeue(this,n)})},finish:function(s){return!1!==s&&(s=s||"fx"),this.each(function(){var e,t=O.get(this),i=t[s+"queue"],a=t[s+"queueHooks"],n=w.timers,r=i?i.length:0;for(t.finish=!0,w.queue(this,s,[]),a&&a.stop&&a.stop.call(this,!0),e=n.length;e--;)n[e].elem===this&&n[e].queue===s&&(n[e].anim.stop(!0),n.splice(e,1));for(e=0;e<r;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),w.each(["toggle","show","hide"],function(e,a){var n=w.fn[a];w.fn[a]=function(e,t,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(Xe(a,!0),e,t,i)}}),w.each({slideDown:Xe("show"),slideUp:Xe("hide"),slideToggle:Xe("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,a){w.fn[e]=function(e,t,i){return this.animate(a,e,t,i)}}),w.timers=[],w.fx.tick=function(){var e,t=0,i=w.timers;for(Ne=w.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||w.fx.stop(),Ne=void 0},w.fx.timer=function(e){w.timers.push(e),e()?w.fx.start():w.timers.pop()},w.fx.interval=13,w.fx.start=function(){Fe=Fe||setInterval(w.fx.tick,w.fx.interval)},w.fx.stop=function(){clearInterval(Fe),Fe=null},w.fx.speeds={slow:600,fast:200,_default:400},w.fn.delay=function(a,e){return a=w.fx&&w.fx.speeds[a]||a,e=e||"fx",this.queue(e,function(e,t){var i=setTimeout(e,a);t.stop=function(){clearTimeout(i)}})},Le=_.createElement("input"),He=_.createElement("select"),ze=He.appendChild(_.createElement("option")),Le.type="checkbox",g.checkOn=""!==Le.value,g.optSelected=ze.selected,He.disabled=!0,g.optDisabled=!ze.disabled,(Le=_.createElement("input")).value="t",Le.type="radio",g.radioValue="t"===Le.value;var Ke,Qe=w.expr.attrHandle;w.fn.extend({attr:function(e,t){return I(this,w.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){w.removeAttr(this,e)})}}),w.extend({attr:function(e,t,i){var a,n,r=e.nodeType;if(e&&3!==r&&8!==r&&2!==r)return typeof e.getAttribute==Y?w.prop(e,t,i):(1===r&&w.isXMLDoc(e)||(t=t.toLowerCase(),a=w.attrHooks[t]||(w.expr.match.bool.test(t)?Ke:void 0)),void 0===i?a&&"get"in a&&null!==(n=a.get(e,t))?n:null==(n=w.find.attr(e,t))?void 0:n:null!==i?a&&"set"in a&&void 0!==(n=a.set(e,i,t))?n:(e.setAttribute(t,i+""),i):void w.removeAttr(e,t))},removeAttr:function(e,t){var i,a,n=0,r=t&&t.match(E);if(r&&1===e.nodeType)for(;i=r[n++];)a=w.propFix[i]||i,w.expr.match.bool.test(i)&&(e[a]=!1),e.removeAttribute(i)},attrHooks:{type:{set:function(e,t){if(!g.radioValue&&"radio"===t&&w.nodeName(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}}}),Ke={set:function(e,t,i){return!1===t?w.removeAttr(e,i):e.setAttribute(i,i),i}},w.each(w.expr.match.bool.source.match(/\w+/g),function(e,t){var r=Qe[t]||w.find.attr;Qe[t]=function(e,t,i){var a,n;return i||(n=Qe[t],Qe[t]=a,a=null!=r(e,t,i)?t.toLowerCase():null,Qe[t]=n),a}});var Ze=/^(?:input|select|textarea|button)$/i;w.fn.extend({prop:function(e,t){return I(this,w.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[w.propFix[e]||e]})}}),w.extend({propFix:{for:"htmlFor",class:"className"},prop:function(e,t,i){var a,n,r=e.nodeType;if(e&&3!==r&&8!==r&&2!==r)return(1!==r||!w.isXMLDoc(e))&&(t=w.propFix[t]||t,n=w.propHooks[t]),void 0!==i?n&&"set"in n&&void 0!==(a=n.set(e,i,t))?a:e[t]=i:n&&"get"in n&&null!==(a=n.get(e,t))?a:e[t]},propHooks:{tabIndex:{get:function(e){return e.hasAttribute("tabindex")||Ze.test(e.nodeName)||e.href?e.tabIndex:-1}}}}),g.optSelected||(w.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null}}),w.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){w.propFix[this.toLowerCase()]=this});var Je=/[\t\r\n\f]/g;w.fn.extend({addClass:function(t){var e,i,a,n,r,s,o="string"==typeof t&&t,l=0,c=this.length;if(w.isFunction(t))return this.each(function(e){w(this).addClass(t.call(this,e,this.className))});if(o)for(e=(t||"").match(E)||[];l<c;l++)if(a=1===(i=this[l]).nodeType&&(i.className?(" "+i.className+" ").replace(Je," "):" ")){for(r=0;n=e[r++];)a.indexOf(" "+n+" ")<0&&(a+=n+" ");s=w.trim(a),i.className!==s&&(i.className=s)}return this},removeClass:function(t){var e,i,a,n,r,s,o=0===arguments.length||"string"==typeof t&&t,l=0,c=this.length;if(w.isFunction(t))return this.each(function(e){w(this).removeClass(t.call(this,e,this.className))});if(o)for(e=(t||"").match(E)||[];l<c;l++)if(a=1===(i=this[l]).nodeType&&(i.className?(" "+i.className+" ").replace(Je," "):"")){for(r=0;n=e[r++];)for(;0<=a.indexOf(" "+n+" ");)a=a.replace(" "+n+" "," ");s=t?w.trim(a):"",i.className!==s&&(i.className=s)}return this},toggleClass:function(n,t){var r=typeof n;return"boolean"==typeof t&&"string"==r?t?this.addClass(n):this.removeClass(n):this.each(w.isFunction(n)?function(e){w(this).toggleClass(n.call(this,e,this.className,t),t)}:function(){if("string"==r)for(var e,t=0,i=w(this),a=n.match(E)||[];e=a[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else r!=Y&&"boolean"!=r||(this.className&&O.set(this,"__className__",this.className),this.className=!this.className&&!1!==n&&O.get(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",i=0,a=this.length;i<a;i++)if(1===this[i].nodeType&&0<=(" "+this[i].className+" ").replace(Je," ").indexOf(t))return!0;return!1}});var et=/\r/g;w.fn.extend({val:function(i){var a,e,n,t=this[0];return arguments.length?(n=w.isFunction(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=n?i.call(this,e,w(this).val()):i)?t="":"number"==typeof t?t+="":w.isArray(t)&&(t=w.map(t,function(e){return null==e?"":e+""})),(a=w.valHooks[this.type]||w.valHooks[this.nodeName.toLowerCase()])&&"set"in a&&void 0!==a.set(this,t,"value")||(this.value=t))})):t?(a=w.valHooks[t.type]||w.valHooks[t.nodeName.toLowerCase()])&&"get"in a&&void 0!==(e=a.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(et,""):null==e?"":e:void 0}}),w.extend({valHooks:{option:{get:function(e){var t=w.find.attr(e,"value");return null!=t?t:w.trim(w.text(e))}},select:{get:function(e){for(var t,i,a=e.options,n=e.selectedIndex,r="select-one"===e.type||n<0,s=r?null:[],o=r?n+1:a.length,l=n<0?o:r?n:0;l<o;l++)if(!(!(i=a[l]).selected&&l!==n||(g.optDisabled?i.disabled:null!==i.getAttribute("disabled"))||i.parentNode.disabled&&w.nodeName(i.parentNode,"optgroup"))){if(t=w(i).val(),r)return t;s.push(t)}return s},set:function(e,t){for(var i,a,n=e.options,r=w.makeArray(t),s=n.length;s--;)((a=n[s]).selected=0<=w.inArray(a.value,r))&&(i=!0);return i||(e.selectedIndex=-1),r}}}}),w.each(["radio","checkbox"],function(){w.valHooks[this]={set:function(e,t){return w.isArray(t)?e.checked=0<=w.inArray(w(e).val(),t):void 0}},g.checkOn||(w.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),w.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,i){w.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}}),w.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,a){return this.on(t,e,i,a)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}});var tt=w.now(),it=/\?/;w.parseJSON=function(e){return JSON.parse(e+"")},w.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||w.error("Invalid XML: "+e),t};var at,nt,rt=/#.*$/,st=/([?&])_=[^&]*/,ot=/^(.*?):[ \t]*([^\r\n]*)$/gm,lt=/^(?:GET|HEAD)$/,ct=/^\/\//,dt=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,ut={},pt={},ft="*/".concat("*");try{nt=location.href}catch(e){(nt=_.createElement("a")).href="",nt=nt.href}function ht(r){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,a=0,n=e.toLowerCase().match(E)||[];if(w.isFunction(t))for(;i=n[a++];)"+"===i[0]?(i=i.slice(1)||"*",(r[i]=r[i]||[]).unshift(t)):(r[i]=r[i]||[]).push(t)}}function mt(t,n,r,s){var o={},l=t===pt;function c(e){var a;return o[e]=!0,w.each(t[e]||[],function(e,t){var i=t(n,r,s);return"string"!=typeof i||l||o[i]?l?!(a=i):void 0:(n.dataTypes.unshift(i),c(i),!1)}),a}return c(n.dataTypes[0])||!o["*"]&&c("*")}function vt(e,t){var i,a,n=w.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((n[i]?e:a=a||{})[i]=t[i]);return a&&w.extend(!0,e,a),e}at=dt.exec(nt.toLowerCase())||[],w.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:nt,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(at[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":ft,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":w.parseJSON,"text xml":w.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?vt(vt(e,w.ajaxSettings),t):vt(w.ajaxSettings,e)},ajaxPrefilter:ht(ut),ajaxTransport:ht(pt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var d,u,p,i,f,a,h,n,m=w.ajaxSetup({},t),v=m.context||m,g=m.context&&(v.nodeType||v.jquery)?w(v):w.event,_=w.Deferred(),y=w.Callbacks("once memory"),b=m.statusCode||{},r={},s={},$=0,o="canceled",k={readyState:0,getResponseHeader:function(e){var t;if(2===$){if(!i)for(i={};t=ot.exec(p);)i[t[1].toLowerCase()]=t[2];t=i[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===$?p:null},setRequestHeader:function(e,t){var i=e.toLowerCase();return $||(e=s[i]=s[i]||e,r[e]=t),this},overrideMimeType:function(e){return $||(m.mimeType=e),this},statusCode:function(e){var t;if(e)if($<2)for(t in e)b[t]=[b[t],e[t]];else k.always(e[k.status]);return this},abort:function(e){var t=e||o;return d&&d.abort(t),l(0,t),this}};if(_.promise(k).complete=y.add,k.success=k.done,k.error=k.fail,m.url=((e||m.url||nt)+"").replace(rt,"").replace(ct,at[1]+"//"),m.type=t.method||t.type||m.method||m.type,m.dataTypes=w.trim(m.dataType||"*").toLowerCase().match(E)||[""],null==m.crossDomain&&(a=dt.exec(m.url.toLowerCase()),m.crossDomain=!(!a||a[1]===at[1]&&a[2]===at[2]&&(a[3]||("http:"===a[1]?"80":"443"))===(at[3]||("http:"===at[1]?"80":"443")))),m.data&&m.processData&&"string"!=typeof m.data&&(m.data=w.param(m.data,m.traditional)),mt(ut,m,t,k),2===$)return k;for(n in(h=m.global)&&0==w.active++&&w.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!lt.test(m.type),u=m.url,m.hasContent||(m.data&&(u=m.url+=(it.test(u)?"&":"?")+m.data,delete m.data),!1===m.cache&&(m.url=st.test(u)?u.replace(st,"$1_="+tt++):u+(it.test(u)?"&":"?")+"_="+tt++)),m.ifModified&&(w.lastModified[u]&&k.setRequestHeader("If-Modified-Since",w.lastModified[u]),w.etag[u]&&k.setRequestHeader("If-None-Match",w.etag[u])),(m.data&&m.hasContent&&!1!==m.contentType||t.contentType)&&k.setRequestHeader("Content-Type",m.contentType),k.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+ft+"; q=0.01":""):m.accepts["*"]),m.headers)k.setRequestHeader(n,m.headers[n]);if(m.beforeSend&&(!1===m.beforeSend.call(v,k,m)||2===$))return k.abort();for(n in o="abort",{success:1,error:1,complete:1})k[n](m[n]);if(d=mt(pt,m,t,k)){k.readyState=1,h&&g.trigger("ajaxSend",[k,m]),m.async&&0<m.timeout&&(f=setTimeout(function(){k.abort("timeout")},m.timeout));try{$=1,d.send(r,l)}catch(e){if(!($<2))throw e;l(-1,e)}}else l(-1,"No Transport");function l(e,t,i,a){var n,r,s,o,l,c=t;2!==$&&($=2,f&&clearTimeout(f),d=void 0,p=a||"",k.readyState=0<e?4:0,n=200<=e&&e<300||304===e,i&&(o=function(e,t,i){for(var a,n,r,s,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===a&&(a=e.mimeType||t.getResponseHeader("Content-Type"));if(a)for(n in o)if(o[n]&&o[n].test(a)){l.unshift(n);break}if(l[0]in i)r=l[0];else{for(n in i){if(!l[0]||e.converters[n+" "+l[0]]){r=n;break}s=s||n}r=r||s}return r?(r!==l[0]&&l.unshift(r),i[r]):void 0}(m,k,i)),o=function(e,t,i,a){var n,r,s,o,l,c={},d=e.dataTypes.slice();if(d[1])for(s in e.converters)c[s.toLowerCase()]=e.converters[s];for(r=d.shift();r;)if(e.responseFields[r]&&(i[e.responseFields[r]]=t),!l&&a&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=d.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(s=c[l+" "+r]||c["* "+r]))for(n in c)if((o=n.split(" "))[1]===r&&(s=c[l+" "+o[0]]||c["* "+o[0]])){!0===s?s=c[n]:!0!==c[n]&&(r=o[0],d.unshift(o[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}(m,o,k,n),n?(m.ifModified&&((l=k.getResponseHeader("Last-Modified"))&&(w.lastModified[u]=l),(l=k.getResponseHeader("etag"))&&(w.etag[u]=l)),204===e||"HEAD"===m.type?c="nocontent":304===e?c="notmodified":(c=o.state,r=o.data,n=!(s=o.error))):(s=c,!e&&c||(c="error",e<0&&(e=0))),k.status=e,k.statusText=(t||c)+"",n?_.resolveWith(v,[r,c,k]):_.rejectWith(v,[k,c,s]),k.statusCode(b),b=void 0,h&&g.trigger(n?"ajaxSuccess":"ajaxError",[k,m,n?r:s]),y.fireWith(v,[k,c]),h&&(g.trigger("ajaxComplete",[k,m]),--w.active||w.event.trigger("ajaxStop")))}return k},getJSON:function(e,t,i){return w.get(e,t,i,"json")},getScript:function(e,t){return w.get(e,void 0,t,"script")}}),w.each(["get","post"],function(e,n){w[n]=function(e,t,i,a){return w.isFunction(t)&&(a=a||i,i=t,t=void 0),w.ajax({url:e,type:n,dataType:a,data:t,success:i})}}),w.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){w.fn[t]=function(e){return this.on(t,e)}}),w._evalUrl=function(e){return w.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,throws:!0})},w.fn.extend({wrapAll:function(t){var e;return w.isFunction(t)?this.each(function(e){w(this).wrapAll(t.call(this,e))}):(this[0]&&(e=w(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(i){return this.each(w.isFunction(i)?function(e){w(this).wrapInner(i.call(this,e))}:function(){var e=w(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=w.isFunction(t);return this.each(function(e){w(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(){return this.parent().each(function(){w.nodeName(this,"body")||w(this).replaceWith(this.childNodes)}).end()}}),w.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0},w.expr.filters.visible=function(e){return!w.expr.filters.hidden(e)};var gt=/%20/g,_t=/\[\]$/,yt=/\r?\n/g,bt=/^(?:submit|button|image|reset|file)$/i,$t=/^(?:input|select|textarea|keygen)/i;function kt(i,e,a,n){var t;if(w.isArray(e))w.each(e,function(e,t){a||_t.test(i)?n(i,t):kt(i+"["+("object"==typeof t?e:"")+"]",t,a,n)});else if(a||"object"!==w.type(e))n(i,e);else for(t in e)kt(i+"["+t+"]",e[t],a,n)}w.param=function(e,t){function i(e,t){t=w.isFunction(t)?t():null==t?"":t,n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)}var a,n=[];if(void 0===t&&(t=w.ajaxSettings&&w.ajaxSettings.traditional),w.isArray(e)||e.jquery&&!w.isPlainObject(e))w.each(e,function(){i(this.name,this.value)});else for(a in e)kt(a,e[a],t,i);return n.join("&").replace(gt,"+")},w.fn.extend({serialize:function(){return w.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=w.prop(this,"elements");return e?w.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!w(this).is(":disabled")&&$t.test(this.nodeName)&&!bt.test(e)&&(this.checked||!U.test(e))}).map(function(e,t){var i=w(this).val();return null==i?null:w.isArray(i)?w.map(i,function(e){return{name:t.name,value:e.replace(yt,"\r\n")}}):{name:t.name,value:i.replace(yt,"\r\n")}}).get()}}),w.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(e){}};var wt=0,xt={},Ct={0:200,1223:204},St=w.ajaxSettings.xhr();h.ActiveXObject&&w(h).on("unload",function(){for(var e in xt)xt[e]()}),g.cors=!!St&&"withCredentials"in St,g.ajax=St=!!St,w.ajaxTransport(function(r){var s;return g.cors||St&&!r.crossDomain?{send:function(e,t){var i,a=r.xhr(),n=++wt;if(a.open(r.type,r.url,r.async,r.username,r.password),r.xhrFields)for(i in r.xhrFields)a[i]=r.xhrFields[i];for(i in r.mimeType&&a.overrideMimeType&&a.overrideMimeType(r.mimeType),r.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)a.setRequestHeader(i,e[i]);s=function(e){return function(){s&&(delete xt[n],s=a.onload=a.onerror=null,"abort"===e?a.abort():"error"===e?t(a.status,a.statusText):t(Ct[a.status]||a.status,a.statusText,"string"==typeof a.responseText?{text:a.responseText}:void 0,a.getAllResponseHeaders()))}},a.onload=s(),a.onerror=s("error"),s=xt[n]=s("abort");try{a.send(r.hasContent&&r.data||null)}catch(e){if(s)throw e}},abort:function(){s&&s()}}:void 0}),w.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return w.globalEval(e),e}}}),w.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),w.ajaxTransport("script",function(i){var a,n;if(i.crossDomain)return{send:function(e,t){a=w("<script>").prop({async:!0,charset:i.scriptCharset,src:i.url}).on("load error",n=function(e){a.remove(),n=null,e&&t("error"===e.type?404:200,e.type)}),_.head.appendChild(a[0])},abort:function(){n&&n()}}});var Tt=[],jt=/(=)\?(?=&|$)|\?\?/;w.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Tt.pop()||w.expando+"_"+tt++;return this[e]=!0,e}}),w.ajaxPrefilter("json jsonp",function(e,t,i){var a,n,r,s=!1!==e.jsonp&&(jt.test(e.url)?"url":"string"==typeof e.data&&!(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&jt.test(e.data)&&"data");return s||"jsonp"===e.dataTypes[0]?(a=e.jsonpCallback=w.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(jt,"$1"+a):!1!==e.jsonp&&(e.url+=(it.test(e.url)?"&":"?")+e.jsonp+"="+a),e.converters["script json"]=function(){return r||w.error(a+" was not called"),r[0]},e.dataTypes[0]="json",n=h[a],h[a]=function(){r=arguments},i.always(function(){h[a]=n,e[a]&&(e.jsonpCallback=t.jsonpCallback,Tt.push(a)),r&&w.isFunction(n)&&n(r[0]),r=n=void 0}),"script"):void 0}),w.parseHTML=function(e,t,i){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(i=t,t=!1),t=t||_;var a=b.exec(e),n=!i&&[];return a?[t.createElement(a[1])]:(a=w.buildFragment([e],t,n),n&&n.length&&w(n).remove(),w.merge([],a.childNodes))};var Dt=w.fn.load;w.fn.load=function(e,t,i){if("string"!=typeof e&&Dt)return Dt.apply(this,arguments);var a,n,r,s=this,o=e.indexOf(" ");return 0<=o&&(a=w.trim(e.slice(o)),e=e.slice(0,o)),w.isFunction(t)?(i=t,t=void 0):t&&"object"==typeof t&&(n="POST"),0<s.length&&w.ajax({url:e,type:n,dataType:"html",data:t}).done(function(e){r=arguments,s.html(a?w("<div>").append(w.parseHTML(e)).find(a):e)}).complete(i&&function(e,t){s.each(i,r||[e.responseText,t,e])}),this},w.expr.filters.animated=function(t){return w.grep(w.timers,function(e){return t===e.elem}).length};var Et=h.document.documentElement;function Mt(e){return w.isWindow(e)?e:9===e.nodeType&&e.defaultView}w.offset={setOffset:function(e,t,i){var a,n,r,s,o,l,c=w.css(e,"position"),d=w(e),u={};"static"===c&&(e.style.position="relative"),o=d.offset(),r=w.css(e,"top"),l=w.css(e,"left"),n=("absolute"===c||"fixed"===c)&&-1<(r+l).indexOf("auto")?(s=(a=d.position()).top,a.left):(s=parseFloat(r)||0,parseFloat(l)||0),w.isFunction(t)&&(t=t.call(e,i,o)),null!=t.top&&(u.top=t.top-o.top+s),null!=t.left&&(u.left=t.left-o.left+n),"using"in t?t.using.call(e,u):d.css(u)}},w.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){w.offset.setOffset(this,t,e)});var e,i,a=this[0],n={top:0,left:0},r=a&&a.ownerDocument;return r?(e=r.documentElement,w.contains(e,a)?(typeof a.getBoundingClientRect!=Y&&(n=a.getBoundingClientRect()),i=Mt(r),{top:n.top+i.pageYOffset-e.clientTop,left:n.left+i.pageXOffset-e.clientLeft}):n):void 0},position:function(){if(this[0]){var e,t,i=this[0],a={top:0,left:0};return"fixed"===w.css(i,"position")?t=i.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),w.nodeName(e[0],"html")||(a=e.offset()),a.top+=w.css(e[0],"borderTopWidth",!0),a.left+=w.css(e[0],"borderLeftWidth",!0)),{top:t.top-a.top-w.css(i,"marginTop",!0),left:t.left-a.left-w.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||Et;e&&!w.nodeName(e,"html")&&"static"===w.css(e,"position");)e=e.offsetParent;return e||Et})}}),w.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,n){var r="pageYOffset"===n;w.fn[t]=function(e){return I(this,function(e,t,i){var a=Mt(e);return void 0===i?a?a[n]:e[t]:void(a?a.scrollTo(r?h.pageXOffset:i,r?i:h.pageYOffset):e[t]=i)},t,e,arguments.length,null)}}),w.each(["top","left"],function(e,i){w.cssHooks[i]=we(g.pixelPosition,function(e,t){return t?(t=ke(e,i),be.test(t)?w(e).position()[i]+"px":t):void 0})}),w.each({Height:"height",Width:"width"},function(r,s){w.each({padding:"inner"+r,content:s,"":"outer"+r},function(a,e){w.fn[e]=function(e,t){var i=arguments.length&&(a||"boolean"!=typeof e),n=a||(!0===e||!0===t?"margin":"border");return I(this,function(e,t,i){var a;return w.isWindow(e)?e.document.documentElement["client"+r]:9===e.nodeType?(a=e.documentElement,Math.max(e.body["scroll"+r],a["scroll"+r],e.body["offset"+r],a["offset"+r],a["client"+r])):void 0===i?w.css(e,t,n):w.style(e,t,i,n)},s,i?e:void 0,i,null)}})}),w.fn.size=function(){return this.length},w.fn.andSelf=w.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return w});var At=h.jQuery,It=h.$;return w.noConflict=function(e){return h.$===w&&(h.$=It),e&&h.jQuery===w&&(h.jQuery=At),w},typeof e==Y&&(h.jQuery=h.$=w),w}),jQuery.cookie=function(e,t,i){if(void 0===t){var a=null;if(document.cookie&&""!=document.cookie)for(var n=document.cookie.split(";"),r=0;r<n.length;r++){var s=jQuery.trim(n[r]);if(s.substring(0,e.length+1)==e+"="){a=decodeURIComponent(s.substring(e.length+1));break}}return a}i=i||{},null===t&&(t="",i.expires=-1);var o,l="";i.expires&&("number"==typeof i.expires||i.expires.toUTCString)&&("number"==typeof i.expires?(o=new Date).setTime(o.getTime()+24*i.expires*60*60*1e3):o=i.expires,l="; expires="+o.toUTCString());var c=i.path?"; path="+i.path:"",d=i.domain?"; domain="+i.domain:"",u=i.secure?"; secure":"",p=i.samesite?"; samesite="+i.samesite:"";document.cookie=[e,"=",encodeURIComponent(t),l,c,d,u,p].join("")},jQuery(document).ready(function(){}),function(o){var i={type:"html",content:"",url:"",ajax:{},ajax_request:null,closeOnEsc:!0,closeOnOverlayClick:!0,clone:!1,overlay:{block:void 0,tpl:'<div class="arcticmodal-overlay"></div>',css:{backgroundColor:"#000",opacity:.2}},container:{block:void 0,tpl:'<div class="arcticmodal-container"><table class="arcticmodal-container_i"><tr><td class="arcticmodal-container_i2"></td></tr></table></div>'},wrap:void 0,body:void 0,errors:{tpl:'<div class="arcticmodal-error arcticmodal-close"></div>',autoclose_delay:2e3,ajax_unsuccessful_load:"Error"},openEffect:{type:"fade",speed:400},closeEffect:{type:"fade",speed:400},beforeOpen:o.noop,afterOpen:o.noop,beforeClose:o.noop,afterClose:o.noop,afterLoading:o.noop,afterLoadingOnShow:o.noop,errorLoading:o.noop},l=0,c=o([]),d=function(e,t){var i=!0;return o(e).each(function(){o(t.target).get(0)==o(this).get(0)&&(i=!1),0==o(t.target).closest("HTML",o(this).get(0)).length&&(i=!1)}),i},u={getParentEl:function(e){var t=o(e);return(t.data("arcticmodal")||!!(t=o(e).closest(".arcticmodal-container").data("arcticmodalParentEl")))&&t},transition:function(e,t,i,a){switch(a=null==a?o.noop:a,i.type){case"fade":"show"==t?e.fadeIn(i.speed,a):e.fadeOut(i.speed,a);break;case"none":"show"==t?e.show():e.hide(),a()}},prepare_body:function(e,t){o(".arcticmodal-close",e.body).unbind("click.arcticmodal").bind("click.arcticmodal",function(){return t.arcticmodal("close"),!1})},init_el:function(t,e){var i=t.data("arcticmodal");if(!i){if(l++,(i=e).modalID=l,i.overlay.block=o(i.overlay.tpl),i.overlay.block.css(i.overlay.css),i.container.block=o(i.container.tpl),i.body=o(".arcticmodal-container_i2",i.container.block),e.clone?i.body.html(t.clone(!0)):(t.before('<div id="arcticmodalReserve'+i.modalID+'" style="display: none" />'),i.body.html(t)),u.prepare_body(i,t),i.closeOnOverlayClick&&i.overlay.block.add(i.container.block).click(function(e){d(o(">*",i.body),e)&&t.arcticmodal("close")}),i.container.block.data("arcticmodalParentEl",t),t.data("arcticmodal",i),c=o.merge(c,t),o.proxy(p.show,t)(),"html"==i.type)return t;if(null!=i.ajax.beforeSend){var a=i.ajax.beforeSend;delete i.ajax.beforeSend}if(null!=i.ajax.success){var n=i.ajax.success;delete i.ajax.success}if(null!=i.ajax.error){var r=i.ajax.error;delete i.ajax.error}var s=o.extend(!0,{url:i.url,beforeSend:function(){null==a?i.body.html('<div class="arcticmodal-loading"><div class="b_loading"><div class="b_loading_circle_wrapper"><div class="b_loading_circle_one"></div><div class="b_loading_circle_one b_loading_circle_delayed"></div></div></div></div>'):a(i,t)},success:function(e){t.trigger("afterLoading"),i.afterLoading(i,t,e),null==n?i.body.html(e):n(i,t,e),u.prepare_body(i,t),t.trigger("afterLoadingOnShow"),i.afterLoadingOnShow(i,t,e)},error:function(){t.trigger("errorLoading"),i.errorLoading(i,t),null==r?(i.body.html(i.errors.tpl),o(".arcticmodal-error",i.body).html(i.errors.ajax_unsuccessful_load),o(".arcticmodal-close",i.body).click(function(){return t.arcticmodal("close"),!1}),i.errors.autoclose_delay&&setTimeout(function(){t.arcticmodal("close")},i.errors.autoclose_delay)):r(i,t)}},i.ajax);i.ajax_request=o.ajax(s),t.data("arcticmodal",i)}},init:function(e){if(e=o.extend(!0,{},i,e),!o.isFunction(this))return this.each(function(){u.init_el(o(this),o.extend(!0,{},e))});if(null==e)o.error("jquery.arcticmodal: Uncorrect parameters");else if(""==e.type)o.error('jquery.arcticmodal: Don\'t set parameter "type"');else switch(e.type){case"html":if(""==e.content){o.error('jquery.arcticmodal: Don\'t set parameter "content"');break}var t=e.content;return e.content="",u.init_el(o(t),e);case"ajax":if(""!=e.url)return u.init_el(o("<div />"),e);o.error('jquery.arcticmodal: Don\'t set parameter "url"')}}},p={show:function(){var e=u.getParentEl(this);if(!1!==e){var t=e.data("arcticmodal");if(t.overlay.block.hide(),t.container.block.hide(),o("BODY").append(t.overlay.block),o("BODY").append(t.container.block),t.beforeOpen(t,e),e.trigger("beforeOpen"),"hidden"!=t.wrap.css("overflow")){t.wrap.data("arcticmodalOverflow",t.wrap.css("overflow"));var i=t.wrap.outerWidth(!0);t.wrap.css("overflow","hidden");var a=t.wrap.outerWidth(!0);a!=i&&t.wrap.css("marginRight",a-i+"px")}return c.not(e).each(function(){o(this).data("arcticmodal").overlay.block.hide()}),u.transition(t.overlay.block,"show",1<c.length?{type:"none"}:t.openEffect),u.transition(t.container.block,"show",1<c.length?{type:"none"}:t.openEffect,function(){t.afterOpen(t,e),e.trigger("afterOpen")}),e}o.error("jquery.arcticmodal: Uncorrect call")},close:function(){if(!o.isFunction(this))return this.each(function(){var e=u.getParentEl(this);if(!1===e)o.error("jquery.arcticmodal: Uncorrect call");else{var t=e.data("arcticmodal");!1!==t.beforeClose(t,e)&&(e.trigger("beforeClose"),c.not(e).last().each(function(){o(this).data("arcticmodal").overlay.block.show()}),u.transition(t.overlay.block,"hide",1<c.length?{type:"none"}:t.closeEffect),u.transition(t.container.block,"hide",1<c.length?{type:"none"}:t.closeEffect,function(){t.afterClose(t,e),e.trigger("afterClose"),t.clone||o("#arcticmodalReserve"+t.modalID).replaceWith(t.body.find(">*")),t.overlay.block.remove(),t.container.block.remove(),e.data("arcticmodal",null),o(".arcticmodal-container").length||(t.wrap.data("arcticmodalOverflow")&&t.wrap.css("overflow",t.wrap.data("arcticmodalOverflow")),t.wrap.css("marginRight",0))}),"ajax"==t.type&&t.ajax_request.abort(),c=c.not(e))}});c.each(function(){o(this).arcticmodal("close")})},setDefault:function(e){o.extend(!0,i,e)}};o(function(){i.wrap=o(document.all&&!document.querySelector?"html":"body")}),o(document).bind("keyup.arcticmodal",function(e){var t=c.last();t.length&&t.data("arcticmodal").closeOnEsc&&27===e.keyCode&&t.arcticmodal("close")}),o.arcticmodal=o.fn.arcticmodal=function(e){return p[e]?p[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void o.error("jquery.arcticmodal: Method "+e+" does not exist"):u.init.apply(this,arguments)}}(jQuery),function(d,u){function p(e,t,i){var a=v[t.type]||{};return null==e?i||!t.def?null:t.def:(e=a.floor?~~e:parseFloat(e),isNaN(e)?t.def:a.mod?(e+a.mod)%a.mod:e<0?0:a.max<e?a.max:e)}function o(s){var o=h(),l=o._rgba=[];return s=s.toLowerCase(),g(e,function(e,t){var i,a=t.re.exec(s),n=a&&t.parse(a),r=t.space||"rgba";if(n)return i=o[r](n),o[m[r].cache]=i[m[r].cache],l=o._rgba=i._rgba,!1}),l.length?("0,0,0,0"===l.join()&&d.extend(l,c.transparent),o):c[s]}function l(e,t,i){return 6*(i=(i+1)%1)<1?e+(t-e)*i*6:2*i<1?t:3*i<2?e+(t-e)*(2/3-i)*6:e}var c,f=/^([\-+])=\s*(\d+\.?\d*)/,e=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[2.55*e[1],2.55*e[2],2.55*e[3],e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],h=d.Color=function(e,t,i,a){return new d.Color.fn.parse(e,t,i,a)},m={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},v={byte:{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},s=h.support={},t=d("<p>")[0],g=d.each;t.style.cssText="background-color:rgba(1,1,1,.5)",s.rgba=-1<t.style.backgroundColor.indexOf("rgba"),g(m,function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}}),h.fn=d.extend(h.prototype,{parse:function(n,e,t,i){if(n===u)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=d(n).css(e),e=u);var r=this,a=d.type(n),s=this._rgba=[];return e!==u&&(n=[n,e,t,i],a="array"),"string"===a?this.parse(o(n)||c._default):"array"===a?(g(m.rgba.props,function(e,t){s[t.idx]=p(n[t.idx],t)}),this):"object"===a?(g(m,n instanceof h?function(e,t){n[t.cache]&&(r[t.cache]=n[t.cache].slice())}:function(e,i){var a=i.cache;g(i.props,function(e,t){if(!r[a]&&i.to){if("alpha"===e||null==n[e])return;r[a]=i.to(r._rgba)}r[a][t.idx]=p(n[e],t,!0)}),r[a]&&d.inArray(null,r[a].slice(0,3))<0&&(r[a][3]=1,i.from&&(r._rgba=i.from(r[a])))}),this):void 0},is:function(e){var n=h(e),r=!0,s=this;return g(m,function(e,t){var i,a=n[t.cache];return a&&(i=s[t.cache]||t.to&&t.to(s._rgba)||[],g(t.props,function(e,t){if(null!=a[t.idx])return r=a[t.idx]===i[t.idx]})),r}),r},_space:function(){var i=[],a=this;return g(m,function(e,t){a[t.cache]&&i.push(e)}),i.pop()},transition:function(e,s){var o=h(e),t=o._space(),i=m[t],a=0===this.alpha()?h("transparent"):this,l=a[i.cache]||i.to(a._rgba),c=l.slice();return o=o[i.cache],g(i.props,function(e,t){var i=t.idx,a=l[i],n=o[i],r=v[t.type]||{};null!==n&&(null===a?c[i]=n:(r.mod&&(r.mod/2<n-a?a+=r.mod:r.mod/2<a-n&&(a-=r.mod)),c[i]=p((n-a)*s+a,t)))}),this[t](c)},blend:function(e){if(1===this._rgba[3])return this;var t=this._rgba.slice(),i=t.pop(),a=h(e)._rgba;return h(d.map(t,function(e,t){return(1-i)*a[t]+i*e}))},toRgbaString:function(){var e="rgba(",t=d.map(this._rgba,function(e,t){return null==e?2<t?1:0:e});return 1===t[3]&&(t.pop(),e="rgb("),e+t.join()+")"},toHslaString:function(){var e="hsla(",t=d.map(this.hsla(),function(e,t){return null==e&&(e=2<t?1:0),t&&t<3&&(e=Math.round(100*e)+"%"),e});return 1===t[3]&&(t.pop(),e="hsl("),e+t.join()+")"},toHexString:function(e){var t=this._rgba.slice(),i=t.pop();return e&&t.push(~~(255*i)),"#"+d.map(t,function(e,t){return 1===(e=(e||0).toString(16)).length?"0"+e:e}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),h.fn.parse.prototype=h.fn,m.hsla.to=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t,i,a=e[0]/255,n=e[1]/255,r=e[2]/255,s=e[3],o=Math.max(a,n,r),l=Math.min(a,n,r),c=o-l,d=o+l,u=.5*d;return t=l===o?0:a===o?60*(n-r)/c+360:n===o?60*(r-a)/c+120:60*(a-n)/c+240,i=0==u||1==u?u:u<=.5?c/d:c/(2-d),[Math.round(t)%360,i,u,null==s?1:s]},m.hsla.from=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t=e[0]/360,i=e[1],a=e[2],n=e[3],r=a<=.5?a*(1+i):a+i-a*i,s=2*a-r;return[Math.round(255*l(s,r,t+1/3)),Math.round(255*l(s,r,t)),Math.round(255*l(s,r,t-1/3)),n]},g(m,function(l,e){var i=e.props,s=e.cache,o=e.to,c=e.from;h.fn[l]=function(e){if(o&&!this[s]&&(this[s]=o(this._rgba)),e===u)return this[s].slice();var t,a=d.type(e),n="array"===a||"object"===a?e:arguments,r=this[s].slice();return g(i,function(e,t){var i=n["object"===a?e:t.idx];null==i&&(i=r[t.idx]),r[t.idx]=p(i,t)}),c?((t=h(c(r)))[s]=r,t):h(r)},g(i,function(s,o){h.fn[s]||(h.fn[s]=function(e){var t,i=d.type(e),a="alpha"===s?this._hsla?"hsla":"rgba":l,n=this[a](),r=n[o.idx];return"undefined"===i?r:("function"===i&&(e=e.call(this,r),i=d.type(e)),null==e&&o.empty?this:("string"===i&&((t=f.exec(e))&&(e=r+parseFloat(t[2])*("+"===t[1]?1:-1))),n[o.idx]=e,this[a](n)))})})}),h.hook=function(e){var t=e.split(" ");g(t,function(e,r){d.cssHooks[r]={set:function(e,t){var i,a,n="";if("string"!==d.type(t)||(i=o(t))){if(t=h(i||t),!s.rgba&&1!==t._rgba[3]){for(a="backgroundColor"===r?e.parentNode:e;(""===n||"transparent"===n)&&a&&a.style;)try{n=d.css(a,"backgroundColor"),a=a.parentNode}catch(e){}t=t.blend(n&&"transparent"!==n?n:"_default")}t=t.toRgbaString()}try{e.style[r]=t}catch(t){}}},d.fx.step[r]=function(e){e.colorInit||(e.start=h(e.elem,r),e.end=h(e.end),e.colorInit=!0),d.cssHooks[r].set(e.elem,e.start.transition(e.end,e.pos))}})},h.hook("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"),d.cssHooks.borderColor={expand:function(i){var a={};return g(["Top","Right","Bottom","Left"],function(e,t){a["border"+t+"Color"]=i}),a}},c=d.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(jQuery),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e("object"==typeof exports?require("jquery"):jQuery)}(function(x){var a,e=navigator.userAgent,C=/iphone/i.test(e),n=/chrome/i.test(e),S=/android/i.test(e);x.mask={definitions:{9:"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"},autoclear:!0,dataName:"rawMaskFn",placeholder:"_"},x.fn.extend({caret:function(e,t){var i;if(0!==this.length&&!this.is(":hidden"))return"number"==typeof e?(t="number"==typeof t?t:e,this.each(function(){this.setSelectionRange?this.setSelectionRange(e,t):this.createTextRange&&((i=this.createTextRange()).collapse(!0),i.moveEnd("character",t),i.moveStart("character",e),i.select())})):(this[0].setSelectionRange?(e=this[0].selectionStart,t=this[0].selectionEnd):document.selection&&document.selection.createRange&&(i=document.selection.createRange(),e=0-i.duplicate().moveStart("character",-1e5),t=e+i.text.length),{begin:e,end:t})},unmask:function(){return this.trigger("unmask")},mask:function(t,g){var i,_,y,b,$,k,w;if(!t&&0<this.length){var e=x(this[0]).data(x.mask.dataName);return e?e():void 0}return g=x.extend({autoclear:x.mask.autoclear,placeholder:x.mask.placeholder,completed:null},g),i=x.mask.definitions,_=[],y=k=t.length,b=null,x.each(t.split(""),function(e,t){"?"==t?(k--,y=e):i[t]?(_.push(new RegExp(i[t])),null===b&&(b=_.length-1),e<y&&($=_.length-1)):_.push(null)}),this.trigger("unmask").each(function(){function s(){if(g.completed){for(var e=b;e<=$;e++)if(_[e]&&h[e]===o(e))return;g.completed.call(f)}}function o(e){return g.placeholder.charAt(e<g.placeholder.length?e:0)}function l(e){for(;++e<k&&!_[e];);return e}function c(e,t){var i,a;if(!(e<0)){for(i=e,a=l(t);i<k;i++)if(_[i]){if(!(a<k&&_[i].test(h[a])))break;h[i]=h[a],h[a]=o(a),a=l(a)}u(),f.caret(Math.max(b,e))}}function r(){p(),f.val()!=v&&f.change()}function d(e,t){var i;for(i=e;i<t&&i<k;i++)_[i]&&(h[i]=o(i))}function u(){f.val(h.join(""))}function p(e){var t,i,a,n=f.val(),r=-1;for(a=t=0;t<k;t++)if(_[t]){for(h[t]=o(t);a++<n.length;)if(i=n.charAt(a-1),_[t].test(i)){h[t]=i,r=t;break}if(a>n.length){d(t+1,k);break}}else h[t]===n.charAt(a)&&a++,t<y&&(r=t);return e?u():r+1<y?g.autoclear||h.join("")===m?(f.val()&&f.val(""),d(0,k)):u():(u(),f.val(f.val().substring(0,r+1))),y?t:b}var f=x(this),h=x.map(t.split(""),function(e,t){return"?"!=e?i[e]?o(t):e:void 0}),m=h.join(""),v=f.val();f.data(x.mask.dataName,function(){return x.map(h,function(e,t){return _[t]&&e!=o(t)?e:null}).join("")}),f.one("unmask",function(){f.off(".mask").removeData(x.mask.dataName)}).on("focus.mask",function(){var e;f.prop("readonly")||(clearTimeout(a),v=f.val(),e=p(),a=setTimeout(function(){f.get(0)===document.activeElement&&(u(),e==t.replace("?","").length?f.caret(0,e):f.caret(e))},10))}).on("blur.mask",r).on("keydown.mask",function(e){if(!f.prop("readonly")){var t,i,a,n=e.which||e.keyCode;w=f.val(),8===n||46===n||C&&127===n?(i=(t=f.caret()).begin,(a=t.end)-i==0&&(i=46!==n?function(e){for(;0<=--e&&!_[e];);return e}(i):a=l(i-1),a=46===n?l(a):a),d(i,a),c(i,a-1),e.preventDefault()):13===n?r.call(this,e):27===n&&(f.val(v),f.caret(0,p()),e.preventDefault())}}).on("keypress.mask",function(e){if(!f.prop("readonly")){var t,i,a,n=e.which||e.keyCode,r=f.caret();if(!(e.ctrlKey||e.altKey||e.metaKey||n<32)&&n&&13!==n){if(r.end-r.begin!=0&&(d(r.begin,r.end),c(r.begin,r.end-1)),(t=l(r.begin-1))<k&&(i=String.fromCharCode(n),_[t].test(i))){if(function(e){var t,i,a,n;for(i=o(t=e);t<k;t++)if(_[t]){if(a=l(t),n=h[t],h[t]=i,!(a<k&&_[a].test(n)))break;i=n}}(t),h[t]=i,u(),a=l(t),S){setTimeout(function(){x.proxy(x.fn.caret,f,a)()},0)}else f.caret(a);r.begin<=$&&s()}e.preventDefault()}}}).on("input.mask paste.mask",function(){f.prop("readonly")||setTimeout(function(){var e=p(!0);f.caret(e),s()},0)}),n&&S&&f.off("input.mask").on("input.mask",function(){var e=f.val(),t=f.caret();if(w&&w.length&&w.length>e.length){for(p(!0);0<t.begin&&!_[t.begin-1];)t.begin--;if(0===t.begin)for(;t.begin<b&&!_[t.begin];)t.begin++;f.caret(t.begin,t.begin)}else{for(p(!0);t.begin<k&&!_[t.begin];)t.begin++;f.caret(t.begin,t.begin)}s()}),p()})}})}),function(n){function r(e){var t=e.data("_ARS_data");return t||(t={rotateUnits:"deg",scale:1,rotate:0},e.data("_ARS_data",t)),t}function s(e,t){e.css("transform","rotate("+t.rotate+t.rotateUnits+") scale("+t.scale+","+t.scale+")")}n.fn.rotate=function(e){var t,i=n(this),a=r(i);return void 0===e?a.rotate+a.rotateUnits:((t=e.toString().match(/^(-?\d+(\.\d+)?)(.+)?$/))&&(t[3]&&(a.rotateUnits=t[3]),a.rotate=t[1],s(i,a)),this)},n.fn.scale=function(e){var t=n(this),i=r(t);return void 0===e?i.scale:(i.scale=e,s(t,i),this)};var e=n.fx.prototype.cur;n.fx.prototype.cur=function(){return"rotate"==this.prop?parseFloat(n(this.elem).rotate()):"scale"==this.prop?parseFloat(n(this.elem).scale()):e.apply(this,arguments)},n.fx.step.rotate=function(e){var t=r(n(e.elem));n(e.elem).rotate(e.now+t.rotateUnits)},n.fx.step.scale=function(e){n(e.elem).scale(e.now)};var i=n.fn.animate;n.fn.animate=function(e){if(void 0!==e.rotate){var t=e.rotate.toString().match(/^(([+-]=)?(-?\d+(\.\d+)?))(.+)?$/);t&&t[5]&&(r(n(this)).rotateUnits=t[5]),e.rotate=t[1]}return i.apply(this,arguments)}}(jQuery),function(l){l.fn.autoResize=function(e){var o=l.extend({onResize:function(){},animate:!0,animateDuration:150,animateCallback:function(){},extraSpace:1,limit:3e4},e);return this.filter("textarea").each(function(){function e(){r.height(0).val(l(this).val()).scrollTop(1e4);var e=Math.max(r.scrollTop(),n),t=l(this).add(r);s!==e&&((s=e)>=o.limit?l(this).css("overflow-y",""):(o.onResize.call(this),o.animate&&"block"===a.css("display")?t.stop().animate({height:e},o.animateDuration,o.animateCallback):t.height(e)))}var i,a=l(this).css({resize:"none","overflow-y":"hidden"}),n=a.height(),r=(i={},l.each(["height","width","lineHeight","textDecoration","letterSpacing","fontSize","font-family"],function(e,t){i[t]=a.css(t)}),a.clone().removeAttr("id").removeAttr("name").css({position:"absolute",top:0,left:-9999}).css(i).attr("tabIndex","-1").insertBefore(a)),s=null;a.unbind(".dynSiz").bind("keyup.dynSiz",e).bind("keydown.dynSiz",e).bind("change.dynSiz",e)}),this}}(jQuery),function(f){function h(e,t){if(this.createTextRange){var i=this.createTextRange();i.collapse(!0),i.moveStart("character",e),i.moveEnd("character",t-e),i.select()}else this.setSelectionRange&&(this.focus(),this.setSelectionRange(e,t))}function m(e){var t,i=this.value.length;return e="start"==e.toLowerCase()?"Start":"End",document.selection?((t=(i=document.selection.createRange()).duplicate()).expand("textedit"),t.setEndPoint("EndToEnd",i),i=(t=t.text.length-i.text.length)+i.text.length,"Start"==e?t:i):(void 0!==this["selection"+e]&&(i=this["selection"+e]),i)}var v={codes:{188:44,109:45,190:46,191:47,192:96,220:92,222:39,221:93,219:91,173:45,187:61,186:59,189:45,110:46},shifts:{96:"~",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",48:")",45:"_",61:"+",91:"{",93:"}",92:"|",59:":",39:'"',44:"<",46:">",47:"?"}};f.fn.number=function(e,l,c,d){d=void 0===d?",":d,l=void 0===l?0:l;var t="\\u"+("0000"+(c=void 0===c?".":c).charCodeAt(0).toString(16)).slice(-4),u=RegExp("[^"+t+"0-9]","g"),p=RegExp(t,"g");return!0===e?this.is("input:text")?this.on({"keydown.format":function(e){var t=f(this),i=t.data("numFormat"),a=e.keyCode?e.keyCode:e.which,n="",r=m.apply(this,["start"]),s=m.apply(this,["end"]),o="";if(o=!1,v.codes.hasOwnProperty(a)&&(a=v.codes[a]),!e.shiftKey&&65<=a&&a<=90?a+=32:!e.shiftKey&&69<=a&&a<=105?a-=48:e.shiftKey&&v.shifts.hasOwnProperty(a)&&(n=v.shifts[a]),""==n&&(n=String.fromCharCode(a)),8!==a&&n!=c&&!n.match(/[0-9]/)){if(46==(t=e.keyCode?e.keyCode:e.which)||8==t||9==t||27==t||13==t||(65==t||82==t)&&!0===(e.ctrlKey||e.metaKey)||(86==t||67==t)&&!0===(e.ctrlKey||e.metaKey)||35<=t&&t<=39)return;return e.preventDefault(),!1}if(0==r&&s==this.value.length||0==t.val()?8===a?(r=s=1,this.value="",i.init=0<l?-1:0,i.c=0<l?-(l+1):0,h.apply(this,[0,0])):n===c?(r=s=1,this.value="0"+c+Array(l+1).join("0"),i.init=0<l?1:0,i.c=0<l?-(l+1):0):0===this.value.length&&(i.init=0<l?-1:0,i.c=0<l?-l:0):i.c=s-this.value.length,0<l&&n==c&&r==this.value.length-l-1)i.c++,i.init=Math.max(0,i.init),e.preventDefault(),o=this.value.length+i.c;else if(n==c)i.init=Math.max(0,i.init),e.preventDefault();else if(0<l&&8==a&&r==this.value.length-l)e.preventDefault(),i.c--,o=this.value.length+i.c;else if(0<l&&8==a&&r>this.value.length-l){if(""===this.value)return;"0"!=this.value.slice(r-1,r)&&(o=this.value.slice(0,r-1)+"0"+this.value.slice(r),t.val(o.replace(u,"").replace(p,c))),e.preventDefault(),i.c--,o=this.value.length+i.c}else 8==a&&this.value.slice(r-1,r)==d?(e.preventDefault(),i.c--,o=this.value.length+i.c):0<l&&r==s&&this.value.length>l+1&&r>this.value.length-l-1&&isFinite(+n)&&!e.metaKey&&!e.ctrlKey&&!e.altKey&&1===n.length&&(this.value=o=s===this.value.length?this.value.slice(0,r-1):this.value.slice(0,r)+this.value.slice(r+1),o=r);!1!==o&&h.apply(this,[o,o]),t.data("numFormat",i)},"keyup.format":function(e){var t=f(this),i=t.data("numFormat");e=e.keyCode?e.keyCode:e.which;var a=m.apply(this,["start"]);""===this.value||(e<48||57<e)&&(e<96||105<e)&&8!==e||(t.val(t.val()),0<l&&(i.init<1?(a=this.value.length-l-(i.init<0?1:0),i.c=a-this.value.length,i.init=1,t.data("numFormat",i)):a>this.value.length-l&&8!=e&&(i.c++,t.data("numFormat",i))),t=this.value.length+i.c,h.apply(this,[t,t]))},"paste.format":function(e){var t=f(this),i=e.originalEvent,a=null;return window.clipboardData&&window.clipboardData.getData?a=window.clipboardData.getData("Text"):i.clipboardData&&i.clipboardData.getData&&(a=i.clipboardData.getData("text/plain")),t.val(a),e.preventDefault(),!1}}).each(function(){var e=f(this).data("numFormat",{c:-(l+1),decimals:l,thousands_sep:d,dec_point:c,regex_dec_num:u,regex_dec:p,init:!1});""!==this.value&&e.val(e.val())}):this.each(function(){var e=f(this),t=+e.text().replace(u,"").replace(p,".");e.number(isFinite(t)?+t:0,l,c,d)}):this.text(f.number.apply(window,arguments))};var i=null,a=null;f.isPlainObject(f.valHooks.text)?(f.isFunction(f.valHooks.text.get)&&(i=f.valHooks.text.get),f.isFunction(f.valHooks.text.set)&&(a=f.valHooks.text.set)):f.valHooks.text={},f.valHooks.text.get=function(e){var t=f(e).data("numFormat");return t?""===e.value?"":(e=+e.value.replace(t.regex_dec_num,"").replace(t.regex_dec,"."),""+(isFinite(e)?e:0)):f.isFunction(i)?i(e):void 0},f.valHooks.text.set=function(e,t){var i=f(e).data("numFormat");return i?e.value=f.number(t,i.decimals,i.dec_point,i.thousands_sep):f.isFunction(a)?a(e,t):void 0},f.number=function(e,t,i,a){a=void 0===a?",":a,i=void 0===i?".":i,t=isFinite(+t)?Math.abs(t):0;var n="\\u"+("0000"+i.charCodeAt(0).toString(16)).slice(-4),r="\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4);return e=(e+"").replace(".",i).replace(RegExp(r,"g"),"").replace(RegExp(n,"g"),".").replace(RegExp("[^0-9+-Ee.]","g"),""),e=isFinite(+e)?+e:0,n="",n=function(e,t){var i=Math.pow(10,t);return""+Math.round(e*i)/i},3<(n=(t?n(e,t):""+Math.round(e)).split("."))[0].length&&(n[0]=n[0].replace(/\B(?=(?:\d{3})+(?!\d))/g,a)),(n[1]||"").length<t&&(n[1]=n[1]||"",n[1]+=Array(t-n[1].length+1).join("0")),n.join(i)}}(jQuery),function(t){"function"==typeof define&&define.amd?define(["jquery"],function(e){return t(e)}):"object"==typeof exports?module.exports=t(require("jquery")):t(jQuery)}(function(e){!function(m,v,a){"use strict";function t(e,t){if(this.el=e,this.$el=m(e),this.s=m.extend({},i,t),this.s.dynamic&&"undefined"!==this.s.dynamicEl&&this.s.dynamicEl.constructor===Array&&!this.s.dynamicEl.length)throw"When using dynamic mode, you must also define dynamicEl as an Array.";return this.modules={},this.lGalleryOn=!1,this.lgBusy=!1,this.hideBartimeout=!1,this.isTouch="ontouchstart"in a.documentElement,this.s.slideEndAnimatoin&&(this.s.hideControlOnEnd=!1),this.s.dynamic?this.$items=this.s.dynamicEl:"this"===this.s.selector?this.$items=this.$el:""!==this.s.selector?this.s.selectWithin?this.$items=m(this.s.selectWithin).find(this.s.selector):this.$items=this.$el.find(m(this.s.selector)):this.$items=this.$el.children(),this.$slide="",this.$outer="",this.init(),this}var i={mode:"lg-slide",cssEasing:"ease",easing:"linear",speed:600,height:"100%",width:"100%",addClass:"",startClass:"lg-start-zoom",backdropDuration:150,hideBarsDelay:6e3,useLeft:!1,closable:!0,loop:!0,escKey:!0,keyPress:!0,controls:!0,slideEndAnimatoin:!0,hideControlOnEnd:!1,mousewheel:!0,getCaptionFromTitleOrAlt:!0,appendSubHtmlTo:".lg-sub-html",subHtmlSelectorRelative:!1,preload:1,showAfterLoad:!0,selector:"",selectWithin:"",nextHtml:"",prevHtml:"",index:!1,iframeMaxWidth:"100%",download:!0,counter:!0,appendCounterTo:".lg-toolbar",swipeThreshold:50,enableSwipe:!0,enableDrag:!0,dynamic:!1,dynamicEl:[],galleryId:1};t.prototype.init=function(){var e=this;e.s.preload>e.$items.length&&(e.s.preload=e.$items.length);var t=v.location.hash;0<t.indexOf("lg="+this.s.galleryId)&&(e.index=parseInt(t.split("&slide=")[1],10),m("body").addClass("lg-from-hash"),m("body").hasClass("lg-on")||(setTimeout(function(){e.build(e.index)}),m("body").addClass("lg-on"))),e.s.dynamic?(e.$el.trigger("onBeforeOpen.lg"),e.index=e.s.index||0,m("body").hasClass("lg-on")||setTimeout(function(){e.build(e.index),m("body").addClass("lg-on")})):e.$items.on("click.lgcustom",function(t){try{t.preventDefault(),t.preventDefault()}catch(e){t.returnValue=!1}e.$el.trigger("onBeforeOpen.lg"),e.index=e.s.index||e.$items.index(this),m("body").hasClass("lg-on")||(e.build(e.index),m("body").addClass("lg-on"))})},t.prototype.build=function(e){var t=this;t.structure(),m.each(m.fn.lightGallery.modules,function(e){t.modules[e]=new m.fn.lightGallery.modules[e](t.el)}),t.slide(e,!1,!1),t.s.keyPress&&t.keyPress(),1<t.$items.length&&(t.arrow(),setTimeout(function(){t.enableDrag(),t.enableSwipe()},50),t.s.mousewheel&&t.mousewheel()),t.counter(),t.closeGallery(),t.$el.trigger("onAfterOpen.lg"),t.$outer.on("mousemove.lg click.lg touchstart.lg",function(){t.$outer.removeClass("lg-hide-items"),clearTimeout(t.hideBartimeout),t.hideBartimeout=setTimeout(function(){t.$outer.addClass("lg-hide-items")},t.s.hideBarsDelay)})},t.prototype.structure=function(){var e,t="",i="",a=0,n="",r=this;for(m("body").append('<div class="lg-backdrop"></div>'),m(".lg-backdrop").css("transition-duration",this.s.backdropDuration+"ms"),a=0;a<this.$items.length;a++)t+='<div class="lg-item"></div>';if(this.s.controls&&1<this.$items.length&&(i='<div class="lg-actions"><div class="lg-prev lg-icon">'+this.s.prevHtml+'</div><div class="lg-next lg-icon">'+this.s.nextHtml+"</div></div>"),".lg-sub-html"===this.s.appendSubHtmlTo&&(n='<div class="lg-sub-html"></div>'),e='<div class="lg-outer '+this.s.addClass+" "+this.s.startClass+'"><div class="lg" style="width:'+this.s.width+"; height:"+this.s.height+'"><div class="lg-inner">'+t+'</div><div class="lg-toolbar group"><span class="lg-close lg-icon"></span></div>'+i+n+"</div></div>",m("body").append(e),this.$outer=m(".lg-outer"),this.$slide=this.$outer.find(".lg-item"),this.s.useLeft?(this.$outer.addClass("lg-use-left"),this.s.mode="lg-slide"):this.$outer.addClass("lg-use-css3"),r.setTop(),m(v).on("resize.lg orientationchange.lg",function(){setTimeout(function(){r.setTop()},100)}),this.$slide.eq(this.index).addClass("lg-current"),this.doCss()?this.$outer.addClass("lg-css3"):(this.$outer.addClass("lg-css"),this.s.speed=0),this.$outer.addClass(this.s.mode),this.s.enableDrag&&1<this.$items.length&&this.$outer.addClass("lg-grab"),this.s.showAfterLoad&&this.$outer.addClass("lg-show-after-load"),this.doCss()){var s=this.$outer.find(".lg-inner");s.css("transition-timing-function",this.s.cssEasing),s.css("transition-duration",this.s.speed+"ms")}setTimeout(function(){m(".lg-backdrop").addClass("in")}),setTimeout(function(){r.$outer.addClass("lg-visible")},this.s.backdropDuration),this.s.download&&this.$outer.find(".lg-toolbar").append('<a id="lg-download" target="_blank" download class="lg-download lg-icon"></a>'),this.prevScrollTop=m(v).scrollTop()},t.prototype.setTop=function(){if("100%"!==this.s.height){var e=m(v).height(),t=(e-parseInt(this.s.height,10))/2,i=this.$outer.find(".lg");e>=parseInt(this.s.height,10)?i.css("top",t+"px"):i.css("top","0px")}},t.prototype.doCss=function(){return!!function(){var e=["transition","MozTransition","WebkitTransition","OTransition","msTransition","KhtmlTransition"],t=a.documentElement,i=0;for(i=0;i<e.length;i++)if(e[i]in t.style)return!0}()},t.prototype.isVideo=function(e,t){var i;if(i=this.s.dynamic?this.s.dynamicEl[t].html:this.$items.eq(t).attr("data-html"),!e&&i)return{html5:!0};var a=e.match(/\/\/(?:www\.)?youtu(?:\.be|be\.com)\/(?:watch\?v=|embed\/)?([a-z0-9\-\_\%]+)/i),n=e.match(/\/\/(?:www\.)?vimeo.com\/([0-9a-z\-_]+)/i),r=e.match(/\/\/(?:www\.)?dai.ly\/([0-9a-z\-_]+)/i),s=e.match(/\/\/(?:www\.)?(?:vk\.com|vkontakte\.ru)\/(?:video_ext\.php\?)(.*)/i);return a?{youtube:a}:n?{vimeo:n}:r?{dailymotion:r}:s?{vk:s}:void 0},t.prototype.counter=function(){this.s.counter&&m(this.s.appendCounterTo).append('<div id="lg-counter"><span id="lg-counter-current">'+(parseInt(this.index,10)+1)+'</span> / <span id="lg-counter-all">'+this.$items.length+"</span></div>")},t.prototype.addHtml=function(e){var t,i,a=null;if(this.s.dynamic?this.s.dynamicEl[e].subHtmlUrl?t=this.s.dynamicEl[e].subHtmlUrl:a=this.s.dynamicEl[e].subHtml:(i=this.$items.eq(e)).attr("data-sub-html-url")?t=i.attr("data-sub-html-url"):(a=i.attr("data-sub-html"),this.s.getCaptionFromTitleOrAlt&&!a&&(a=i.attr("title")||i.find("img").first().attr("alt"))),!t)if(null!=a){var n=a.substring(0,1);"."!==n&&"#"!==n||(a=this.s.subHtmlSelectorRelative&&!this.s.dynamic?i.find(a).html():m(a).html())}else a="";".lg-sub-html"===this.s.appendSubHtmlTo?t?this.$outer.find(this.s.appendSubHtmlTo).load(t):this.$outer.find(this.s.appendSubHtmlTo).html(a):t?this.$slide.eq(e).load(t):this.$slide.eq(e).append(a),null!=a&&(""===a?this.$outer.find(this.s.appendSubHtmlTo).addClass("lg-empty-html"):this.$outer.find(this.s.appendSubHtmlTo).removeClass("lg-empty-html")),this.$el.trigger("onAfterAppendSubHtml.lg",[e])},t.prototype.preload=function(e){var t=1,i=1;for(t=1;t<=this.s.preload&&!(t>=this.$items.length-e);t++)this.loadContent(e+t,!1,0);for(i=1;i<=this.s.preload&&!(e-i<0);i++)this.loadContent(e-i,!1,0)},t.prototype.loadContent=function(t,e,i){function a(e){for(var t=[],i=[],a=0;a<e.length;a++){var n=e[a].split(" ");""===n[0]&&n.splice(0,1),i.push(n[0]),t.push(n[1])}for(var r=m(v).width(),s=0;s<t.length;s++)if(parseInt(t[s],10)>r){o=i[s];break}}var n,o,r,s,l,c,d=this,u=!1;if(d.s.dynamic){if(d.s.dynamicEl[t].poster&&(u=!0,r=d.s.dynamicEl[t].poster),c=d.s.dynamicEl[t].html,o=d.s.dynamicEl[t].src,d.s.dynamicEl[t].responsive)a(d.s.dynamicEl[t].responsive.split(","));s=d.s.dynamicEl[t].srcset,l=d.s.dynamicEl[t].sizes}else{if(d.$items.eq(t).attr("data-poster")&&(u=!0,r=d.$items.eq(t).attr("data-poster")),c=d.$items.eq(t).attr("data-html"),o=d.$items.eq(t).attr("href")||d.$items.eq(t).attr("data-src"),d.$items.eq(t).attr("data-responsive"))a(d.$items.eq(t).attr("data-responsive").split(","));s=d.$items.eq(t).attr("data-srcset"),l=d.$items.eq(t).attr("data-sizes")}var p=!1;d.s.dynamic?d.s.dynamicEl[t].iframe&&(p=!0):"true"===d.$items.eq(t).attr("data-iframe")&&(p=!0);var f=d.isVideo(o,t);if(!d.$slide.eq(t).hasClass("lg-loaded")){if(p)d.$slide.eq(t).prepend('<div class="lg-video-cont" style="max-width:'+d.s.iframeMaxWidth+'"><div class="lg-video"><iframe class="lg-object" frameborder="0" src="'+o+'"  allowfullscreen="true"></iframe></div></div>');else if(u){var h;h=f&&f.youtube?"lg-has-youtube":f&&f.vimeo?"lg-has-vimeo":"lg-has-html5",d.$slide.eq(t).prepend('<div class="lg-video-cont '+h+' "><div class="lg-video"><span class="lg-video-play"></span><img class="lg-object lg-has-poster" src="'+r+'" /></div></div>')}else f?(d.$slide.eq(t).prepend('<div class="lg-video-cont "><div class="lg-video"></div></div>'),d.$el.trigger("hasVideo.lg",[t,o,c])):d.$slide.eq(t).prepend('<div class="lg-img-wrap"><img class="lg-object lg-image" src="'+o+'" /></div>');if(d.$el.trigger("onAferAppendSlide.lg",[t]),n=d.$slide.eq(t).find(".lg-object"),l&&n.attr("sizes",l),s){n.attr("srcset",s);try{picturefill({elements:[n[0]]})}catch(e){console.error("Make sure you have included Picturefill version 2")}}".lg-sub-html"!==this.s.appendSubHtmlTo&&d.addHtml(t),d.$slide.eq(t).addClass("lg-loaded")}d.$slide.eq(t).find(".lg-object").on("load.lg error.lg",function(){var e=0;i&&!m("body").hasClass("lg-from-hash")&&(e=i),setTimeout(function(){d.$slide.eq(t).addClass("lg-complete"),d.$el.trigger("onSlideItemLoad.lg",[t,i||0])},e)}),f&&f.html5&&!u&&d.$slide.eq(t).addClass("lg-complete"),!0===e&&(d.$slide.eq(t).hasClass("lg-complete")?d.preload(t):d.$slide.eq(t).find(".lg-object").on("load.lg error.lg",function(){d.preload(t)}))},t.prototype.slide=function(e,t,i){var a=this.$outer.find(".lg-current").index(),n=this;if(!n.lGalleryOn||a!==e){var r=this.$slide.length,s=n.lGalleryOn?this.s.speed:0,o=!1,l=!1;if(!n.lgBusy){var c;if(this.s.download)(c=n.s.dynamic?!1!==n.s.dynamicEl[e].downloadUrl&&(n.s.dynamicEl[e].downloadUrl||n.s.dynamicEl[e].src):"false"!==n.$items.eq(e).attr("data-download-url")&&(n.$items.eq(e).attr("data-download-url")||n.$items.eq(e).attr("href")||n.$items.eq(e).attr("data-src")))?(m("#lg-download").attr("href",c),n.$outer.removeClass("lg-hide-download")):n.$outer.addClass("lg-hide-download");if(this.$el.trigger("onBeforeSlide.lg",[a,e,t,i]),n.lgBusy=!0,clearTimeout(n.hideBartimeout),".lg-sub-html"===this.s.appendSubHtmlTo&&setTimeout(function(){n.addHtml(e)},s),this.arrowDisable(e),t){var d=e-1,u=e+1;(0===e&&a===r-1||e===r-1&&0===a)&&(u=0,d=r-1),this.$slide.removeClass("lg-prev-slide lg-current lg-next-slide"),n.$slide.eq(d).addClass("lg-prev-slide"),n.$slide.eq(u).addClass("lg-next-slide"),n.$slide.eq(e).addClass("lg-current")}else n.$outer.addClass("lg-no-trans"),this.$slide.removeClass("lg-prev-slide lg-next-slide"),e<a?(l=!0,0!==e||a!==r-1||i||(o=!(l=!1))):a<e&&(o=!0,e!==r-1||0!==a||i||(o=!(l=!0))),l?(this.$slide.eq(e).addClass("lg-prev-slide"),this.$slide.eq(a).addClass("lg-next-slide")):o&&(this.$slide.eq(e).addClass("lg-next-slide"),this.$slide.eq(a).addClass("lg-prev-slide")),setTimeout(function(){n.$slide.removeClass("lg-current"),n.$slide.eq(e).addClass("lg-current"),n.$outer.removeClass("lg-no-trans")},50);n.lGalleryOn?(setTimeout(function(){n.loadContent(e,!0,0)},this.s.speed+50),setTimeout(function(){n.lgBusy=!1,n.$el.trigger("onAfterSlide.lg",[a,e,t,i])},this.s.speed)):(n.loadContent(e,!0,n.s.backdropDuration),n.lgBusy=!1,n.$el.trigger("onAfterSlide.lg",[a,e,t,i])),n.lGalleryOn=!0,this.s.counter&&m("#lg-counter-current").text(e+1)}}},t.prototype.goToNextSlide=function(e){var t=this;t.lgBusy||(t.index+1<t.$slide.length?(t.index++,t.$el.trigger("onBeforeNextSlide.lg",[t.index]),t.slide(t.index,e,!1)):t.s.loop?(t.index=0,t.$el.trigger("onBeforeNextSlide.lg",[t.index]),t.slide(t.index,e,!1)):t.s.slideEndAnimatoin&&(t.$outer.addClass("lg-right-end"),setTimeout(function(){t.$outer.removeClass("lg-right-end")},400)))},t.prototype.goToPrevSlide=function(e){var t=this;t.lgBusy||(0<t.index?(t.index--,t.$el.trigger("onBeforePrevSlide.lg",[t.index,e]),t.slide(t.index,e,!1)):t.s.loop?(t.index=t.$items.length-1,t.$el.trigger("onBeforePrevSlide.lg",[t.index,e]),t.slide(t.index,e,!1)):t.s.slideEndAnimatoin&&(t.$outer.addClass("lg-left-end"),setTimeout(function(){t.$outer.removeClass("lg-left-end")},400)))},t.prototype.keyPress=function(){var t=this;1<this.$items.length&&m(v).on("keyup.lg",function(e){1<t.$items.length&&(37===e.keyCode&&(e.preventDefault(),t.goToPrevSlide()),39===e.keyCode&&(e.preventDefault(),t.goToNextSlide()))}),m(v).on("keydown.lg",function(e){!0===t.s.escKey&&27===e.keyCode&&(e.preventDefault(),t.$outer.hasClass("lg-thumb-open")?t.$outer.removeClass("lg-thumb-open"):t.destroy())})},t.prototype.arrow=function(){var e=this;this.$outer.find(".lg-prev").on("click.lg",function(){e.goToPrevSlide()}),this.$outer.find(".lg-next").on("click.lg",function(){e.goToNextSlide()})},t.prototype.arrowDisable=function(e){!this.s.loop&&this.s.hideControlOnEnd&&(e+1<this.$slide.length?this.$outer.find(".lg-next").removeAttr("disabled").removeClass("disabled"):this.$outer.find(".lg-next").attr("disabled","disabled").addClass("disabled"),0<e?this.$outer.find(".lg-prev").removeAttr("disabled").removeClass("disabled"):this.$outer.find(".lg-prev").attr("disabled","disabled").addClass("disabled"))},t.prototype.setTranslate=function(e,t,i){this.s.useLeft?e.css("left",t):e.css({transform:"translate3d("+t+"px, "+i+"px, 0px)"})},t.prototype.touchMove=function(e,t){var i=t-e;15<Math.abs(i)&&(this.$outer.addClass("lg-dragging"),this.setTranslate(this.$slide.eq(this.index),i,0),this.setTranslate(m(".lg-prev-slide"),-this.$slide.eq(this.index).width()+i,0),this.setTranslate(m(".lg-next-slide"),this.$slide.eq(this.index).width()+i,0))},t.prototype.touchEnd=function(e){var t=this;"lg-slide"!==t.s.mode&&t.$outer.addClass("lg-slide"),this.$slide.not(".lg-current, .lg-prev-slide, .lg-next-slide").css("opacity","0"),setTimeout(function(){t.$outer.removeClass("lg-dragging"),e<0&&Math.abs(e)>t.s.swipeThreshold?t.goToNextSlide(!0):0<e&&Math.abs(e)>t.s.swipeThreshold?t.goToPrevSlide(!0):Math.abs(e)<5&&t.$el.trigger("onSlideClick.lg"),t.$slide.removeAttr("style")}),setTimeout(function(){t.$outer.hasClass("lg-dragging")||"lg-slide"===t.s.mode||t.$outer.removeClass("lg-slide")},t.s.speed+100)},t.prototype.enableSwipe=function(){var t=this,i=0,a=0,n=!1;t.s.enableSwipe&&t.isTouch&&t.doCss()&&(t.$slide.on("touchstart.lg",function(e){t.$outer.hasClass("lg-zoomed")||t.lgBusy||(e.preventDefault(),t.manageSwipeClass(),i=e.originalEvent.targetTouches[0].pageX)}),t.$slide.on("touchmove.lg",function(e){t.$outer.hasClass("lg-zoomed")||(e.preventDefault(),a=e.originalEvent.targetTouches[0].pageX,t.touchMove(i,a),n=!0)}),t.$slide.on("touchend.lg",function(){t.$outer.hasClass("lg-zoomed")||(n?(n=!1,t.touchEnd(a-i)):t.$el.trigger("onSlideClick.lg"))}))},t.prototype.enableDrag=function(){var t=this,i=0,a=0,n=!1,r=!1;t.s.enableDrag&&!t.isTouch&&t.doCss()&&(t.$slide.on("mousedown.lg",function(e){t.$outer.hasClass("lg-zoomed")||(m(e.target).hasClass("lg-object")||m(e.target).hasClass("lg-video-play"))&&(e.preventDefault(),t.lgBusy||(t.manageSwipeClass(),i=e.pageX,n=!0,t.$outer.scrollLeft+=1,--t.$outer.scrollLeft,t.$outer.removeClass("lg-grab").addClass("lg-grabbing"),t.$el.trigger("onDragstart.lg")))}),m(v).on("mousemove.lg",function(e){n&&(r=!0,a=e.pageX,t.touchMove(i,a),t.$el.trigger("onDragmove.lg"))}),m(v).on("mouseup.lg",function(e){r?(r=!1,t.touchEnd(a-i),t.$el.trigger("onDragend.lg")):(m(e.target).hasClass("lg-object")||m(e.target).hasClass("lg-video-play"))&&t.$el.trigger("onSlideClick.lg"),n&&(n=!1,t.$outer.removeClass("lg-grabbing").addClass("lg-grab"))}))},t.prototype.manageSwipeClass=function(){var e=this.index+1,t=this.index-1,i=this.$slide.length;this.s.loop&&(0===this.index?t=i-1:this.index===i-1&&(e=0)),this.$slide.removeClass("lg-next-slide lg-prev-slide"),-1<t&&this.$slide.eq(t).addClass("lg-prev-slide"),this.$slide.eq(e).addClass("lg-next-slide")},t.prototype.mousewheel=function(){var t=this;t.$outer.on("mousewheel.lg",function(e){e.deltaY&&(0<e.deltaY?t.goToPrevSlide():t.goToNextSlide(),e.preventDefault())})},t.prototype.closeGallery=function(){var t=this,i=!1;this.$outer.find(".lg-close").on("click.lg",function(){t.destroy()}),t.s.closable&&(t.$outer.on("mousedown.lg",function(e){i=!!(m(e.target).is(".lg-outer")||m(e.target).is(".lg-item ")||m(e.target).is(".lg-img-wrap"))}),t.$outer.on("mouseup.lg",function(e){(m(e.target).is(".lg-outer")||m(e.target).is(".lg-item ")||m(e.target).is(".lg-img-wrap")&&i)&&(t.$outer.hasClass("lg-dragging")||t.destroy())}))},t.prototype.destroy=function(e){var t=this;e||t.$el.trigger("onBeforeClose.lg"),m(v).scrollTop(t.prevScrollTop),e&&(t.s.dynamic||this.$items.off("click.lg click.lgcustom"),m.removeData(t.el,"lightGallery")),this.$el.off(".lg.tm"),m.each(m.fn.lightGallery.modules,function(e){t.modules[e]&&t.modules[e].destroy()}),this.lGalleryOn=!1,clearTimeout(t.hideBartimeout),this.hideBartimeout=!1,m(v).off(".lg"),m("body").removeClass("lg-on lg-from-hash"),t.$outer&&t.$outer.removeClass("lg-visible"),m(".lg-backdrop").removeClass("in"),setTimeout(function(){t.$outer&&t.$outer.remove(),m(".lg-backdrop").remove(),e||t.$el.trigger("onCloseAfter.lg")},t.s.backdropDuration+50)},m.fn.lightGallery=function(e){return this.each(function(){if(m.data(this,"lightGallery"))try{m(this).data("lightGallery").init()}catch(e){console.error("lightGallery has not initiated properly")}else m.data(this,"lightGallery",new t(this,e))})},m.fn.lightGallery.modules={}}(jQuery,window,document)}),function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).Clipboard=e()}}(function(){return function r(s,o,l){function c(t,e){if(!o[t]){if(!s[t]){var i="function"==typeof require&&require;if(!e&&i)return i(t,!0);if(d)return d(t,!0);var a=new Error("Cannot find module '"+t+"'");throw a.code="MODULE_NOT_FOUND",a}var n=o[t]={exports:{}};s[t][0].call(n.exports,function(e){return c(s[t][1][e]||e)},n,n.exports,r,s,o,l)}return o[t].exports}for(var d="function"==typeof require&&require,e=0;e<l.length;e++)c(l[e]);return c}({1:[function(e,t,i){if("undefined"!=typeof Element&&!Element.prototype.matches){var a=Element.prototype;a.matches=a.matchesSelector||a.mozMatchesSelector||a.msMatchesSelector||a.oMatchesSelector||a.webkitMatchesSelector}t.exports=function(e,t){for(;e&&9!==e.nodeType;){if("function"==typeof e.matches&&e.matches(t))return e;e=e.parentNode}}},{}],2:[function(e,t,i){var s=e("./closest");t.exports=function(e,t,i,a,n){var r=function(t,i,e,a){return function(e){e.delegateTarget=s(e.target,i),e.delegateTarget&&a.call(t,e)}}.apply(this,arguments);return e.addEventListener(i,r,n),{destroy:function(){e.removeEventListener(i,r,n)}}}},{"./closest":1}],3:[function(e,t,i){i.node=function(e){return void 0!==e&&e instanceof HTMLElement&&1===e.nodeType},i.nodeList=function(e){var t=Object.prototype.toString.call(e);return void 0!==e&&("[object NodeList]"===t||"[object HTMLCollection]"===t)&&"length"in e&&(0===e.length||i.node(e[0]))},i.string=function(e){return"string"==typeof e||e instanceof String},i.fn=function(e){return"[object Function]"===Object.prototype.toString.call(e)}},{}],4:[function(e,t,i){var p=e("./is"),f=e("delegate");t.exports=function(e,t,i){if(!e&&!t&&!i)throw new Error("Missing required arguments");if(!p.string(t))throw new TypeError("Second argument must be a String");if(!p.fn(i))throw new TypeError("Third argument must be a Function");if(p.node(e))return n=t,r=i,(a=e).addEventListener(n,r),{destroy:function(){a.removeEventListener(n,r)}};var a,n,r,s,o,l,c,d,u;if(p.nodeList(e))return s=e,o=t,l=i,Array.prototype.forEach.call(s,function(e){e.addEventListener(o,l)}),{destroy:function(){Array.prototype.forEach.call(s,function(e){e.removeEventListener(o,l)})}};if(p.string(e))return c=e,d=t,u=i,f(document.body,c,d,u);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}},{"./is":3,delegate:2}],5:[function(e,t,i){t.exports=function(e){var t;if("SELECT"===e.nodeName)e.focus(),t=e.value;else if("INPUT"===e.nodeName||"TEXTAREA"===e.nodeName){var i=e.hasAttribute("readonly");i||e.setAttribute("readonly",""),e.select(),e.setSelectionRange(0,e.value.length),i||e.removeAttribute("readonly"),t=e.value}else{e.hasAttribute("contenteditable")&&e.focus();var a=window.getSelection(),n=document.createRange();n.selectNodeContents(e),a.removeAllRanges(),a.addRange(n),t=a.toString()}return t}},{}],6:[function(e,t,i){function a(){}a.prototype={on:function(e,t,i){var a=this.e||(this.e={});return(a[e]||(a[e]=[])).push({fn:t,ctx:i}),this},once:function(e,t,i){function a(){n.off(e,a),t.apply(i,arguments)}var n=this;return a._=t,this.on(e,a,i)},emit:function(e){for(var t=[].slice.call(arguments,1),i=((this.e||(this.e={}))[e]||[]).slice(),a=0,n=i.length;a<n;a++)i[a].fn.apply(i[a].ctx,t);return this},off:function(e,t){var i=this.e||(this.e={}),a=i[e],n=[];if(a&&t)for(var r=0,s=a.length;r<s;r++)a[r].fn!==t&&a[r].fn._!==t&&n.push(a[r]);return n.length?i[e]=n:delete i[e],this}},t.exports=a},{}],7:[function(a,n,r){!function(e,t){if(0,void 0!==r)t(n,a("select"));else{var i={exports:{}};t(i,e.select),e.clipboardAction=i.exports}}(this,function(e,t){"use strict";var i,a=(i=t)&&i.__esModule?i:{default:i},n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r=(function(e,t,i){return t&&o(e.prototype,t),i&&o(e,i),e}(s,[{key:"resolveOptions",value:function(e){var t=0<arguments.length&&void 0!==e?e:{};this.action=t.action,this.container=t.container,this.emitter=t.emitter,this.target=t.target,this.text=t.text,this.trigger=t.trigger,this.selectedText=""}},{key:"initSelection",value:function(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"selectFake",value:function(){var e=this,t="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandlerCallback=function(){return e.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[t?"right":"left"]="-9999px";var i=window.pageYOffset||document.documentElement.scrollTop;this.fakeElem.style.top=i+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.container.appendChild(this.fakeElem),this.selectedText=(0,a.default)(this.fakeElem),this.copyText()}},{key:"removeFake",value:function(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function(){this.selectedText=(0,a.default)(this.target),this.copyText()}},{key:"copyText",value:function(){var t=void 0;try{t=document.execCommand(this.action)}catch(e){t=!1}this.handleResult(t)}},{key:"handleResult",value:function(e){this.emitter.emit(e?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function(){this.trigger&&this.trigger.focus(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function(){this.removeFake()}},{key:"action",set:function(e){var t=0<arguments.length&&void 0!==e?e:"copy";if(this._action=t,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function(){return this._action}},{key:"target",set:function(e){if(void 0!==e){if(!e||"object"!==(void 0===e?"undefined":n(e))||1!==e.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&e.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(e.hasAttribute("readonly")||e.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=e}},get:function(){return this._target}}]),s);function s(e){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,s),this.resolveOptions(e),this.initSelection()}function o(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}e.exports=r})},{select:5}],8:[function(a,n,r){!function(e,t){if(0,void 0!==r)t(n,a("./clipboard-action"),a("tiny-emitter"),a("good-listener"));else{var i={exports:{}};t(i,e.clipboardAction,e.tinyEmitter,e.goodListener),e.clipboard=i.exports}}(this,function(e,t,i,a){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function r(e,t){var i="data-clipboard-"+e;if(t.hasAttribute(i))return t.getAttribute(i)}var s=n(t),o=n(i),l=n(a),c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d=function(e,t,i){return t&&f(e.prototype,t),i&&f(e,i),e},u=(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(p,o.default),d(p,[{key:"resolveOptions",value:function(e){var t=0<arguments.length&&void 0!==e?e:{};this.action="function"==typeof t.action?t.action:this.defaultAction,this.target="function"==typeof t.target?t.target:this.defaultTarget,this.text="function"==typeof t.text?t.text:this.defaultText,this.container="object"===c(t.container)?t.container:document.body}},{key:"listenClick",value:function(e){var t=this;this.listener=(0,l.default)(e,"click",function(e){return t.onClick(e)})}},{key:"onClick",value:function(e){var t=e.delegateTarget||e.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new s.default({action:this.action(t),target:this.target(t),text:this.text(t),container:this.container,trigger:t,emitter:this})}},{key:"defaultAction",value:function(e){return r("action",e)}},{key:"defaultTarget",value:function(e){var t=r("target",e);if(t)return document.querySelector(t)}},{key:"defaultText",value:function(e){return r("text",e)}},{key:"destroy",value:function(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}],[{key:"isSupported",value:function(e){var t=0<arguments.length&&void 0!==e?e:["copy","cut"],i="string"==typeof t?[t]:t,a=!!document.queryCommandSupported;return i.forEach(function(e){a=a&&!!document.queryCommandSupported(e)}),a}}]),p);function p(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(p.__proto__||Object.getPrototypeOf(p)).call(this));return i.resolveOptions(t),i.listenClick(e),i}function f(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}e.exports=u})},{"./clipboard-action":7,"good-listener":4,"tiny-emitter":6}]},{},[8])(8)}),function(o){function a(e,t){var i,a,n,r=e.nodeName.toLowerCase();return"area"===r?(a=(i=e.parentNode).name,!(!e.href||!a||"map"!==i.nodeName.toLowerCase())&&(!!(n=o("img[usemap=#"+a+"]")[0])&&s(n))):(/input|select|textarea|button|object/.test(r)?!e.disabled:"a"===r&&e.href||t)&&s(e)}function s(e){return o.expr.filters.visible(e)&&!o(e).parents().andSelf().filter(function(){return"hidden"===o.css(this,"visibility")}).length}var e,t,i=0,n=/^ui-id-\d+$/;o.ui=o.ui||{},o.ui.version||(o.extend(o.ui,{version:"1.9.2",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),o.fn.extend({_focus:o.fn.focus,focus:function(t,i){return"number"==typeof t?this.each(function(){var e=this;setTimeout(function(){o(e).focus(),i&&i.call(e)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var e;return e=o.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(o.css(this,"position"))&&/(auto|scroll)/.test(o.css(this,"overflow")+o.css(this,"overflow-y")+o.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(o.css(this,"overflow")+o.css(this,"overflow-y")+o.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!e.length?o(document):e},zIndex:function(e){if(void 0!==e)return this.css("zIndex",e);if(this.length)for(var t,i,a=o(this[0]);a.length&&a[0]!==document;){if(("absolute"===(t=a.css("position"))||"relative"===t||"fixed"===t)&&(i=parseInt(a.css("zIndex"),10),!isNaN(i)&&0!==i))return i;a=a.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++i)})},removeUniqueId:function(){return this.each(function(){n.test(this.id)&&o(this).removeAttr("id")})}}),o.extend(o.expr[":"],{data:o.expr.createPseudo?o.expr.createPseudo(function(t){return function(e){return!!o.data(e,t)}}):function(e,t,i){return!!o.data(e,i[3])},focusable:function(e){return a(e,!isNaN(o.attr(e,"tabindex")))},tabbable:function(e){var t=o.attr(e,"tabindex"),i=isNaN(t);return(i||0<=t)&&a(e,!i)}}),o(function(){var e=document.body,t=e.appendChild(t=document.createElement("div"));t.offsetHeight,o.extend(t.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),o.support.minHeight=100===t.offsetHeight,o.support.selectstart="onselectstart"in t,e.removeChild(t).style.display="none"}),o("<a>").outerWidth(1).jquery||o.each(["Width","Height"],function(e,i){function a(e,t,i,a){return o.each(n,function(){t-=parseFloat(o.css(e,"padding"+this))||0,i&&(t-=parseFloat(o.css(e,"border"+this+"Width"))||0),a&&(t-=parseFloat(o.css(e,"margin"+this))||0)}),t}var n="Width"===i?["Left","Right"]:["Top","Bottom"],r=i.toLowerCase(),s={innerWidth:o.fn.innerWidth,innerHeight:o.fn.innerHeight,outerWidth:o.fn.outerWidth,outerHeight:o.fn.outerHeight};o.fn["inner"+i]=function(e){return void 0===e?s["inner"+i].call(this):this.each(function(){o(this).css(r,a(this,e)+"px")})},o.fn["outer"+i]=function(e,t){return"number"!=typeof e?s["outer"+i].call(this,e):this.each(function(){o(this).css(r,a(this,e,!0,t)+"px")})}}),o("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(o.fn.removeData=(t=o.fn.removeData,function(e){return arguments.length?t.call(this,o.camelCase(e)):t.call(this)})),e=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[],o.ui.ie=!!e.length,o.ui.ie6=6===parseFloat(e[1],10),o.fn.extend({disableSelection:function(){return this.bind((o.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),o.extend(o.ui,{plugin:{add:function(e,t,i){var a,n=o.ui[e].prototype;for(a in i)n.plugins[a]=n.plugins[a]||[],n.plugins[a].push([t,i[a]])},call:function(e,t,i){var a,n=e.plugins[t];if(n&&e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType)for(a=0;n.length>a;a++)e.options[n[a][0]]&&n[a][1].apply(e.element,i)}},contains:o.contains,hasScroll:function(e,t){if("hidden"===o(e).css("overflow"))return!1;var i=t&&"left"===t?"scrollLeft":"scrollTop",a=!1;return 0<e[i]||(e[i]=1,a=0<e[i],e[i]=0,a)},isOverAxis:function(e,t,i){return t<e&&e<t+i},isOver:function(e,t,i,a,n,r){return o.ui.isOverAxis(e,i,n)&&o.ui.isOverAxis(t,a,r)}}))}(jQuery),function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Предыдущий месяц",nextText:"Следующий месяц",currentText:"Сегодня",monthNames:["Января","Февраля","Марта","Апреля","Мая","Июня","Июля","Августа","Сентября","Октября","Ноября","Декабря"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Понедельник","Вторник","Среда","Четверг","Пятница","Суббота","Воскресенье"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["ВС","ПН","ВТ","СР","ЧТ","ПТ","СБ"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(e){var t="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(t,"mouseout",function(){$(this).removeClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).removeClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).removeClass("ui-datepicker-next-hover")}).delegate(t,"mouseover",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),$(this).addClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).addClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).addClass("ui-datepicker-next-hover"))})}function extendRemove(e,t){for(var i in $.extend(e,t),t)null!=t[i]&&t[i]!=undefined||(e[i]=t[i]);return e}$.extend($.ui,{datepicker:{version:"1.9.2"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(e){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline="div"==nodeName||"span"==nodeName;target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),"input"==nodeName?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){return{id:e[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1"),input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(e,a){var t=$(e);a.append=$([]),a.trigger=$([]),t.hasClass(this.markerClassName)||(this._attachments(t,a),t.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,t,i){a.settings[t]=i}).bind("getData.datepicker",function(e,t){return this._get(a,t)}),this._autoSize(a),$.data(e,PROP_NAME,a),a.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,t){var i=this._get(t,"appendText"),a=this._get(t,"isRTL");t.append&&t.append.remove(),i&&(t.append=$('<span class="'+this._appendClass+'">'+i+"</span>"),e[a?"before":"after"](t.append)),e.unbind("focus",this._showDatepicker),t.trigger&&t.trigger.remove();var n=this._get(t,"showOn");if("focus"!=n&&"both"!=n||e.focus(this._showDatepicker),"button"==n||"both"==n){var r=this._get(t,"buttonText"),s=this._get(t,"buttonImage");t.trigger=$(this._get(t,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:s,alt:r,title:r}):$('<button type="button"></button>').addClass(this._triggerClass).html(""==s?r:$("<img/>").attr({src:s,alt:r,title:r}))),e[a?"before":"after"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():($.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]&&$.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])),!1})}},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t=new Date(2009,11,20),i=this._get(e,"dateFormat");if(i.match(/[DM]/)){function a(e){for(var t=0,i=0,a=0;e.length>a;a++)e[a].length>t&&(t=e[a].length,i=a);return i}t.setMonth(a(this._get(e,i.match(/MM/)?"monthNames":"monthNamesShort"))),t.setDate(a(this._get(e,i.match(/DD/)?"dayNames":"dayNamesShort"))+20-t.getDay())}e.input.attr("size",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,a){var t=$(e);t.hasClass(this.markerClassName)||(t.addClass(this.markerClassName).append(a.dpDiv).bind("setData.datepicker",function(e,t,i){a.settings[t]=i}).bind("getData.datepicker",function(e,t){return this._get(a,t)}),$.data(e,PROP_NAME,a),this._setDate(a,this._getDefaultDate(a),!0),this._updateDatepicker(a),this._updateAlternate(a),a.settings.disabled&&this._disableDatepicker(e),a.dpDiv.css("display","block"))},_dialogDatepicker:function(e,t,i,a,n){var r=this._dialogInst;if(!r){this.uuid+=1;var s="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+s+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),(r=this._dialogInst=this._newInst(this._dialogInput,!1)).settings={},$.data(this._dialogInput[0],PROP_NAME,r)}if(extendRemove(r.settings,a||{}),t=t&&t.constructor==Date?this._formatDate(r,t):t,this._dialogInput.val(t),this._pos=n?n.length?n:[n.pageX,n.pageY]:null,!this._pos){var o=document.documentElement.clientWidth,l=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,d=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[o/2-100+c,l/2-150+d]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),r.settings.onSelect=i,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,r),this},_destroyDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var a=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),"input"==a?(i.append.remove(),i.trigger.remove(),t.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):"div"!=a&&"span"!=a||t.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(t){var e=$(t),i=$.data(t,PROP_NAME);if(e.hasClass(this.markerClassName)){var a=t.nodeName.toLowerCase();if("input"==a)t.disabled=!1,i.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if("div"==a||"span"==a){var n=e.children("."+this._inlineClass);n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)}this._disabledInputs=$.map(this._disabledInputs,function(e){return e==t?null:e})}},_disableDatepicker:function(t){var e=$(t),i=$.data(t,PROP_NAME);if(e.hasClass(this.markerClassName)){var a=t.nodeName.toLowerCase();if("input"==a)t.disabled=!0,i.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if("div"==a||"span"==a){var n=e.children("."+this._inlineClass);n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)}this._disabledInputs=$.map(this._disabledInputs,function(e){return e==t?null:e}),this._disabledInputs[this._disabledInputs.length]=t}},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;this._disabledInputs.length>t;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(e){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,t,i){var a=this._getInst(e);if(2==arguments.length&&"string"==typeof t)return"defaults"==t?$.extend({},$.datepicker._defaults):a?"all"==t?$.extend({},a.settings):this._get(a,t):null;var n=t||{};if("string"==typeof t&&((n={})[t]=i),a){this._curInst==a&&this._hideDatepicker();var r=this._getDateDatepicker(e,!0),s=this._getMinMaxDate(a,"min"),o=this._getMinMaxDate(a,"max");extendRemove(a.settings,n),null!==s&&n.dateFormat!==undefined&&n.minDate===undefined&&(a.settings.minDate=this._formatDate(a,s)),null!==o&&n.dateFormat!==undefined&&n.maxDate===undefined&&(a.settings.maxDate=this._formatDate(a,o)),this._attachments($(e),a),this._autoSize(a),this._setDate(a,r),this._updateAlternate(a),this._updateDatepicker(a)}},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),i=!0,a=t.dpDiv.is(".ui-datepicker-rtl");if(t._keyEvent=!0,$.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),i=!1;break;case 13:var n=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",t.dpDiv);n[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,n[0]);var r=$.datepicker._get(t,"onSelect");if(r){var s=$.datepicker._formatDate(t);r.apply(t.input?t.input[0]:null,[s,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),i=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),i=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,a?1:-1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,"D"),i=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,a?-1:1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,"D"),i=e.ctrlKey||e.metaKey;break;default:i=!1}else 36==e.keyCode&&e.ctrlKey?$.datepicker._showDatepicker(this):i=!1;i&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,"constrainInput")){var i=$.datepicker._possibleChars($.datepicker._get(t,"dateFormat")),a=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||a<" "||!i||-1<i.indexOf(a)}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{$.datepicker.parseDate($.datepicker._get(t,"dateFormat"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t))&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(e){$.datepicker.log(e)}return!0},_showDatepicker:function(e){if("input"!=(e=e.target||e).nodeName.toLowerCase()&&(e=$("input",e.parentNode)[0]),!$.datepicker._isDisabledDatepicker(e)&&$.datepicker._lastInput!=e){var i=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=i&&($.datepicker._curInst.dpDiv.stop(!0,!0),i&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var t=$.datepicker._get(i,"beforeShow"),a=t?t.apply(e,[e,i]):{};if(!1!==a){extendRemove(i.settings,a),i.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(i),$.datepicker._inDialog&&(e.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var n=!1;$(e).parents().each(function(){return!(n|="fixed"==$(this).css("position"))});var r={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};if($.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(i),r=$.datepicker._checkOffset(i,r,n),i.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":n?"fixed":"absolute",display:"none",left:r.left+"px",top:r.top+"px"}),!i.inline){function s(){var e=i.dpDiv.find("iframe.ui-datepicker-cover");if(e.length){var t=$.datepicker._getBorders(i.dpDiv);e.css({left:-t[0],top:-t[1],width:i.dpDiv.outerWidth(),height:i.dpDiv.outerHeight()})}}var o=$.datepicker._get(i,"showAnim"),l=$.datepicker._get(i,"duration");i.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?i.dpDiv.show(o,$.datepicker._get(i,"showOptions"),l,s):i.dpDiv[o||"show"](o?l:null,s),o&&l||s(),i.input.is(":visible")&&!i.input.is(":disabled")&&i.input.focus(),$.datepicker._curInst=i}}}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);(instActive=e).dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i=e.dpDiv.find("iframe.ui-datepicker-cover");i.length&&i.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var a=this._getNumberOfMonths(e),n=a[1];if(e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),1<n&&e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width","100%"),e.dpDiv[(1!=a[0]||1!=a[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&e.input[0]!=document.activeElement&&e.input.focus(),e.yearshtml){var r=e.yearshtml;setTimeout(function(){r===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),r=e.yearshtml=null},0)}},_getBorders:function(e){function t(e){return{thin:1,medium:2,thick:3}[e]||e}return[parseFloat(t(e.css("border-left-width"))),parseFloat(t(e.css("border-top-width")))]},_checkOffset:function(e,t,i){var a=e.dpDiv.outerWidth(),n=e.dpDiv.outerHeight(),r=e.input?e.input.outerWidth():0,s=e.input?e.input.outerHeight():0,o=document.documentElement.clientWidth+(i?0:$(document).scrollLeft()),l=document.documentElement.clientHeight+(i?0:$(document).scrollTop());return t.left-=this._get(e,"isRTL")?a-r:0,t.left-=i&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=i&&t.top==e.input.offset().top+s?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+a>o&&a<o?Math.abs(t.left+a-o):0),t.top-=Math.min(t.top,t.top+n>l&&n<l?Math.abs(n+s):0),t},_findPos:function(e){for(var t=this._getInst(e),i=this._get(t,"isRTL");e&&("hidden"==e.type||1!=e.nodeType||$.expr.filters.hidden(e));)e=e[i?"previousSibling":"nextSibling"];var a=$(e).offset();return[a.left,a.top]},_hideDatepicker:function(e){var t=this._curInst;if(t&&(!e||t==$.data(e,PROP_NAME))&&this._datepickerShowing){function i(){$.datepicker._tidyDialog(t)}var a=this._get(t,"showAnim"),n=this._get(t,"duration");$.effects&&($.effects.effect[a]||$.effects[a])?t.dpDiv.hide(a,$.datepicker._get(t,"showOptions"),n,i):t.dpDiv["slideDown"==a?"slideUp":"fadeIn"==a?"fadeOut":"hide"](a?n:null,i),a||i(),this._datepickerShowing=!1;var r=this._get(t,"onClose");r&&r.apply(t.input?t.input[0]:null,[t.input?t.input.val():"",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if($.datepicker._curInst){var t=$(e.target),i=$.datepicker._getInst(t[0]);(t[0].id==$.datepicker._mainDivId||0!=t.parents("#"+$.datepicker._mainDivId).length||t.hasClass($.datepicker.markerClassName)||t.closest("."+$.datepicker._triggerClass).length||!$.datepicker._datepickerShowing||$.datepicker._inDialog&&$.blockUI)&&(!t.hasClass($.datepicker.markerClassName)||$.datepicker._curInst==i)||$.datepicker._hideDatepicker()}},_adjustDate:function(e,t,i){var a=$(e),n=this._getInst(a[0]);this._isDisabledDatepicker(a[0])||(this._adjustInstDate(n,t+("M"==i?this._get(n,"showCurrentAtPos"):0),i),this._updateDatepicker(n))},_gotoToday:function(e){var t=$(e),i=this._getInst(t[0]);if(this._get(i,"gotoCurrent")&&i.currentDay)i.selectedDay=i.currentDay,i.drawMonth=i.selectedMonth=i.currentMonth,i.drawYear=i.selectedYear=i.currentYear;else{var a=new Date;i.selectedDay=a.getDate(),i.drawMonth=i.selectedMonth=a.getMonth(),i.drawYear=i.selectedYear=a.getFullYear()}this._notifyChange(i),this._adjustDate(t)},_selectMonthYear:function(e,t,i){var a=$(e),n=this._getInst(a[0]);n["selected"+("M"==i?"Month":"Year")]=n["draw"+("M"==i?"Month":"Year")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(n),this._adjustDate(a)},_selectDay:function(e,t,i,a){var n=$(e);if(!$(a).hasClass(this._unselectableClass)&&!this._isDisabledDatepicker(n[0])){var r=this._getInst(n[0]);r.selectedDay=r.currentDay=$("a",a).html(),r.selectedMonth=r.currentMonth=t,r.selectedYear=r.currentYear=i,this._selectDate(e,this._formatDate(r,r.currentDay,r.currentMonth,r.currentYear))}},_clearDate:function(e){var t=$(e);this._getInst(t[0]),this._selectDate(t,"")},_selectDate:function(e,t){var i=$(e),a=this._getInst(i[0]);t=null!=t?t:this._formatDate(a),a.input&&a.input.val(t),this._updateAlternate(a);var n=this._get(a,"onSelect");n?n.apply(a.input?a.input[0]:null,[t,a]):a.input&&a.input.trigger("change"),a.inline?this._updateDatepicker(a):(this._hideDatepicker(),this._lastInput=a.input[0],"object"!=typeof a.input[0]&&a.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,"altField");if(t){var i=this._get(e,"altFormat")||this._get(e,"dateFormat"),a=this._getDate(e),n=this.formatDate(i,a,this._getFormatConfig(e));$(t).each(function(){$(this).val(n)})}},noWeekends:function(e){var t=e.getDay();return[0<t&&t<6,""]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var i=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((i-t)/864e5)/7)+1},parseDate:function(i,r,e){if(null==i||null==r)throw"Invalid arguments";if(""==(r="object"==typeof r?""+r:r+""))return null;var t=(e?e.shortYearCutoff:null)||this._defaults.shortYearCutoff;t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10);function s(e){var t=i.length>_+1&&i.charAt(_+1)==e;return t&&_++,t}function a(e){var t=s(e),i=RegExp("^\\d{1,"+("@"==e?14:"!"==e?20:"y"==e&&t?4:"o"==e?3:2)+"}"),a=r.substring(g).match(i);if(!a)throw"Missing number at position "+g;return g+=a[0].length,parseInt(a[0],10)}function n(e,t,i){var a=$.map(s(e)?i:t,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),n=-1;if($.each(a,function(e,t){var i=t[1];return r.substr(g,i.length).toLowerCase()==i.toLowerCase()?(n=t[0],g+=i.length,!1):undefined}),-1!=n)return n+1;throw"Unknown name at position "+g}function o(){if(r.charAt(g)!=i.charAt(_))throw"Unexpected literal at position "+g;g++}for(var l=(e?e.dayNamesShort:null)||this._defaults.dayNamesShort,c=(e?e.dayNames:null)||this._defaults.dayNames,d=(e?e.monthNamesShort:null)||this._defaults.monthNamesShort,u=(e?e.monthNames:null)||this._defaults.monthNames,p=-1,f=-1,h=-1,m=-1,v=!1,g=0,_=0;i.length>_;_++)if(v)"'"!=i.charAt(_)||s("'")?o():v=!1;else switch(i.charAt(_)){case"d":h=a("d");break;case"D":n("D",l,c);break;case"o":m=a("o");break;case"m":f=a("m");break;case"M":f=n("M",d,u);break;case"y":p=a("y");break;case"@":p=(y=new Date(a("@"))).getFullYear(),f=y.getMonth()+1,h=y.getDate();break;case"!":var y;p=(y=new Date((a("!")-this._ticksTo1970)/1e4)).getFullYear(),f=y.getMonth()+1,h=y.getDate();break;case"'":s("'")?o():v=!0;break;default:o()}if(r.length>g){var b=r.substr(g);if(!/^\s+/.test(b))throw"Extra/unparsed characters found in date: "+b}if(-1==p?p=(new Date).getFullYear():p<100&&(p+=(new Date).getFullYear()-(new Date).getFullYear()%100+(p<=t?0:-100)),-1<m)for(f=1,h=m;;){var k=this._getDaysInMonth(p,f-1);if(h<=k)break;f++,h-=k}if((y=this._daylightSavingAdjust(new Date(p,f-1,h))).getFullYear()!=p||y.getMonth()+1!=f||y.getDate()!=h)throw"Invalid date";return y},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:864e9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(i,e,t){if(!e)return"";function n(e){var t=i.length>p+1&&i.charAt(p+1)==e;return t&&p++,t}function a(e,t,i){var a=""+t;if(n(e))for(;i>a.length;)a="0"+a;return a}function r(e,t,i,a){return n(e)?a[t]:i[t]}var s=(t?t.dayNamesShort:null)||this._defaults.dayNamesShort,o=(t?t.dayNames:null)||this._defaults.dayNames,l=(t?t.monthNamesShort:null)||this._defaults.monthNamesShort,c=(t?t.monthNames:null)||this._defaults.monthNames,d="",u=!1;if(e)for(var p=0;i.length>p;p++)if(u)"'"!=i.charAt(p)||n("'")?d+=i.charAt(p):u=!1;else switch(i.charAt(p)){case"d":d+=a("d",e.getDate(),2);break;case"D":d+=r("D",e.getDay(),s,o);break;case"o":d+=a("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":d+=a("m",e.getMonth()+1,2);break;case"M":d+=r("M",e.getMonth(),l,c);break;case"y":d+=n("y")?e.getFullYear():(e.getYear()%100<10?"0":"")+e.getYear()%100;break;case"@":d+=e.getTime();break;case"!":d+=1e4*e.getTime()+this._ticksTo1970;break;case"'":n("'")?d+="'":u=!0;break;default:d+=i.charAt(p)}return d},_possibleChars:function(i){function e(e){var t=i.length>n+1&&i.charAt(n+1)==e;return t&&n++,t}for(var t="",a=!1,n=0;i.length>n;n++)if(a)"'"!=i.charAt(n)||e("'")?t+=i.charAt(n):a=!1;else switch(i.charAt(n)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":e("'")?t+="'":a=!0;break;default:t+=i.charAt(n)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()!=e.lastVal){var i,a,n=this._get(e,"dateFormat"),r=e.lastVal=e.input?e.input.val():null;i=a=this._getDefaultDate(e);var s=this._getFormatConfig(e);try{i=this.parseDate(n,r,s)||a}catch(e){this.log(e),r=t?"":r}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=r?i.getDate():0,e.currentMonth=r?i.getMonth():0,e.currentYear=r?i.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(o,e,t){var i,a,n=null==e||""===e?t:"string"==typeof e?function(e){try{return $.datepicker.parseDate($.datepicker._get(o,"dateFormat"),e,$.datepicker._getFormatConfig(o))}catch(e){}for(var t=(e.toLowerCase().match(/^c/)?$.datepicker._getDate(o):null)||new Date,i=t.getFullYear(),a=t.getMonth(),n=t.getDate(),r=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,s=r.exec(e);s;){switch(s[2]||"d"){case"d":case"D":n+=parseInt(s[1],10);break;case"w":case"W":n+=7*parseInt(s[1],10);break;case"m":case"M":a+=parseInt(s[1],10),n=Math.min(n,$.datepicker._getDaysInMonth(i,a));break;case"y":case"Y":i+=parseInt(s[1],10),n=Math.min(n,$.datepicker._getDaysInMonth(i,a))}s=r.exec(e)}return new Date(i,a,n)}(e):"number"==typeof e?isNaN(e)?t:(i=e,(a=new Date).setDate(a.getDate()+i),a):new Date(e.getTime());return(n=n&&"Invalid Date"==""+n?t:n)&&(n.setHours(0),n.setMinutes(0),n.setSeconds(0),n.setMilliseconds(0)),this._daylightSavingAdjust(n)},_daylightSavingAdjust:function(e){return e?(e.setHours(12<e.getHours()?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var a=!t,n=e.selectedMonth,r=e.selectedYear,s=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=s.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=s.getMonth(),e.drawYear=e.selectedYear=e.currentYear=s.getFullYear(),n==e.selectedMonth&&r==e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(a?"":this._formatDate(e))},_getDate:function(e){return!e.currentYear||e.input&&""==e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay))},_attachHandlers:function(e){var t=this._get(e,"stepMonths"),i="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,-t,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,+t,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(i)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(i,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var i=this._get(e,"isRTL"),a=this._get(e,"showButtonPanel"),n=this._get(e,"hideIfNoPrevNext"),r=this._get(e,"navigationAsDateFormat"),s=this._getNumberOfMonths(e),o=this._get(e,"showCurrentAtPos"),l=this._get(e,"stepMonths"),c=1!=s[0]||1!=s[1],d=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),u=this._getMinMaxDate(e,"min"),p=this._getMinMaxDate(e,"max"),f=e.drawMonth-o,h=e.drawYear;if(f<0&&(f+=12,h--),p){var m=this._daylightSavingAdjust(new Date(p.getFullYear(),p.getMonth()-s[0]*s[1]+1,p.getDate()));for(m=u&&m<u?u:m;this._daylightSavingAdjust(new Date(h,f,1))>m;)--f<0&&(f=11,h--)}e.drawMonth=f,e.drawYear=h;var v=this._get(e,"prevText");v=r?this.formatDate(v,this._daylightSavingAdjust(new Date(h,f-l,1)),this._getFormatConfig(e)):v;var g=this._canAdjustMonth(e,-1,h,f)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+v+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+v+"</span></a>":n?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+v+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+v+"</span></a>",_=this._get(e,"nextText");_=r?this.formatDate(_,this._daylightSavingAdjust(new Date(h,f+l,1)),this._getFormatConfig(e)):_;var y=this._canAdjustMonth(e,1,h,f)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>":n?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>",b=this._get(e,"currentText"),k=this._get(e,"gotoCurrent")&&e.currentDay?d:t;b=r?this.formatDate(b,k,this._getFormatConfig(e)):b;var w=e.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(e,"closeText")+"</button>",x=a?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(i?w:"")+(this._isInRange(e,k)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+b+"</button>":"")+(i?"":w)+"</div>":"",C=parseInt(this._get(e,"firstDay"),10);C=isNaN(C)?0:C;var S=this._get(e,"showWeek"),T=this._get(e,"dayNames");this._get(e,"dayNamesShort");var j=this._get(e,"dayNamesMin"),D=this._get(e,"monthNames"),E=this._get(e,"monthNamesShort"),M=this._get(e,"beforeShowDay"),A=this._get(e,"showOtherMonths"),I=this._get(e,"selectOtherMonths");this._get(e,"calculateWeek")||this.iso8601Week;for(var P=this._getDefaultDate(e),O="",N=0;s[0]>N;N++){var F="";this.maxRows=4;for(var L=0;s[1]>L;L++){var H=this._daylightSavingAdjust(new Date(h,f,e.selectedDay)),z=" ui-corner-all",R="";if(c){if(R+='<div class="ui-datepicker-group',1<s[1])switch(L){case 0:R+=" ui-datepicker-group-first",z=" ui-corner-"+(i?"right":"left");break;case s[1]-1:R+=" ui-datepicker-group-last",z=" ui-corner-"+(i?"left":"right");break;default:R+=" ui-datepicker-group-middle",z=""}R+='">'}R+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+z+'">'+(/all|left/.test(z)&&0==N?i?y:g:"")+(/all|right/.test(z)&&0==N?i?g:y:"")+this._generateMonthYearHeader(e,f,h,u,p,0<N||0<L,D,E)+'</div><table class="ui-datepicker-calendar"><thead><tr>';for(var B=S?'<th class="ui-datepicker-week-col">'+this._get(e,"weekHeader")+"</th>":"",q=0;q<7;q++){var W=(q+C)%7;B+="<th"+(5<=(q+C+6)%7?' class="ui-datepicker-week-end"':"")+'><span title="'+T[W]+'">'+j[W]+"</span></th>"}R+=B+"</tr></thead><tbody>";var U=this._getDaysInMonth(h,f);h==e.selectedYear&&f==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,U));var Y=(this._getFirstDayOfMonth(h,f)-C+7)%7,X=Math.ceil((Y+U)/7),G=c&&this.maxRows>X?this.maxRows:X;this.maxRows=G;for(var V=this._daylightSavingAdjust(new Date(h,f,1-Y)),K=0;K<G;K++){R+="<tr>";var Q=S?'<td class="ui-datepicker-week-col">'+this._get(e,"calculateWeek")(V)+"</td>":"";for(q=0;q<7;q++){var Z=M?M.apply(e.input?e.input[0]:null,[V]):[!0,""],J=V.getMonth()!=f,ee=J&&!I||!Z[0]||u&&V<u||p&&p<V;Q+='<td class="'+(5<=(q+C+6)%7?" ui-datepicker-week-end":"")+(J?" ui-datepicker-other-month":"")+(V.getTime()==H.getTime()&&f==e.selectedMonth&&e._keyEvent||P.getTime()==V.getTime()&&P.getTime()==H.getTime()?" "+this._dayOverClass:"")+(ee?" "+this._unselectableClass+" ui-state-disabled":"")+(J&&!A?"":" "+Z[1]+(V.getTime()==d.getTime()?" "+this._currentClass:"")+(V.getTime()==t.getTime()?" ui-datepicker-today":""))+'"'+(J&&!A||!Z[2]?"":' title="'+Z[2]+'"')+(ee?"":' data-handler="selectDay" data-event="click" data-month="'+V.getMonth()+'" data-year="'+V.getFullYear()+'"')+">"+(J&&!A?"&#xa0;":ee?'<span class="ui-state-default">'+V.getDate()+"</span>":'<a class="ui-state-default'+(V.getTime()==t.getTime()?" ui-state-highlight":"")+(V.getTime()==d.getTime()?" ui-state-active":"")+(J?" ui-priority-secondary":"")+'" href="#">'+V.getDate()+"</a>")+"</td>",V.setDate(V.getDate()+1),V=this._daylightSavingAdjust(V)}R+=Q+"</tr>"}11<++f&&(f=0,h++),F+=R+="</tbody></table>"+(c?"</div>"+(0<s[0]&&L==s[1]-1?'<div class="ui-datepicker-row-break"></div>':""):"")}O+=F}return O+=x+($.ui.ie6&&!e.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),e._keyEvent=!1,O},_generateMonthYearHeader:function(e,t,i,a,n,r,s,o){var l=this._get(e,"changeMonth"),c=this._get(e,"changeYear"),d=this._get(e,"showMonthAfterYear"),u='<div class="ui-datepicker-title">',p="";if(r||!l)p+='<span class="ui-datepicker-month">'+s[t]+"</span>";else{var f=a&&a.getFullYear()==i,h=n&&n.getFullYear()==i;p+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var m=0;m<12;m++)(!f||m>=a.getMonth())&&(!h||n.getMonth()>=m)&&(p+='<option value="'+m+'"'+(m==t?' selected="selected"':"")+">"+o[m]+"</option>");p+="</select>"}if(d||(u+=p+(!r&&l&&c?"":"&#xa0;")),!e.yearshtml)if(e.yearshtml="",r||!c)u+='<span class="ui-datepicker-year">'+i+"</span>";else{function v(e){var t=e.match(/c[+-].*/)?i+parseInt(e.substring(1),10):e.match(/[+-].*/)?_+parseInt(e,10):parseInt(e,10);return isNaN(t)?_:t}var g=this._get(e,"yearRange").split(":"),_=(new Date).getFullYear(),y=v(g[0]),b=Math.max(y,v(g[1]||""));for(y=a?Math.max(y,a.getFullYear()):y,b=n?Math.min(b,n.getFullYear()):b,e.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';y<=b;y++)e.yearshtml+='<option value="'+y+'"'+(y==i?' selected="selected"':"")+">"+y+"</option>";e.yearshtml+="</select>",u+=e.yearshtml,e.yearshtml=null}return u+=this._get(e,"yearSuffix"),d&&(u+=(!r&&l&&c?"":"&#xa0;")+p),u+"</div>"},_adjustInstDate:function(e,t,i){var a=e.drawYear+("Y"==i?t:0),n=e.drawMonth+("M"==i?t:0),r=Math.min(e.selectedDay,this._getDaysInMonth(a,n))+("D"==i?t:0),s=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(a,n,r)));e.selectedDay=s.getDate(),e.drawMonth=e.selectedMonth=s.getMonth(),e.drawYear=e.selectedYear=s.getFullYear(),"M"!=i&&"Y"!=i||this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,"min"),a=this._getMinMaxDate(e,"max"),n=i&&t<i?i:t;return a&&a<n?a:n},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return null==t?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,a){var n=this._getNumberOfMonths(e),r=this._daylightSavingAdjust(new Date(i,a+(t<0?t:n[0]*n[1]),1));return t<0&&r.setDate(this._getDaysInMonth(r.getFullYear(),r.getMonth())),this._isInRange(e,r)},_isInRange:function(e,t){var i=this._getMinMaxDate(e,"min"),a=this._getMinMaxDate(e,"max");return(!i||t.getTime()>=i.getTime())&&(!a||t.getTime()<=a.getTime())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return{shortYearCutoff:t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,i,a){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var n=t?"object"==typeof t?t:this._daylightSavingAdjust(new Date(a,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),n,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return"string"==typeof e&&("isDisabled"==e||"getDate"==e||"widget"==e)||"option"==e&&2==arguments.length&&"string"==typeof arguments[1]?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){"string"==typeof e?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)})},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.9.2",window["DP_jQuery_"+dpuuid]=$}(jQuery),function(S){S.fn.circliful=function(x,e){var C=S.extend({fgcolor:"#556b2f",bgcolor:"#eee",fill:!1,width:15,dimension:200,fontsize:15,percent:50,animationstep:1,iconsize:"20px",iconcolor:"#999",border:"default",complete:null},x);return this.each(function(){var a,i,e=["fgcolor","bgcolor","fill","width","dimension","fontsize","animationstep","endPercent","icon","iconcolor","iconsize","border"],n={},r="",s=0,o=S(this),l=!1;if(o.addClass("circliful"),i=o,S.each(e,function(e,t){null!=i.data(t)?n[t]=i.data(t):n[t]=S(C).attr(t),"fill"==t&&null!=i.data("fill")&&(l=!0)}),null!=o.data("text")&&(a=o.data("text"),null!=o.data("icon")&&(r=S("<i></i>").addClass("fa "+S(this).data("icon")).css({color:n.iconcolor,"font-size":n.iconsize})),null!=o.data("type")&&"half"==(b=S(this).data("type"))?k(o,"circle-text-half",n.dimension/1.45):k(o,"circle-text",n.dimension)),null!=S(this).data("total")&&null!=S(this).data("part")){var t=S(this).data("total")/100;percent=(S(this).data("part")/t/100).toFixed(3),s=(S(this).data("part")/t).toFixed(3)}else null!=S(this).data("percent")?(percent=S(this).data("percent")/100,s=S(this).data("percent")):percent=C.percent/100;null!=S(this).data("info")&&(S(this).data("info"),null!=S(this).data("type")?(b=S(this).data("type"),w(o,"half"==b?.9:1.25)):w(o,1.25)),S(this).width(n.dimension+"px");var c=S("<canvas></canvas>").attr({width:n.dimension,height:n.dimension}).appendTo(S(this)).get(0),d=c.getContext("2d"),u=c.width/2,p=c.height/2,f=(n.percent,Math.PI,c.width/2.5),h=2.3*Math.PI,m=0,v=0===n.animationstep?s:0,g=Math.max(n.animationstep,0),_=2*Math.PI,y=Math.PI/2,b="",$=!0;function k(e,t,i){S("<span></span>").appendTo(e).addClass(t).text(a).prepend(r).css({"line-height":i+"px","font-size":n.fontsize+"px"})}function w(e,t){S("<span></span>").appendTo(e).addClass("circle-info-half").css("line-height",n.dimension*t+"px")}null!=S(this).data("type")&&"half"==(b=S(this).data("type"))&&(h=2*Math.PI,m=3.13,_=+Math.PI,y=Math.PI/.996),function e(t){d.clearRect(0,0,c.width,c.height),d.beginPath(),d.arc(u,p,f,m,h,!1),d.lineWidth=n.width+1,d.strokeStyle=n.bgcolor,d.stroke(),l&&(d.fillStyle=n.fill,d.fill()),d.beginPath(),d.arc(u,p,f,-y,_*t-y,!1),"outline"==n.border?d.lineWidth=n.width+13:"inline"==n.border&&(d.lineWidth=n.width-13),d.strokeStyle=n.fgcolor,d.stroke(),v<s&&(v+=g,requestAnimationFrame(function(){e(Math.min(v,s)/100)},o)),v==s&&$&&void 0!==x&&S.isFunction(x.complete)&&(x.complete(),$=!1)}(v/100)})}}(jQuery),$.datepicker._get_original=$.datepicker._get,$.datepicker._get=function(e,t){var i=$.datepicker._get_original(e,t),a=e.settings.range;if(!a)return i;var n=this;switch(a){case"period":case"multiple":var r=$(this.dpDiv).data("datepickerExtensionRange");switch(r||(r=new _datepickerExtension,$(this.dpDiv).data("datepickerExtensionRange",r)),r.range=a,r.range_multiple_max=e.settings.range_multiple_max||0,t){case"onSelect":s=(s=i)||function(){},i=function(e,t){r.onSelect(e,t),s(e,t,r),n._datepickerShowing=!1,setTimeout(function(){n._updateDatepicker(t),n._datepickerShowing=!0}),r.setClassActive(t)};break;case"beforeShowDay":s=(s=i)||function(){return[!0,""]},i=function(e){var t=s(e);return r.fillDay(e,t)};break;case"beforeShow":s=(s=i)||function(){},i=function(e,t){s(e,t),r.setClassActive(t)};break;case"onChangeMonthYear":var s;s=(s=i)||function(){},i=function(e,t,i){s(e,t,i),r.setClassActive(i)}}}return i},$.datepicker._setDate_original=$.datepicker._setDate,$.datepicker._setDate=function(t,e,i){var a=t.settings.range;if(!a)return $.datepicker._setDate_original(t,e,i);var n=this.dpDiv.data("datepickerExtensionRange");if(!n)return $.datepicker._setDate_original(t,e,i);switch(a){case"period":"object"==typeof e&&null!=e.length||(e=[e,e]),n.step=0,$.datepicker._setDate_original(t,e[0],i),n.startDate=this._getDate(t),n.startDateText=this._formatDate(t),$.datepicker._setDate_original(t,e[1],i),n.endDate=this._getDate(t),n.endDateText=this._formatDate(t),n.setClassActive(t);break;case"multiple":"object"==typeof e&&null!=e.length||(e=[e]),n.dates=[],n.datesText=[];var r=this;$.map(e,function(e){$.datepicker._setDate_original(t,e,i),n.dates.push(r._getDate(t)),n.datesText.push(r._formatDate(t))}),n.setClassActive(t)}};var _datepickerExtension=function(){this.range=!1,this.range_multiple_max=0,this.step=0,this.dates=[],this.datesText=[],this.startDate=null,this.endDate=null,this.startDateText="",this.endDateText="",this.onSelect=function(e,t){switch(this.range){case"period":return this.onSelectPeriod(e,t);case"multiple":return this.onSelectMultiple(e,t)}},this.onSelectPeriod=function(e,t){this.step++,this.step%=2,this.step?(this.startDate=this.getSelectedDate(t),this.endDate=this.startDate,this.startDateText=e,this.endDateText=this.startDateText):(this.endDate=this.getSelectedDate(t),this.endDateText=e,this.startDate.getTime()>this.endDate.getTime()&&(this.endDate=this.startDate,this.startDate=this.getSelectedDate(t),this.endDateText=this.startDateText,this.startDateText=e))},this.onSelectMultiple=function(e,t){var i=this.getSelectedDate(t),a=-1;$.map(this.dates,function(e,t){e.getTime()==i.getTime()&&(a=t)});var n=$.inArray(e,this.datesText);-1!=a?this.dates.splice(a,1):this.dates.push(i),-1!=n?this.datesText.splice(n,1):this.datesText.push(e),this.range_multiple_max&&this.dates.length>this.range_multiple_max&&(this.dates.splice(0,1),this.datesText.splice(0,1))},this.fillDay=function(e,t){var i=t[1];switch(1==e.getDate()&&(i+=" first-of-month"),e.getDate()==new Date(e.getFullYear(),e.getMonth()+1,0).getDate()&&(i+=" last-of-month"),t[1]=i.trim(),this.range){case"period":return this.fillDayPeriod(e,t);case"multiple":return this.fillDayMultiple(e,t)}},this.fillDayPeriod=function(e,t){if(!this.startDate||!this.endDate)return t;var i=t[1];return e>=this.startDate&&e<=this.endDate&&(i+=" selected"),e.getTime()==this.startDate.getTime()&&(i+=" selected-start"),e.getTime()==this.endDate.getTime()&&(i+=" selected-end"),t[1]=i.trim(),t},this.fillDayMultiple=function(t,e){var i=e[1],a=!1;return $.map(this.dates,function(e){e.getTime()==t.getTime()&&(a=!0)}),a&&(i+=" selected selected-start selected-end"),e[1]=i.trim(),e},this.getSelectedDate=function(e){return new Date(e.selectedYear,e.selectedMonth,e.selectedDay)},this.setClassActive=function(e){var t=this;setTimeout(function(){$("td.selected > *",e.dpDiv).addClass("ui-state-active"),"multiple"==t.range&&$("td:not(.selected)",e.dpDiv).removeClass("ui-datepicker-current-day").children().removeClass("ui-state-active")})}};jQuery.effects||function(o){var i,s,l,d,u,c,e,p,t,f,h,m,v,a,g,n=!1!==o.uiBackCompat,r="ui-effects-";function _(e,t,i,a){return o.isPlainObject(e)&&(e=(t=e).effect),e={effect:e},null==t&&(t={}),o.isFunction(t)&&(a=t,i=null,t={}),"number"!=typeof t&&!o.fx.speeds[t]||(a=i,i=t,t={}),o.isFunction(i)&&(a=i,i=null),t&&o.extend(e,t),i=i||t.duration,e.duration=o.fx.off?0:"number"==typeof i?i:i in o.fx.speeds?o.fx.speeds[i]:o.fx.speeds._default,e.complete=a||t.complete,e}function y(e){return!e||"number"==typeof e||o.fx.speeds[e]||"string"==typeof e&&!o.effects.effect[e]&&(!n||!o.effects[e])}function b(){var e,t,i=this.ownerDocument.defaultView?this.ownerDocument.defaultView.getComputedStyle(this,null):this.currentStyle,a={};if(i&&i.length&&i[0]&&i[i[0]])for(t=i.length;t--;)"string"==typeof i[e=i[t]]&&(a[o.camelCase(e)]=i[e]);else for(e in i)"string"==typeof i[e]&&(a[e]=i[e]);return a}function $(e,t,i){var a=m[t.type]||{};return null==e?i||!t.def?null:t.def:(e=a.floor?~~e:parseFloat(e),isNaN(e)?t.def:a.mod?(e+a.mod)%a.mod:e<0?0:a.max<e?a.max:e)}function k(s){var o=f(),l=o._rgba=[];return s=s.toLowerCase(),g(t,function(e,t){var i,a=t.re.exec(s),n=a&&t.parse(a),r=t.space||"rgba";return n?(i=o[r](n),o[h[r].cache]=i[h[r].cache],l=o._rgba=i._rgba,!1):u}),l.length?("0,0,0,0"===l.join()&&d.extend(l,c.transparent),o):c[s]}function w(e,t,i){return 6*(i=(i+1)%1)<1?e+6*(t-e)*i:2*i<1?t:3*i<2?e+6*(t-e)*(2/3-i):e}o.effects={effect:{}},d=jQuery,e="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),p=/^([\-+])=\s*(\d+\.?\d*)/,t=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[2.55*e[1],2.55*e[2],2.55*e[3],e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],f=d.Color=function(e,t,i,a){return new d.Color.fn.parse(e,t,i,a)},h={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},m={byte:{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},v=f.support={},a=d("<p>")[0],g=d.each,a.style.cssText="background-color:rgba(1,1,1,.5)",v.rgba=-1<a.style.backgroundColor.indexOf("rgba"),g(h,function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}}),f.fn=d.extend(f.prototype,{parse:function(n,e,t,i){if(n===u)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=d(n).css(e),e=u);var r=this,a=d.type(n),s=this._rgba=[];return e!==u&&(n=[n,e,t,i],a="array"),"string"===a?this.parse(k(n)||c._default):"array"===a?(g(h.rgba.props,function(e,t){s[t.idx]=$(n[t.idx],t)}),this):"object"===a?(g(h,n instanceof f?function(e,t){n[t.cache]&&(r[t.cache]=n[t.cache].slice())}:function(e,i){var a=i.cache;g(i.props,function(e,t){if(!r[a]&&i.to){if("alpha"===e||null==n[e])return;r[a]=i.to(r._rgba)}r[a][t.idx]=$(n[e],t,!0)}),r[a]&&o.inArray(null,r[a].slice(0,3))<0&&(r[a][3]=1,i.from&&(r._rgba=i.from(r[a])))}),this):u},is:function(e){var n=f(e),r=!0,s=this;return g(h,function(e,t){var i,a=n[t.cache];return a&&(i=s[t.cache]||t.to&&t.to(s._rgba)||[],g(t.props,function(e,t){return null!=a[t.idx]?r=a[t.idx]===i[t.idx]:u})),r}),r},_space:function(){var i=[],a=this;return g(h,function(e,t){a[t.cache]&&i.push(e)}),i.pop()},transition:function(e,s){var o=f(e),t=o._space(),i=h[t],a=0===this.alpha()?f("transparent"):this,l=a[i.cache]||i.to(a._rgba),c=l.slice();return o=o[i.cache],g(i.props,function(e,t){var i=t.idx,a=l[i],n=o[i],r=m[t.type]||{};null!==n&&(null===a?c[i]=n:(r.mod&&(r.mod/2<n-a?a+=r.mod:r.mod/2<a-n&&(a-=r.mod)),c[i]=$((n-a)*s+a,t)))}),this[t](c)},blend:function(e){if(1===this._rgba[3])return this;var t=this._rgba.slice(),i=t.pop(),a=f(e)._rgba;return f(d.map(t,function(e,t){return(1-i)*a[t]+i*e}))},toRgbaString:function(){var e="rgba(",t=d.map(this._rgba,function(e,t){return null==e?2<t?1:0:e});return 1===t[3]&&(t.pop(),e="rgb("),e+t.join()+")"},toHslaString:function(){var e="hsla(",t=d.map(this.hsla(),function(e,t){return null==e&&(e=2<t?1:0),t&&t<3&&(e=Math.round(100*e)+"%"),e});return 1===t[3]&&(t.pop(),e="hsl("),e+t.join()+")"},toHexString:function(e){var t=this._rgba.slice(),i=t.pop();return e&&t.push(~~(255*i)),"#"+d.map(t,function(e){return 1===(e=(e||0).toString(16)).length?"0"+e:e}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),f.fn.parse.prototype=f.fn,h.hsla.to=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t,i,a=e[0]/255,n=e[1]/255,r=e[2]/255,s=e[3],o=Math.max(a,n,r),l=Math.min(a,n,r),c=o-l,d=o+l,u=.5*d;return t=l===o?0:a===o?60*(n-r)/c+360:n===o?60*(r-a)/c+120:60*(a-n)/c+240,i=0==u||1==u?u:u<=.5?c/d:c/(2-d),[Math.round(t)%360,i,u,null==s?1:s]},h.hsla.from=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t=e[0]/360,i=e[1],a=e[2],n=e[3],r=a<=.5?a*(1+i):a+i-a*i,s=2*a-r;return[Math.round(255*w(s,r,t+1/3)),Math.round(255*w(s,r,t)),Math.round(255*w(s,r,t-1/3)),n]},g(h,function(l,e){var i=e.props,s=e.cache,o=e.to,c=e.from;f.fn[l]=function(e){if(o&&!this[s]&&(this[s]=o(this._rgba)),e===u)return this[s].slice();var t,a=d.type(e),n="array"===a||"object"===a?e:arguments,r=this[s].slice();return g(i,function(e,t){var i=n["object"===a?e:t.idx];null==i&&(i=r[t.idx]),r[t.idx]=$(i,t)}),c?((t=f(c(r)))[s]=r,t):f(r)},g(i,function(s,o){f.fn[s]||(f.fn[s]=function(e){var t,i=d.type(e),a="alpha"===s?this._hsla?"hsla":"rgba":l,n=this[a](),r=n[o.idx];return"undefined"===i?r:("function"===i&&(e=e.call(this,r),i=d.type(e)),null==e&&o.empty?this:("string"===i&&((t=p.exec(e))&&(e=r+parseFloat(t[2])*("+"===t[1]?1:-1))),n[o.idx]=e,this[a](n)))})})}),g(e,function(e,r){d.cssHooks[r]={set:function(e,t){var i,a,n="";if("string"!==d.type(t)||(i=k(t))){if(t=f(i||t),!v.rgba&&1!==t._rgba[3]){for(a="backgroundColor"===r?e.parentNode:e;(""===n||"transparent"===n)&&a&&a.style;)try{n=d.css(a,"backgroundColor"),a=a.parentNode}catch(e){}t=t.blend(n&&"transparent"!==n?n:"_default")}t=t.toRgbaString()}try{e.style[r]=t}catch(e){}}},d.fx.step[r]=function(e){e.colorInit||(e.start=f(e.elem,r),e.end=f(e.end),e.colorInit=!0),d.cssHooks[r].set(e.elem,e.start.transition(e.end,e.pos))}}),d.cssHooks.borderColor={expand:function(i){var a={};return g(["Top","Right","Bottom","Left"],function(e,t){a["border"+t+"Color"]=i}),a}},c=d.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"},s=["add","remove","toggle"],l={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1},o.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,t){o.fx.step[t]=function(e){("none"!==e.end&&!e.setAttr||1===e.pos&&!e.setAttr)&&(jQuery.style(e.elem,t,e.end),e.setAttr=!0)}}),o.effects.animateClass=function(n,e,t,i){var r=o.speed(e,t,i);return this.queue(function(){var e,i=o(this),t=i.attr("class")||"",a=r.children?i.find("*").andSelf():i;a=a.map(function(){return{el:o(this),start:b.call(this)}}),(e=function(){o.each(s,function(e,t){n[t]&&i[t+"Class"](n[t])})})(),a=a.map(function(){return this.end=b.call(this.el[0]),this.diff=function(e,t){var i,a,n={};for(i in t)a=t[i],e[i]!==a&&(l[i]||!o.fx.step[i]&&isNaN(parseFloat(a))||(n[i]=a));return n}(this.start,this.end),this}),i.attr("class",t),a=a.map(function(){var e=this,t=o.Deferred(),i=jQuery.extend({},r,{queue:!1,complete:function(){t.resolve(e)}});return this.el.animate(this.diff,i),t.promise()}),o.when.apply(o,a.get()).done(function(){e(),o.each(arguments,function(){var t=this.el;o.each(this.diff,function(e){t.css(e,"")})}),r.complete.call(i[0])})})},o.fn.extend({_addClass:o.fn.addClass,addClass:function(e,t,i,a){return t?o.effects.animateClass.call(this,{add:e},t,i,a):this._addClass(e)},_removeClass:o.fn.removeClass,removeClass:function(e,t,i,a){return t?o.effects.animateClass.call(this,{remove:e},t,i,a):this._removeClass(e)},_toggleClass:o.fn.toggleClass,toggleClass:function(e,t,i,a,n){return"boolean"==typeof t||void 0===t?i?o.effects.animateClass.call(this,t?{add:e}:{remove:e},i,a,n):this._toggleClass(e,t):o.effects.animateClass.call(this,{toggle:e},t,i,a)},switchClass:function(e,t,i,a,n){return o.effects.animateClass.call(this,{add:t,remove:e},i,a,n)}}),o.extend(o.effects,{version:"1.9.2",save:function(e,t){for(var i=0;t.length>i;i++)null!==t[i]&&e.data(r+t[i],e[0].style[t[i]])},restore:function(e,t){var i,a;for(a=0;t.length>a;a++)null!==t[a]&&(void 0===(i=e.data(r+t[a]))&&(i=""),e.css(t[a],i))},setMode:function(e,t){return"toggle"===t&&(t=e.is(":hidden")?"show":"hide"),t},getBaseline:function(e,t){var i,a;switch(e[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=e[0]/t.height}switch(e[1]){case"left":a=0;break;case"center":a=.5;break;case"right":a=1;break;default:a=e[1]/t.width}return{x:a,y:i}},createWrapper:function(i){if(i.parent().is(".ui-effects-wrapper"))return i.parent();var a={width:i.outerWidth(!0),height:i.outerHeight(!0),float:i.css("float")},e=o("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),t={width:i.width(),height:i.height()},n=document.activeElement;try{n.id}catch(e){n=document.body}return i.wrap(e),i[0]!==n&&!o.contains(i[0],n)||o(n).focus(),e=i.parent(),"static"===i.css("position")?(e.css({position:"relative"}),i.css({position:"relative"})):(o.extend(a,{position:i.css("position"),zIndex:i.css("z-index")}),o.each(["top","left","bottom","right"],function(e,t){a[t]=i.css(t),isNaN(parseInt(a[t],10))&&(a[t]="auto")}),i.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),i.css(t),e.css(a).show()},removeWrapper:function(e){var t=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),e[0]!==t&&!o.contains(e[0],t)||o(t).focus()),e},setTransition:function(a,e,n,r){return r=r||{},o.each(e,function(e,t){var i=a.cssUnit(t);0<i[0]&&(r[t]=i[0]*n+i[1])}),r}}),o.fn.extend({effect:function(){function e(e){function t(){o.isFunction(a)&&a.call(i[0]),o.isFunction(e)&&e()}var i=o(this),a=r.complete,n=r.mode;(i.is(":hidden")?"hide"===n:"show"===n)?t():s.call(i[0],r,t)}var r=_.apply(this,arguments),t=r.mode,i=r.queue,s=o.effects.effect[r.effect],a=!s&&n&&o.effects[r.effect];return o.fx.off||!s&&!a?t?this[t](r.duration,r.complete):this.each(function(){r.complete&&r.complete.call(this)}):s?!1===i?this.each(e):this.queue(i||"fx",e):a.call(this,{options:r,duration:r.duration,callback:r.complete,mode:r.mode})},_show:o.fn.show,show:function(e){if(y(e))return this._show.apply(this,arguments);var t=_.apply(this,arguments);return t.mode="show",this.effect.call(this,t)},_hide:o.fn.hide,hide:function(e){if(y(e))return this._hide.apply(this,arguments);var t=_.apply(this,arguments);return t.mode="hide",this.effect.call(this,t)},__toggle:o.fn.toggle,toggle:function(e){if(y(e)||"boolean"==typeof e||o.isFunction(e))return this.__toggle.apply(this,arguments);var t=_.apply(this,arguments);return t.mode="toggle",this.effect.call(this,t)},cssUnit:function(e){var i=this.css(e),a=[];return o.each(["em","px","%","pt"],function(e,t){0<i.indexOf(t)&&(a=[parseFloat(i),t])}),a}}),i={},o.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,e){i[e]=function(e){return Math.pow(e,t+2)}}),o.extend(i,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return 0===e||1===e?e:-Math.pow(2,8*(e-1))*Math.sin((80*(e-1)-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){for(var t,i=4;((t=Math.pow(2,--i))-1)/11>e;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*t-2)/22-e,2)}}),o.each(i,function(e,t){o.easing["easeIn"+e]=t,o.easing["easeOut"+e]=function(e){return 1-t(1-e)},o.easing["easeInOut"+e]=function(e){return e<.5?t(2*e)/2:1-t(-2*e+2)/2}})}(jQuery),function(r){var s=0;r.fn.freezeHeader=function(a){var n=!1;function i(e){var t=e.attr("id")||"tbl-"+ ++s;if(0<e.length&&"table"==e[0].tagName.toLowerCase()){var i={id:t,grid:e,container:null,header:null,divScroll:null,openDivScroll:null,closeDivScroll:null,scroller:null};a&&void 0!==a.height&&(i.divScroll='<div id="hdScroll'+i.id+'" style="height: '+a.height+'; overflow-y: scroll">',i.closeDivScroll="</div>"),i.header=i.grid.find("thead"),a&&void 0!==a.height&&0==r("#hdScroll"+i.id).length&&i.grid.wrapAll(i.divScroll),i.scroller=a&&void 0!==a.height?r("#hdScroll"+i.id):r(window),a&&void 0!==a.scrollListenerEl&&(i.scroller=a.scrollListenerEl),i.scroller.on("scroll",function(){0==r("#hd"+i.id).length&&i.grid.before('<div class="freeez" id="hd'+i.id+'"></div>'),i.container=r("#hd"+i.id),null!=i.header.offset()&&(function(e,t){{if(!t||void 0===t.height&&void 0===t.scrollListenerEl){var i=e.header.offset().top;t&&void 0!==t.offset&&(i-=parseInt(t.offset.replace("px",""),10));var a=e.grid.height()-e.header.height()-e.grid.find("tr:last").height()+e.header.offset().top;return r(document).scrollTop()>i&&r(document).scrollTop()<a}return e.header.offset().top<=e.scroller.offset().top}}(i,a)?(e.trigger("freeze:on"),n||(function(i){i.container.html(""),i.container.val("");var e=r('<table style="margin: 0 0;"></table>'),t=i.grid.prop("attributes");r.each(t,function(){"id"!=this.name&&e.attr(this.name,this.value)}),i.header.clone(!0).appendTo(e),i.container.append(e),i.container.width(i.header.width()),i.container.height(i.header.height),i.container.find("th").each(function(e){var t=i.grid.find("th").eq(e).outerWidth();r(this).css("width",t)}),i.container.css("visibility","visible"),a&&void 0!==a.height?(void 0!==a.offset?i.container.css("top",i.scroller.offset().top+ +a.offset.replace("px","")+"px"):i.container.css("top",i.scroller.offset().top+"px"),i.container.css("position","absolute")):a&&void 0!==a.scrollListenerEl?(i.container.css("top",i.scroller.find("thead > tr").innerHeight()+"px"),i.container.css("position","absolute"),i.container.css("z-index","2")):(a&&void 0!==a.offset?i.container.css("top",a.offset):i.container.css("top","0px"),i.container.css("position","fixed"))}(i),n=!0)):(r(document).scrollTop()>i.header.offset().top?(i.container.css("position","absolute"),i.container.css("top",i.grid.find("tr:last").offset().top-i.header.height()+"px")):(e.trigger("freeze:off"),i.container.css("visibility","hidden"),i.container.css("top","0px"),i.container.width(0)),n=!1))})}}return this.each(function(e,t){i(r(t))})}}(OLD),function(se){se.fn.fullpage=function(v){v=se.extend({menu:!1,anchors:[],navigation:!1,navigationPosition:"right",navigationColor:"#000",navigationTooltips:[],slidesNavigation:!1,slidesNavPosition:"bottom",scrollBar:!1,css3:!0,scrollingSpeed:700,autoScrolling:!0,easing:"easeInQuart",easingcss3:"ease",loopBottom:!1,loopTop:!1,loopHorizontal:!0,continuousVertical:!1,normalScrollElements:null,scrollOverflow:!1,touchSensitivity:5,normalScrollElementTouchThreshold:5,keyboardScrolling:!0,animateAnchor:!0,recordHistory:!0,controlArrows:!0,controlArrowColor:"#fff",verticalCentered:!0,resize:!0,sectionsColor:[],paddingTop:0,paddingBottom:0,fixedElements:null,responsive:0,sectionSelector:".section",slideSelector:".slide",afterLoad:null,onLeave:null,afterRender:null,afterResize:null,afterReBuild:null,afterSlideLoad:null,onSlideLeave:null},v),function(){v.continuousVertical&&(v.loopTop||v.loopBottom)&&(v.continuousVertical=!1,re("warn","Option `loopTop/loopBottom` is mutually exclusive with `continuousVertical`; `continuousVertical` disabled"));v.continuousVertical&&v.scrollBar&&(v.continuousVertical=!1,re("warn","Option `scrollBar` is mutually exclusive with `continuousVertical`; `continuousVertical` disabled"));se.each(v.anchors,function(e,t){(se("#"+t).length||se('[name="'+t+'"]').length)&&re("error","data-anchor tags can not have the same value as any `id` element on the site (or `name` element for IE).")})}(),se.extend(se.easing,{easeInQuart:function(e,t,i,a,n){return a*(t/=n)*t*t*t+i}});var i=600;se.fn.fullpage.setAutoScrolling=function(e,t){ne("autoScrolling",e,t);var i=se(".fp-section.active");v.autoScrolling&&!v.scrollBar?(se("html, body").css({overflow:"hidden",height:"100%"}),se.fn.fullpage.setRecordHistory(v.recordHistory,"internal"),o.css({"-ms-touch-action":"none","touch-action":"none"}),i.length&&ie(i.position().top)):(se("html, body").css({overflow:"visible",height:"initial"}),se.fn.fullpage.setRecordHistory(!1,"internal"),o.css({"-ms-touch-action":"","touch-action":""}),ie(0),se("html, body").scrollTop(i.position().top))},se.fn.fullpage.setRecordHistory=function(e,t){ne("recordHistory",e,t)},se.fn.fullpage.setScrollingSpeed=function(e,t){ne("scrollingSpeed",e,t)},se.fn.fullpage.setMouseWheelScrolling=function(e){e?document.addEventListener?(document.addEventListener("mousewheel",D,!1),document.addEventListener("wheel",D,!1)):document.attachEvent("onmousewheel",D):document.addEventListener?(document.removeEventListener("mousewheel",D,!1),document.removeEventListener("wheel",D,!1)):document.detachEvent("onmousewheel",D)},se.fn.fullpage.setAllowScrolling=function(i,e){void 0!==e?(e=e.replace(" ","").split(","),se.each(e,function(e,t){!function(e,t){switch(t){case"up":d.up=e;break;case"down":d.down=e;break;case"left":d.left=e;break;case"right":d.right=e;break;case"all":se.fn.fullpage.setAllowScrolling(e)}}(i,t)})):i?(se.fn.fullpage.setMouseWheelScrolling(!0),function(){if(a||s){var e=J();se(document).off("touchstart "+e.down).on("touchstart "+e.down,j),se(document).off("touchmove "+e.move).on("touchmove "+e.move,T)}}()):(se.fn.fullpage.setMouseWheelScrolling(!1),function(){if(a||s){var e=J();se(document).off("touchstart "+e.down),se(document).off("touchmove "+e.move)}}())},se.fn.fullpage.setKeyboardScrolling=function(e){v.keyboardScrolling=e},se.fn.fullpage.moveSectionUp=function(){var e=se(".fp-section.active").prev(".fp-section");e.length||!v.loopTop&&!v.continuousVertical||(e=se(".fp-section").last()),e.length&&M(e,null,!0)},se.fn.fullpage.moveSectionDown=function(){var e=se(".fp-section.active").next(".fp-section");e.length||!v.loopBottom&&!v.continuousVertical||(e=se(".fp-section").first()),e.length&&M(e,null,!1)},se.fn.fullpage.moveTo=function(e,t){var i="";i=isNaN(e)?se('[data-anchor="'+e+'"]'):se(".fp-section").eq(e-1),void 0!==t?G(e,t):0<i.length&&M(i)},se.fn.fullpage.moveSlideRight=function(){e("next")},se.fn.fullpage.moveSlideLeft=function(){e("prev")};var p,r,n,f,h,g=!(se.fn.fullpage.reBuild=function(e){_=!0;var t=se(window).width();l=se(window).height(),v.resize&&function(e,t){if(e<825||t<900){var i=100*e/825,a=100*t/900,n=Math.min(i,a).toFixed(2);se("body").css("font-size",n+"%")}else se("body").css("font-size","100%")}(l,t),se(".fp-section").each(function(){var e=se(this).find(".fp-slides"),t=se(this).find(".fp-slide");v.verticalCentered&&se(this).find(".fp-tableCell").css("height",Y(se(this))+"px"),se(this).css("height",l+"px"),v.scrollOverflow&&(t.length?t.each(function(){q(se(this))}):q(se(this))),t.length&&P(e,e.find(".fp-slide.active"))});var i=se(".fp-section.active");i.index(".fp-section")&&M(i),_=!1,se.isFunction(v.afterResize)&&e&&v.afterResize.call(o),se.isFunction(v.afterReBuild)&&!e&&v.afterReBuild.call(o)}),a=navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|BB10|Windows Phone|Tizen|Bada)/),s="ontouchstart"in window||0<navigator.msMaxTouchPoints||navigator.maxTouchPoints,o=se(this),l=se(window).height(),m=!1,_=!1,c="fullpage-wrapper",d={up:!0,down:!0,left:!0,right:!0},u=se.extend(!0,{},v);function y(){se(".fp-section").each(function(){var e=se(this).find(".fp-slide");e.length?e.each(function(){q(se(this))}):q(se(this))}),se.isFunction(v.afterRender)&&v.afterRender.call(this)}se.fn.fullpage.setAllowScrolling(!0),v.css3&&(v.css3=function(){var e,t=document.createElement("p"),i={webkitTransform:"-webkit-transform",OTransform:"-o-transform",msTransform:"-ms-transform",MozTransform:"-moz-transform",transform:"transform"};for(var a in document.body.insertBefore(t,null),i)void 0!==t.style[a]&&(t.style[a]="translate3d(1px,1px,1px)",e=window.getComputedStyle(t).getPropertyValue(i[a]));return document.body.removeChild(t),void 0!==e&&0<e.length&&"none"!==e}()),se(this).length?(o.css({height:"100%",position:"relative"}),o.addClass(c)):re("error","Error! Fullpage.js needs to be initialized with a selector. For example: $('#myContainer').fullpage();"),se(v.sectionSelector).each(function(){se(this).addClass("fp-section")}),se(v.slideSelector).each(function(){se(this).addClass("fp-slide")}),v.navigation&&function(){se("body").append('<div id="fp-nav"><ul></ul></div>'),(n=se("#fp-nav")).css("color",v.navigationColor),n.addClass(v.navigationPosition);for(var e=0;e<se(".fp-section").length;e++){var t="";v.anchors.length&&(t=v.anchors[e]);var i='<li><a href="#'+t+'"><span></span></a>',a=v.navigationTooltips[e];void 0!==a&&""!=a&&(i+='<div class="fp-tooltip '+v.navigationPosition+'">'+a+"</div>"),i+="</li>",n.find("ul").append(i)}}(),se(".fp-section").each(function(e){var t=se(this),i=se(this).find(".fp-slide"),a=i.length;if(e||0!==se(".fp-section.active").length||se(this).addClass("active"),se(this).css("height",l+"px"),(v.paddingTop||v.paddingBottom)&&se(this).css("padding",v.paddingTop+" 0 "+v.paddingBottom+" 0"),void 0!==v.sectionsColor[e]&&se(this).css("background-color",v.sectionsColor[e]),void 0!==v.anchors[e]&&se(this).attr("data-anchor",v.anchors[e]),1<a){var n=100*a,r=100/a;i.wrapAll('<div class="fp-slidesContainer" />'),i.parent().wrap('<div class="fp-slides" />'),se(this).find(".fp-slidesContainer").css("width",n+"%"),v.controlArrows&&function(e){e.find(".fp-slides").after('<div class="fp-controlArrow fp-prev"></div><div class="fp-controlArrow fp-next"></div>'),"#fff"!=v.controlArrowColor&&(e.find(".fp-controlArrow.fp-next").css("border-color","transparent transparent transparent "+v.controlArrowColor),e.find(".fp-controlArrow.fp-prev").css("border-color","transparent "+v.controlArrowColor+" transparent transparent"));v.loopHorizontal||e.find(".fp-controlArrow.fp-prev").hide()}(se(this)),v.slidesNavigation&&function(e,t){e.append('<div class="fp-slidesNav"><ul></ul></div>');var i=e.find(".fp-slidesNav");i.addClass(v.slidesNavPosition);for(var a=0;a<t;a++)i.find("ul").append('<li><a href="#"><span></span></a></li>');i.css("margin-left","-"+i.width()/2+"px"),i.find("li").first().find("a").addClass("active")}(se(this),a),i.each(function(e){se(this).css("width",r+"%"),v.verticalCentered&&U(se(this))});var s=t.find(".fp-slide.active");s.length?te(s):i.eq(0).addClass("active")}else v.verticalCentered&&U(se(this))}).promise().done(function(){se.fn.fullpage.setAutoScrolling(v.autoScrolling,"internal");var e=se(".fp-section.active").find(".fp-slide.active");e.length&&(0!==se(".fp-section.active").index(".fp-section")||0===se(".fp-section.active").index(".fp-section")&&0!==e.index())&&te(e),v.fixedElements&&v.css3&&se(v.fixedElements).appendTo("body"),v.navigation&&(n.css("margin-top","-"+n.height()/2+"px"),n.find("li").eq(se(".fp-section.active").index(".fp-section")).find("a").addClass("active")),v.menu&&v.css3&&se(v.menu).closest(".fullpage-wrapper").length&&se(v.menu).appendTo("body"),v.scrollOverflow?("complete"===document.readyState&&y(),se(window).on("load",y)):se.isFunction(v.afterRender)&&v.afterRender.call(o),L();var t=window.location.hash.replace("#","").split("/")[0];if(t.length){var i=se('[data-anchor="'+t+'"]');!v.animateAnchor&&i.length&&(v.autoScrolling?ie(i.position().top):(ie(0),Z(t),se("html, body").scrollTop(i.position().top)),R(t,null),se.isFunction(v.afterLoad)&&v.afterLoad.call(i,t,i.index(".fp-section")+1),i.addClass("active").siblings().removeClass("active"))}se(window).on("load",function(){var e,t,i;e=window.location.hash.replace("#","").split("/"),t=e[0],i=e[1],t&&G(t,i)})});var b=!1;function t(){var e;if(!v.autoScrolling||v.scrollBar){var i=se(window).scrollTop(),a=0,n=Math.abs(i-se(".fp-section").first().offset().top);se(".fp-section").each(function(e){var t=Math.abs(i-se(this).offset().top);t<n&&(a=e,n=t)}),e=se(".fp-section").eq(a)}if((!v.autoScrolling||v.scrollBar)&&!e.hasClass("active")){b=!0;var t=se(".fp-section.active"),r=t.index(".fp-section")+1,s=B(e),o=e.data("anchor"),l=e.index(".fp-section")+1,c=e.find(".fp-slide.active");if(c.length)var d=c.data("anchor"),u=c.index();e.addClass("active").siblings().removeClass("active"),m||(se.isFunction(v.onLeave)&&v.onLeave.call(t,r,l,s),se.isFunction(v.afterLoad)&&v.afterLoad.call(e,o,l)),R(o,0),v.anchors.length&&!m&&K(u,d,p=o,l),clearTimeout(f),f=setTimeout(function(){b=!1},100)}v.scrollBar&&(clearTimeout(h),h=setTimeout(function(){m||(se(".fp-section.active").is(e)&&(_=!0),M(e),_=!1)},1e3))}function $(e){return e.find(".fp-slides").length?e.find(".fp-slide.active").find(".fp-scrollable"):e.find(".fp-scrollable")}function k(e,t){var i,a;if(d[e])if(a="down"==e?(i="bottom",se.fn.fullpage.moveSectionDown):(i="top",se.fn.fullpage.moveSectionUp),0<t.length){if(!function(e,t){{if("top"===e)return!t.scrollTop();if("bottom"===e)return t.scrollTop()+1+t.innerHeight()>=t[0].scrollHeight}}(i,t))return 1;a()}else a()}se(window).on("scroll",t);var w=0,x=0,C=0,S=0;function T(e){var t=e.originalEvent;if(!function e(t,i){i=i||0;var a=se(t).parent();return!!(i<v.normalScrollElementTouchThreshold&&a.is(v.normalScrollElements))||i!=v.normalScrollElementTouchThreshold&&e(a,++i)}(e.target)){v.autoScrolling&&e.preventDefault();var i=se(".fp-section.active"),a=$(i);if(!m&&!g){var n=ee(t);C=n.y,S=n.x,i.find(".fp-slides").length&&Math.abs(x-S)>Math.abs(w-C)?Math.abs(x-S)>se(window).width()/100*v.touchSensitivity&&(S<x?d.right&&se.fn.fullpage.moveSlideRight():d.left&&se.fn.fullpage.moveSlideLeft()):v.autoScrolling&&Math.abs(w-C)>se(window).height()/100*v.touchSensitivity&&(C<w?k("down",a):w<C&&k("up",a))}}}function j(e){var t=e.originalEvent;v.scrollBar&&se("html,body").stop();var i=ee(t);w=i.y,x=i.x}function D(e){if(v.autoScrolling){e=window.event||e;var t=Math.max(-1,Math.min(1,e.wheelDelta||-e.deltaY||-e.detail));v.scrollBar&&(e.preventDefault?e.preventDefault():e.returnValue=!1);var i=$(se(".fp-section.active"));return m||k(t<0?"down":"up",i),!1}v.scrollBar&&se("html,body").stop()}function e(e){var t=se(".fp-section.active").find(".fp-slides");if(t.length&&!g){var i=t.find(".fp-slide.active"),a=null;if(!(a="prev"===e?i.prev(".fp-slide"):i.next(".fp-slide")).length){if(!v.loopHorizontal)return;a="prev"===e?i.siblings(":last"):i.siblings(":first")}g=!0,P(t,a)}}function E(){se(".fp-slide.active").each(function(){te(se(this))})}function M(e,t,i){var a=e.position();if(void 0!==a){var n={element:e,callback:t,isMovementUp:i,dest:a,dtop:a.top,yMovement:B(e),anchorLink:e.data("anchor"),sectionIndex:e.index(".fp-section"),activeSlide:e.find(".fp-slide.active"),activeSection:se(".fp-section.active"),leavingSection:se(".fp-section.active").index(".fp-section")+1,localIsResizing:_};if(!(n.activeSection.is(e)&&!_||v.scrollBar&&se(window).scrollTop()===n.dtop)){if(n.activeSlide.length)var r=n.activeSlide.data("anchor"),s=n.activeSlide.index();v.autoScrolling&&v.continuousVertical&&void 0!==n.isMovementUp&&(!n.isMovementUp&&"up"==n.yMovement||n.isMovementUp&&"down"==n.yMovement)&&(n=function(e){e.isMovementUp?se(".fp-section.active").before(e.activeSection.nextAll(".fp-section")):se(".fp-section.active").after(e.activeSection.prevAll(".fp-section").get().reverse());return ie(se(".fp-section.active").position().top),E(),e.wrapAroundElements=e.activeSection,e.dest=e.element.position(),e.dtop=e.dest.top,e.yMovement=B(e.element),e}(n)),e.addClass("active").siblings().removeClass("active"),m=!0,K(s,r,n.anchorLink,n.sectionIndex),se.isFunction(v.onLeave)&&!n.localIsResizing&&v.onLeave.call(n.activeSection,n.leavingSection,n.sectionIndex+1,n.yMovement),function(e){if(v.css3&&v.autoScrolling&&!v.scrollBar){X("translate3d(0px, -"+e.dtop+"px, 0px)",!0),setTimeout(function(){A(e)},v.scrollingSpeed)}else{var t=function(e){var t={};v.autoScrolling&&!v.scrollBar?(t.options={top:-e.dtop},t.element="."+c):(t.options={scrollTop:e.dtop},t.element="html, body");return t}(e);se(t.element).animate(t.options,v.scrollingSpeed,v.easing).promise().done(function(){A(e)})}}(n),p=n.anchorLink,v.autoScrolling&&R(n.anchorLink,n.sectionIndex)}}}function A(e){var t;(t=e).wrapAroundElements&&t.wrapAroundElements.length&&(t.isMovementUp?se(".fp-section:first").before(t.wrapAroundElements):se(".fp-section:last").after(t.wrapAroundElements),ie(se(".fp-section.active").position().top),E()),se.isFunction(v.afterLoad)&&!e.localIsResizing&&v.afterLoad.call(e.element,e.anchorLink,e.sectionIndex+1),setTimeout(function(){m=!1,se.isFunction(e.callback)&&e.callback.call(this)},i)}function I(){if(!b){var e=window.location.hash.replace("#","").split("/"),t=e[0],i=e[1];if(t.length)(t&&t!==p&&!(void 0===p)||void 0===p&&void 0===i&&!g||!g&&r!=i)&&G(t,i)}}function P(e,t){var i=t.position(),a=e.find(".fp-slidesContainer").parent(),n=t.index(),r=e.closest(".fp-section"),s=r.index(".fp-section"),o=r.data("anchor"),l=r.find(".fp-slidesNav"),c=t.data("anchor"),d=_;if(v.onSlideLeave){var u=r.find(".fp-slide.active"),p=u.index(),f=function(e,t){if(e==t)return"none";if(t<e)return"left";return"right"}(p,n);d||"none"===f||se.isFunction(v.onSlideLeave)&&v.onSlideLeave.call(u,o,s+1,p,f)}t.addClass("active").siblings().removeClass("active"),void 0===c&&(c=n),!v.loopHorizontal&&v.controlArrows&&(r.find(".fp-controlArrow.fp-prev").toggle(0!=n),r.find(".fp-controlArrow.fp-next").toggle(!t.is(":last-child"))),r.hasClass("active")&&K(n,c,o,s);function h(){d||se.isFunction(v.afterSlideLoad)&&v.afterSlideLoad.call(t,o,s+1,c,n),g=!1}if(v.css3){var m="translate3d(-"+i.left+"px, 0px, 0px)";H(e.find(".fp-slidesContainer"),v.scrollingSpeed).css(ae(m)),setTimeout(function(){h()},v.scrollingSpeed,v.easing)}else a.animate({scrollLeft:i.left},v.scrollingSpeed,v.easing,function(){h()});l.find(".active").removeClass("active"),l.find("li").eq(n).find("a").addClass("active")}se(window).on("hashchange",I),se(document).keydown(function(e){if(v.keyboardScrolling&&v.autoScrolling&&(40!=e.which&&38!=e.which||e.preventDefault(),!m))switch(e.which){case 38:case 33:se.fn.fullpage.moveSectionUp();break;case 40:case 34:se.fn.fullpage.moveSectionDown();break;case 36:se.fn.fullpage.moveTo(1);break;case 35:se.fn.fullpage.moveTo(se(".fp-section").length);break;case 37:se.fn.fullpage.moveSlideLeft();break;case 39:se.fn.fullpage.moveSlideRight();break;default:return}}),se(document).on("click touchstart","#fp-nav a",function(e){e.preventDefault();var t=se(this).parent().index();M(se(".fp-section").eq(t))}),se(document).on("click touchstart",".fp-slidesNav a",function(e){e.preventDefault();var t=se(this).closest(".fp-section").find(".fp-slides"),i=t.find(".fp-slide").eq(se(this).closest("li").index());P(t,i)}),v.normalScrollElements&&(se(document).on("mouseenter",v.normalScrollElements,function(){se.fn.fullpage.setMouseWheelScrolling(!1)}),se(document).on("mouseleave",v.normalScrollElements,function(){se.fn.fullpage.setMouseWheelScrolling(!0)})),se(".fp-section").on("click touchstart",".fp-controlArrow",function(){se(this).hasClass("fp-prev")?se.fn.fullpage.moveSlideLeft():se.fn.fullpage.moveSlideRight()}),se(window).resize(F);var O,N=l;function F(){if(L(),a){if("text"!==se(document.activeElement).attr("type")){var e=se(window).height();Math.abs(e-N)>20*Math.max(N,e)/100&&(se.fn.fullpage.reBuild(!0),N=e)}}else clearTimeout(O),O=setTimeout(function(){se.fn.fullpage.reBuild(!0)},500)}function L(){if(v.responsive){var e=o.hasClass("fp-responsive");se(window).width()<v.responsive?e||(se.fn.fullpage.setAutoScrolling(!1,"internal"),se("#fp-nav").hide(),o.addClass("fp-responsive")):e&&(se.fn.fullpage.setAutoScrolling(u.autoScrolling,"internal"),se("#fp-nav").show(),o.removeClass("fp-responsive"))}}function H(e){var t="all "+v.scrollingSpeed+"ms "+v.easingcss3;return e.removeClass("fp-notransition"),e.css({"-webkit-transition":t,transition:t})}function z(e){return e.addClass("fp-notransition")}function R(e,t){var i,a,n;i=e,v.menu&&(se(v.menu).find(".active").removeClass("active"),se(v.menu).find('[data-menuanchor="'+i+'"]').addClass("active")),a=e,n=t,v.navigation&&(se("#fp-nav").find(".active").removeClass("active"),a?se("#fp-nav").find('a[href="#'+a+'"]').addClass("active"):se("#fp-nav").find("li").eq(n).find("a").addClass("active"))}function B(e){var t=se(".fp-section.active").index(".fp-section"),i=e.index(".fp-section");return t==i?"none":i<t?"up":"down"}function q(e){e.css("overflow","hidden");var t,i=e.closest(".fp-section"),a=e.find(".fp-scrollable");a.length?t=a.get(0).scrollHeight:(t=e.get(0).scrollHeight,v.verticalCentered&&(t=e.find(".fp-tableCell").get(0).scrollHeight));var n=l-parseInt(i.css("padding-bottom"))-parseInt(i.css("padding-top"));n<t?a.length?a.css("height",n+"px").parent().css("height",n+"px"):(v.verticalCentered?e.find(".fp-tableCell").wrapInner('<div class="fp-scrollable" />'):e.wrapInner('<div class="fp-scrollable" />'),e.find(".fp-scrollable").slimScroll({allowPageScroll:!0,height:n+"px",size:"10px",alwaysVisible:!0})):W(e),e.css("overflow","")}function W(e){e.find(".fp-scrollable").children().first().unwrap().unwrap(),e.find(".slimScrollBar").remove(),e.find(".slimScrollRail").remove()}function U(e){e.addClass("fp-table").wrapInner('<div class="fp-tableCell" style="height:'+Y(e)+'px;" />')}function Y(e){var t=l;if(v.paddingTop||v.paddingBottom){var i=e;i.hasClass("fp-section")||(i=e.closest(".fp-section"));var a=parseInt(i.css("padding-top"))+parseInt(i.css("padding-bottom"));t=l-a}return t}function X(e,t){(t?H:z)(o),o.css(ae(e)),setTimeout(function(){o.removeClass("fp-notransition")},10)}function G(e,t){var i;void 0===t&&(t=0),i=isNaN(e)?se('[data-anchor="'+e+'"]'):se(".fp-section").eq(e-1),e===p||i.hasClass("active")?V(i,t):M(i,function(){V(i,t)})}function V(e,t){if(void 0!==t){var i=e.find(".fp-slides"),a=i.find('[data-anchor="'+t+'"]');a.length||(a=i.find(".fp-slide").eq(t)),a.length&&P(i,a)}}function K(e,t,i,a){var n="";v.anchors.length?(e?(void 0!==i&&(n=i),void 0===t&&(t=e),Q(n+"/"+(r=t))):(void 0!==e&&(r=t),Q(i)),Z(location.hash)):Z(void 0!==e?a+"-"+e:String(a))}function Q(e){if(v.recordHistory)location.hash=e;else if(a||s)history.replaceState(void 0,void 0,"#"+e);else{var t=window.location.href.split("#")[0];window.location.replace(t+"#"+e)}}function Z(e){e=e.replace("/","-").replace("#",""),se("body")[0].className=se("body")[0].className.replace(/\b\s?fp-viewing-[^\s]+\b/g,""),se("body").addClass("fp-viewing-"+e)}function J(){return window.PointerEvent?{down:"pointerdown",move:"pointermove"}:{down:"MSPointerDown",move:"MSPointerMove"}}function ee(e){var t=[];return t.y=void 0!==e.pageY&&(e.pageY||e.pageX)?e.pageY:e.touches[0].pageY,t.x=void 0!==e.pageX&&(e.pageY||e.pageX)?e.pageX:e.touches[0].pageX,t}function te(e){se.fn.fullpage.setScrollingSpeed(0,"internal"),P(e.closest(".fp-slides"),e),se.fn.fullpage.setScrollingSpeed(u.scrollingSpeed,"internal")}function ie(e){if(v.scrollBar)o.scrollTop(e);else if(v.css3){X("translate3d(0px, -"+e+"px, 0px)",!1)}else o.css("top",-e)}function ae(e){return{"-webkit-transform":e,"-moz-transform":e,"-ms-transform":e,transform:e}}function ne(e,t,i){v[e]=t,"internal"!==i&&(u[e]=t)}function re(e,t){console&&console[e]&&console[e]("fullPage: "+t)}se.fn.fullpage.destroy=function(e){se.fn.fullpage.setAutoScrolling(!1,"internal"),se.fn.fullpage.setAllowScrolling(!1),se.fn.fullpage.setKeyboardScrolling(!1),se(window).off("scroll",t).off("hashchange",I).off("resize",F),se(document).off("click","#fp-nav a").off("mouseenter","#fp-nav li").off("mouseleave","#fp-nav li").off("click",".fp-slidesNav a").off("mouseover",v.normalScrollElements).off("mouseout",v.normalScrollElements),se(".fp-section").off("click",".fp-controlArrow"),e&&(ie(0),se("#fp-nav, .fp-slidesNav, .fp-controlArrow").remove(),se(".fp-section").css({height:"","background-color":"",padding:""}),se(".fp-slide").css({width:""}),o.css({height:"",position:"","-ms-touch-action":"","touch-action":""}),se(".fp-section, .fp-slide").each(function(){W(se(this)),se(this).removeClass("fp-table active")}),z(o),z(o.find(".fp-easing")),o.find(".fp-tableCell, .fp-slidesContainer, .fp-slides").each(function(){se(this).replaceWith(this.childNodes)}),se("html, body").scrollTop(0))}}}(jQuery),"object"!=typeof JSON&&(JSON={}),function(){"use strict";function f(e){return e<10?"0"+e:e}function quote(e){return escapable.lastIndex=0,escapable.test(e)?'"'+e.replace(escapable,function(e){var t=meta[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+e+'"'}function str(e,t){var i,a,n,r,s,o=gap,l=t[e];switch(l&&"object"==typeof l&&"function"==typeof l.toJSON&&(l=l.toJSON(e)),"function"==typeof rep&&(l=rep.call(t,e,l)),typeof l){case"string":return quote(l);case"number":return isFinite(l)?String(l):"null";case"boolean":case"null":return String(l);case"object":if(!l)return"null";if(gap+=indent,s=[],"[object Array]"===Object.prototype.toString.apply(l)){for(r=l.length,i=0;i<r;i+=1)s[i]=str(i,l)||"null";return n=0===s.length?"[]":gap?"[\n"+gap+s.join(",\n"+gap)+"\n"+o+"]":"["+s.join(",")+"]",gap=o,n}if(rep&&"object"==typeof rep)for(r=rep.length,i=0;i<r;i+=1)"string"==typeof rep[i]&&((n=str(a=rep[i],l))&&s.push(quote(a)+(gap?": ":":")+n));else for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&((n=str(a,l))&&s.push(quote(a)+(gap?": ":":")+n));return n=0===s.length?"{}":gap?"{\n"+gap+s.join(",\n"+gap)+"\n"+o+"}":"{"+s.join(",")+"}",gap=o,n}}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(e){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(e){return this.valueOf()});var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;"function"!=typeof JSON.stringify&&(JSON.stringify=function(e,t,i){var a;if(indent=gap="","number"==typeof i)for(a=0;a<i;a+=1)indent+=" ";else"string"==typeof i&&(indent=i);if(!(rep=t)||"function"==typeof t||"object"==typeof t&&"number"==typeof t.length)return str("",{"":e});throw new Error("JSON.stringify")}),"function"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){function walk(e,t){var i,a,n=e[t];if(n&&"object"==typeof n)for(i in n)Object.prototype.hasOwnProperty.call(n,i)&&(void 0!==(a=walk(n,i))?n[i]=a:delete n[i]);return reviver.call(e,t,n)}var j;if(text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(e){return"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})),/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}(),function(e){"use strict";var t=e.History=e.History||{},a=e.jQuery;if(void 0!==t.Adapter)throw new Error("History.js Adapter has already been loaded...");t.Adapter={bind:function(e,t,i){a(e).bind(t,i)},trigger:function(e,t,i){a(e).trigger(t,i)},extractEventData:function(e,t,i){return t&&t.originalEvent&&t.originalEvent[e]||i&&i[e]||void 0},onDomLoad:function(e){a(e)}},void 0!==t.init&&t.init()}(window),function(d){"use strict";var e=d.document,t=d.setTimeout||t,i=d.clearTimeout||i,o=d.setInterval||o,u=d.History=d.History||{};if(void 0!==u.initHtml4)throw new Error("History.js HTML4 Support has already been loaded...");u.initHtml4=function(){if(void 0!==u.initHtml4.initialized)return!1;u.initHtml4.initialized=!0,u.enabled=!0,u.savedHashes=[],u.isLastHash=function(e){return e===u.getHashByIndex()},u.isHashEqual=function(e,t){return(e=encodeURIComponent(e).replace(/%25/g,"%"))===(t=encodeURIComponent(t).replace(/%25/g,"%"))},u.saveHash=function(e){return!u.isLastHash(e)&&(u.savedHashes.push(e),!0)},u.getHashByIndex=function(e){return void 0===e?u.savedHashes[u.savedHashes.length-1]:e<0?u.savedHashes[u.savedHashes.length+e]:u.savedHashes[e]},u.discardedHashes={},u.discardedStates={},u.discardState=function(e,t,i){var a,n=u.getHashByState(e);return a={discardedState:e,backState:i,forwardState:t},u.discardedStates[n]=a,!0},u.discardHash=function(e,t,i){var a={discardedHash:e,backState:i,forwardState:t};return u.discardedHashes[e]=a,!0},u.discardedState=function(e){var t=u.getHashByState(e);return u.discardedStates[t]||!1},u.discardedHash=function(e){return u.discardedHashes[e]||!1},u.recycleState=function(e){var t=u.getHashByState(e);return u.discardedState(e)&&delete u.discardedStates[t],!0},u.emulated.hashChange&&(u.hashChangeInit=function(){u.checkerFunction=null;var i,a,n,r="",s=Boolean(u.getHash());return u.isInternetExplorer()?((i=e.createElement("iframe")).setAttribute("id","historyjs-iframe"),i.setAttribute("src","#"),i.style.display="none",e.body.appendChild(i),i.contentWindow.document.open(),i.contentWindow.document.close(),a="",n=!1,u.checkerFunction=function(){if(n)return!1;n=!0;var e=u.getHash(),t=u.getHash(i.contentWindow.document);return e!==r?(t!==(r=e)&&(a=t=e,i.contentWindow.document.open(),i.contentWindow.document.close(),i.contentWindow.document.location.hash=u.escapeHash(e)),u.Adapter.trigger(d,"hashchange")):t!==a&&(a=t,s&&""===t?u.back():u.setHash(t,!1)),!(n=!1)}):u.checkerFunction=function(){var e=u.getHash()||"";return e!==r&&(r=e,u.Adapter.trigger(d,"hashchange")),!0},u.intervalList.push(o(u.checkerFunction,u.options.hashChangeInterval)),!0},u.Adapter.onDomLoad(u.hashChangeInit)),u.emulated.pushState&&(u.onHashChange=function(e){var t,i=e&&e.newURL||u.getLocationHref(),a=u.getHashByUrl(i),n=null;return u.isLastHash(a)?(u.busy(!1),!1):(u.doubleCheckComplete(),u.saveHash(a),a&&u.isTraditionalAnchor(a)?(u.Adapter.trigger(d,"anchorchange"),u.busy(!1),!1):(n=u.extractState(u.getFullUrl(a||u.getLocationHref()),!0),u.isLastSavedState(n)?(u.busy(!1),!1):(u.getHashByState(n),(t=u.discardedState(n))?(u.getHashByIndex(-2)===u.getHashByState(t.forwardState)?u.back(!1):u.forward(!1),!1):(u.pushState(n.data,n.title,encodeURI(n.url),!1),!0))))},u.Adapter.bind(d,"hashchange",u.onHashChange),u.pushState=function(e,t,i,a){if(i=encodeURI(i).replace(/%25/g,"%"),u.getHashByUrl(i))throw new Error("History.js does not support states with fragment-identifiers (hashes/anchors).");if(!1!==a&&u.busy())return u.pushQueue({scope:u,callback:u.pushState,args:arguments,queue:a}),!1;u.busy(!0);var n=u.createStateObject(e,t,i),r=u.getHashByState(n),s=u.getState(!1),o=u.getHashByState(s),l=u.getHash(),c=u.expectedStateId==n.id;return u.storeState(n),u.expectedStateId=n.id,u.recycleState(n),u.setTitle(n),r===o?(u.busy(!1),!1):(u.saveState(n),c||u.Adapter.trigger(d,"statechange"),u.isHashEqual(r,l)||u.isHashEqual(r,u.getShortUrl(u.getLocationHref()))||u.setHash(r,!1),u.busy(!1),!0)},u.replaceState=function(e,t,i,a){if(i=encodeURI(i).replace(/%25/g,"%"),u.getHashByUrl(i))throw new Error("History.js does not support states with fragment-identifiers (hashes/anchors).");if(!1!==a&&u.busy())return u.pushQueue({scope:u,callback:u.replaceState,args:arguments,queue:a}),!1;u.busy(!0);var n=u.createStateObject(e,t,i),r=u.getHashByState(n),s=u.getState(!1),o=u.getHashByState(s),l=u.getStateByIndex(-2);return u.discardState(s,n,l),r===o?(u.storeState(n),u.expectedStateId=n.id,u.recycleState(n),u.setTitle(n),u.saveState(n),u.Adapter.trigger(d,"statechange"),u.busy(!1)):u.pushState(n.data,n.title,n.url,!1),!0}),u.emulated.pushState&&u.getHash()&&!u.emulated.hashChange&&u.Adapter.onDomLoad(function(){u.Adapter.trigger(d,"hashchange")})},void 0!==u.init&&u.init()}(window),function(s,i){"use strict";var o=s.console||i,l=s.document,a=s.navigator,n=!1,r=s.setTimeout,c=s.clearTimeout,d=s.setInterval,u=s.clearInterval,p=s.JSON,f=s.alert,h=s.History=s.History||{},m=s.history;try{(n=s.sessionStorage).setItem("TEST","1"),n.removeItem("TEST")}catch(e){n=!1}if(p.stringify=p.stringify||p.encode,p.parse=p.parse||p.decode,void 0!==h.init)throw new Error("History.js Core has already been loaded...");h.init=function(e){return void 0!==h.Adapter&&(void 0!==h.initCore&&h.initCore(),void 0!==h.initHtml4&&h.initHtml4(),!0)},h.initCore=function(e){if(void 0!==h.initCore.initialized)return!1;if(h.initCore.initialized=!0,h.options=h.options||{},h.options.hashChangeInterval=h.options.hashChangeInterval||100,h.options.safariPollInterval=h.options.safariPollInterval||500,h.options.doubleCheckInterval=h.options.doubleCheckInterval||500,h.options.disableSuid=h.options.disableSuid||!1,h.options.storeInterval=h.options.storeInterval||1e3,h.options.busyDelay=h.options.busyDelay||250,h.options.debug=h.options.debug||!1,h.options.initialTitle=h.options.initialTitle||l.title,h.options.html4Mode=h.options.html4Mode||!1,h.options.delayInit=h.options.delayInit||!1,h.intervalList=[],h.clearAllIntervals=function(){var e,t=h.intervalList;if(null!=t){for(e=0;e<t.length;e++)u(t[e]);h.intervalList=null}},h.debug=function(){h.options.debug&&h.log.apply(h,arguments)},h.log=function(){var e,t,i,a,n,r=void 0!==o&&void 0!==o.log&&void 0!==o.log.apply,s=l.getElementById("log");for(r?(e=(a=Array.prototype.slice.call(arguments)).shift(),void 0!==o.debug?o.debug.apply(o,[e,a]):o.log.apply(o,[e,a])):e="\n"+arguments[0]+"\n",t=1,i=arguments.length;t<i;++t){if("object"==typeof(n=arguments[t])&&void 0!==p)try{n=p.stringify(n)}catch(e){}e+="\n"+n+"\n"}return s?(s.value+=e+"\n-----\n",s.scrollTop=s.scrollHeight-s.clientHeight):r||f(e),!0},h.getInternetExplorerMajorVersion=function(){return h.getInternetExplorerMajorVersion.cached=void 0!==h.getInternetExplorerMajorVersion.cached?h.getInternetExplorerMajorVersion.cached:function(){for(var e=3,t=l.createElement("div"),i=t.getElementsByTagName("i");(t.innerHTML="\x3c!--[if gt IE "+ ++e+"]><i></i><![endif]--\x3e")&&i[0];);return 4<e&&e}()},h.isInternetExplorer=function(){return h.isInternetExplorer.cached=void 0!==h.isInternetExplorer.cached?h.isInternetExplorer.cached:Boolean(h.getInternetExplorerMajorVersion())},h.options.html4Mode?h.emulated={pushState:!0,hashChange:!0}:h.emulated={pushState:!Boolean(s.history&&s.history.pushState&&s.history.replaceState&&!/ Mobile\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i.test(a.userAgent)&&!/AppleWebKit\/5([0-2]|3[0-2])/i.test(a.userAgent)),hashChange:Boolean(!("onhashchange"in s||"onhashchange"in l)||h.isInternetExplorer()&&h.getInternetExplorerMajorVersion()<8)},h.enabled=!h.emulated.pushState,h.bugs={setHash:Boolean(!h.emulated.pushState&&"Apple Computer, Inc."===a.vendor&&/AppleWebKit\/5([0-2]|3[0-3])/.test(a.userAgent)),safariPoll:Boolean(!h.emulated.pushState&&"Apple Computer, Inc."===a.vendor&&/AppleWebKit\/5([0-2]|3[0-3])/.test(a.userAgent)),ieDoubleCheck:Boolean(h.isInternetExplorer()&&h.getInternetExplorerMajorVersion()<8),hashEscape:Boolean(h.isInternetExplorer()&&h.getInternetExplorerMajorVersion()<7)},h.isEmptyObject=function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},h.cloneObject=function(e){var t;return e?(t=p.stringify(e),p.parse(t)):{}},h.getRootUrl=function(){var e=l.location.protocol+"//"+(l.location.hostname||l.location.host);return l.location.port&&(e+=":"+l.location.port),e+="/"},h.getBaseHref=function(){var e=l.getElementsByTagName("base"),t="";return 1===e.length&&(t=e[0].href.replace(/[^\/]+$/,"")),(t=t.replace(/\/+$/,""))&&(t+="/"),t},h.getBaseUrl=function(){return h.getBaseHref()||h.getBasePageUrl()||h.getRootUrl()},h.getPageUrl=function(){return((h.getState(!1,!1)||{}).url||h.getLocationHref()).replace(/\/+$/,"").replace(/[^\/]+$/,function(e,t,i){return/\./.test(e)?e:e+"/"})},h.getBasePageUrl=function(){return h.getLocationHref().replace(/[#\?].*/,"").replace(/[^\/]+$/,function(e,t,i){return/[^\/]$/.test(e)?"":e}).replace(/\/+$/,"")+"/"},h.getFullUrl=function(e,t){var i=e,a=e.substring(0,1);return t=void 0===t||t,/[a-z]+\:\/\//.test(e)||(i="/"===a?h.getRootUrl()+e.replace(/^\/+/,""):"#"===a?h.getPageUrl().replace(/#.*/,"")+e:"?"===a?h.getPageUrl().replace(/[\?#].*/,"")+e:t?h.getBaseUrl()+e.replace(/^(\.\/)+/,""):h.getBasePageUrl()+e.replace(/^(\.\/)+/,"")),i.replace(/\#$/,"")},h.getShortUrl=function(e){var t=e,i=h.getBaseUrl(),a=h.getRootUrl();return h.emulated.pushState&&(t=t.replace(i,"")),t=t.replace(a,"/"),h.isTraditionalAnchor(t)&&(t="./"+t),t=t.replace(/^(\.\/)+/g,"./").replace(/\#$/,"")},h.getLocationHref=function(e){return(e=e||l).URL===e.location.href?e.location.href:e.location.href===decodeURIComponent(e.URL)?e.URL:(!e.location.hash||decodeURIComponent(e.location.href.replace(/^[^#]+/,""))!==e.location.hash)&&(-1!=e.URL.indexOf("#")||-1==e.location.href.indexOf("#"))&&e.URL||e.location.href},h.store={},h.idToState=h.idToState||{},h.stateToId=h.stateToId||{},h.urlToId=h.urlToId||{},h.storedStates=h.storedStates||[],h.savedStates=h.savedStates||[],h.normalizeStore=function(){h.store.idToState=h.store.idToState||{},h.store.urlToId=h.store.urlToId||{},h.store.stateToId=h.store.stateToId||{}},h.getState=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=h.getLastSavedState();return!i&&t&&(i=h.createStateObject()),e&&((i=h.cloneObject(i)).url=i.cleanUrl||i.url),i},h.getIdByState=function(e){var t,i=h.extractId(e.url);if(!i)if(t=h.getStateString(e),void 0!==h.stateToId[t])i=h.stateToId[t];else if(void 0!==h.store.stateToId[t])i=h.store.stateToId[t];else{for(;i=(new Date).getTime()+String(Math.random()).replace(/\D/g,""),void 0!==h.idToState[i]||void 0!==h.store.idToState[i];);h.stateToId[t]=i,h.idToState[i]=e}return i},h.normalizeState=function(e){var t,i;return e&&"object"==typeof e||(e={}),void 0!==e.normalized?e:(e.data&&"object"==typeof e.data||(e.data={}),(t={normalized:!0}).title=e.title||"",t.url=h.getFullUrl(e.url?e.url:h.getLocationHref()),t.hash=h.getShortUrl(t.url),t.data=h.cloneObject(e.data),t.id=h.getIdByState(t),t.cleanUrl=t.url.replace(/\??\&_suid.*/,""),t.url=t.cleanUrl,i=!h.isEmptyObject(t.data),(t.title||i)&&!0!==h.options.disableSuid&&(t.hash=h.getShortUrl(t.url).replace(/\??\&_suid.*/,""),/\?/.test(t.hash)||(t.hash+="?"),t.hash+="&_suid="+t.id),t.hashedUrl=h.getFullUrl(t.hash),(h.emulated.pushState||h.bugs.safariPoll)&&h.hasUrlDuplicate(t)&&(t.url=t.hashedUrl),t)},h.createStateObject=function(e,t,i){var a={data:e,title:t,url:i};return a=h.normalizeState(a)},h.getStateById=function(e){return e=String(e),h.idToState[e]||h.store.idToState[e]||i},h.getStateString=function(e){var t;return t={data:h.normalizeState(e).data,title:e.title,url:e.url},p.stringify(t)},h.getStateId=function(e){return h.normalizeState(e).id},h.getHashByState=function(e){return h.normalizeState(e).hash},h.extractId=function(e){var t,i;return i=-1!=e.indexOf("#")?e.split("#")[0]:e,(t=/(.*)\&_suid=([0-9]+)$/.exec(i))&&t[1],(t?String(t[2]||""):"")||!1},h.isTraditionalAnchor=function(e){return!/[\/\?\.]/.test(e)},h.extractState=function(e,t){var i,a,n=null;return t=t||!1,(i=h.extractId(e))&&(n=h.getStateById(i)),n||(a=h.getFullUrl(e),(i=h.getIdByUrl(a)||!1)&&(n=h.getStateById(i)),n||!t||h.isTraditionalAnchor(e)||(n=h.createStateObject(null,null,a))),n},h.getIdByUrl=function(e){return h.urlToId[e]||h.store.urlToId[e]||i},h.getLastSavedState=function(){return h.savedStates[h.savedStates.length-1]||i},h.getLastStoredState=function(){return h.storedStates[h.storedStates.length-1]||i},h.hasUrlDuplicate=function(e){var t;return(t=h.extractState(e.url))&&t.id!==e.id},h.storeState=function(e){return h.urlToId[e.url]=e.id,h.storedStates.push(h.cloneObject(e)),e},h.isLastSavedState=function(e){var t=!1;return h.savedStates.length&&(t=e.id===h.getLastSavedState().id),t},h.saveState=function(e){return!h.isLastSavedState(e)&&(h.savedStates.push(h.cloneObject(e)),!0)},h.getStateByIndex=function(e){return void 0===e?h.savedStates[h.savedStates.length-1]:e<0?h.savedStates[h.savedStates.length+e]:h.savedStates[e]},h.getCurrentIndex=function(){return h.savedStates.length<1?0:h.savedStates.length-1},h.getHash=function(e){var t=h.getLocationHref(e);return h.getHashByUrl(t)},h.unescapeHash=function(e){var t=h.normalizeHash(e);return t=decodeURIComponent(t)},h.normalizeHash=function(e){return e.replace(/[^#]*#/,"").replace(/#.*/,"")},h.setHash=function(e,t){var i,a;return!1!==t&&h.busy()?(h.pushQueue({scope:h,callback:h.setHash,args:arguments,queue:t}),!1):(h.busy(!0),(i=h.extractState(e,!0))&&!h.emulated.pushState?h.pushState(i.data,i.title,i.url,!1):h.getHash()!==e&&(h.bugs.setHash?(a=h.getPageUrl(),h.pushState(null,null,a+"#"+e,!1)):l.location.hash=e),h)},h.escapeHash=function(e){var t=h.normalizeHash(e);return t=s.encodeURIComponent(t),h.bugs.hashEscape||(t=t.replace(/\%21/g,"!").replace(/\%26/g,"&").replace(/\%3D/g,"=").replace(/\%3F/g,"?")),t},h.getHashByUrl=function(e){var t=String(e).replace(/([^#]*)#?([^#]*)#?(.*)/,"$2");return t=h.unescapeHash(t)},h.setTitle=function(e){var t,i=e.title;i||(t=h.getStateByIndex(0))&&t.url===e.url&&(i=t.title||h.options.initialTitle);try{l.getElementsByTagName("title")[0].innerHTML=i.replace("<","&lt;").replace(">","&gt;").replace(" & "," &amp; ")}catch(e){}return l.title=i,h},h.queues=[],h.busy=function(e){if(void 0!==e?h.busy.flag=e:void 0===h.busy.flag&&(h.busy.flag=!1),!h.busy.flag){c(h.busy.timeout);var a=function(){var e,t,i;if(!h.busy.flag)for(e=h.queues.length-1;0<=e;--e)0!==(t=h.queues[e]).length&&(i=t.shift(),h.fireQueueItem(i),h.busy.timeout=r(a,h.options.busyDelay))};h.busy.timeout=r(a,h.options.busyDelay)}return h.busy.flag},h.busy.flag=!1,h.fireQueueItem=function(e){return e.callback.apply(e.scope||h,e.args||[])},h.pushQueue=function(e){return h.queues[e.queue||0]=h.queues[e.queue||0]||[],h.queues[e.queue||0].push(e),h},h.queue=function(e,t){return"function"==typeof e&&(e={callback:e}),void 0!==t&&(e.queue=t),h.busy()?h.pushQueue(e):h.fireQueueItem(e),h},h.clearQueue=function(){return h.busy.flag=!1,h.queues=[],h},h.stateChanged=!1,h.doubleChecker=!1,h.doubleCheckComplete=function(){return h.stateChanged=!0,h.doubleCheckClear(),h},h.doubleCheckClear=function(){return h.doubleChecker&&(c(h.doubleChecker),h.doubleChecker=!1),h},h.doubleCheck=function(e){return h.stateChanged=!1,h.doubleCheckClear(),h.bugs.ieDoubleCheck&&(h.doubleChecker=r(function(){return h.doubleCheckClear(),h.stateChanged||e(),!0},h.options.doubleCheckInterval)),h},h.safariStatePoll=function(){var e=h.extractState(h.getLocationHref());if(!h.isLastSavedState(e))return e||h.createStateObject(),h.Adapter.trigger(s,"popstate"),h},h.back=function(e){return!1!==e&&h.busy()?(h.pushQueue({scope:h,callback:h.back,args:arguments,queue:e}),!1):(h.busy(!0),h.doubleCheck(function(){h.back(!1)}),m.go(-1),!0)},h.forward=function(e){return!1!==e&&h.busy()?(h.pushQueue({scope:h,callback:h.forward,args:arguments,queue:e}),!1):(h.busy(!0),h.doubleCheck(function(){h.forward(!1)}),m.go(1),!0)},h.go=function(e,t){var i;if(0<e)for(i=1;i<=e;++i)h.forward(t);else{if(!(e<0))throw new Error("History.go: History.go requires a positive or negative integer passed.");for(i=-1;e<=i;--i)h.back(t)}return h},h.emulated.pushState){var t=function(){};h.pushState=h.pushState||t,h.replaceState=h.replaceState||t}else h.onPopState=function(e,t){var i,a,n=!1,r=!1;return h.doubleCheckComplete(),(i=h.getHash())?((a=h.extractState(i||h.getLocationHref(),!0))?h.replaceState(a.data,a.title,a.url,!1):(h.Adapter.trigger(s,"anchorchange"),h.busy(!1)),h.expectedStateId=!1):(r=(r=(n=h.Adapter.extractEventData("state",e,t)||!1)?h.getStateById(n):h.expectedStateId?h.getStateById(h.expectedStateId):h.extractState(h.getLocationHref()))||h.createStateObject(null,null,h.getLocationHref()),h.expectedStateId=!1,h.isLastSavedState(r)?(h.busy(!1),!1):(h.storeState(r),h.saveState(r),h.setTitle(r),h.Adapter.trigger(s,"statechange"),h.busy(!1),!0))},h.Adapter.bind(s,"popstate",h.onPopState),h.pushState=function(e,t,i,a){if(h.getHashByUrl(i)&&h.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(!1!==a&&h.busy())return h.pushQueue({scope:h,callback:h.pushState,args:arguments,queue:a}),!1;h.busy(!0);var n=h.createStateObject(e,t,i);return h.isLastSavedState(n)?h.busy(!1):(h.storeState(n),h.expectedStateId=n.id,m.pushState(n.id,n.title,n.url),h.Adapter.trigger(s,"popstate")),!0},h.replaceState=function(e,t,i,a){if(h.getHashByUrl(i)&&h.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(!1!==a&&h.busy())return h.pushQueue({scope:h,callback:h.replaceState,args:arguments,queue:a}),!1;h.busy(!0);var n=h.createStateObject(e,t,i);return h.isLastSavedState(n)?h.busy(!1):(h.storeState(n),h.expectedStateId=n.id,m.replaceState(n.id,n.title,n.url),h.Adapter.trigger(s,"popstate")),!0};if(n){try{h.store=p.parse(n.getItem("History.store"))||{}}catch(e){h.store={}}h.normalizeStore()}else h.store={},h.normalizeStore();h.Adapter.bind(s,"unload",h.clearAllIntervals),h.saveState(h.storeState(h.extractState(h.getLocationHref(),!0))),n&&(h.onUnload=function(){var t,e,i;try{t=p.parse(n.getItem("History.store"))||{}}catch(e){t={}}for(e in t.idToState=t.idToState||{},t.urlToId=t.urlToId||{},t.stateToId=t.stateToId||{},h.idToState)h.idToState.hasOwnProperty(e)&&(t.idToState[e]=h.idToState[e]);for(e in h.urlToId)h.urlToId.hasOwnProperty(e)&&(t.urlToId[e]=h.urlToId[e]);for(e in h.stateToId)h.stateToId.hasOwnProperty(e)&&(t.stateToId[e]=h.stateToId[e]);h.store=t,h.normalizeStore(),i=p.stringify(t);try{n.setItem("History.store",i)}catch(e){if(e.code!==DOMException.QUOTA_EXCEEDED_ERR)throw e;n.length&&(n.removeItem("History.store"),n.setItem("History.store",i))}},h.intervalList.push(d(h.onUnload,h.options.storeInterval)),h.Adapter.bind(s,"beforeunload",h.onUnload),h.Adapter.bind(s,"unload",h.onUnload)),h.emulated.pushState||(h.bugs.safariPoll&&h.intervalList.push(d(h.safariStatePoll,h.options.safariPollInterval)),"Apple Computer, Inc."!==a.vendor&&"Mozilla"!==(a.appCodeName||"")||(h.Adapter.bind(s,"hashchange",function(){h.Adapter.trigger(s,"popstate")}),h.getHash()&&h.Adapter.onDomLoad(function(){h.Adapter.trigger(s,"hashchange")})))},h.options&&h.options.delayInit||h.init()}(window),function(i){function a(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return i[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}var n={};a.m=i,a.c=n,a.d=function(e,t,i){a.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=3)}([function(e,t,i){"use strict";var a,n,r;n=[i(2)],void 0!==(r="function"==typeof(a=function(e){return e})?a.apply(t,n):a)&&(e.exports=r)},function(e,t,i){"use strict";var a,n,r,le="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};n=[i(0),i(10),i(11)],void 0!==(r="function"==typeof(a=function(Z,J,ee,te){function ie(e,t,i){if(!(this instanceof ie))return new ie(e,t,i);this.el=te,this.events={},this.maskset=te,this.refreshValue=!1,!0!==i&&(Z.isPlainObject(e)?t=e:(t=t||{}).alias=e,this.opts=Z.extend(!0,{},this.defaults,t),this.noMasksCache=t&&t.definitions!==te,this.userOptions=t||{},this.isRTL=this.opts.numericInput,d(this.opts.alias,t,this.opts))}function d(e,t,i){var a=ie.prototype.aliases[e];return a?(a.alias&&d(a.alias,te,i),Z.extend(!0,i,a),Z.extend(!0,i,t),!0):(null===i.mask&&(i.mask=e),!1)}function s(i,o){function e(e,t,i){var a=!1;if(null!==e&&""!==e||((a=null!==i.regex)?e=(e=i.regex).replace(/^(\^)(.*)(\$)$/,"$2"):(a=!0,e=".*")),1===e.length&&!1===i.greedy&&0!==i.repeat&&(i.placeholder=""),i.repeat>0||"*"===i.repeat||"+"===i.repeat){var n="*"===i.repeat?0:"+"===i.repeat?1:i.repeat;e=i.groupmarker.start+e+i.groupmarker.end+i.quantifiermarker.start+n+","+i.repeat+i.quantifiermarker.end}var r,s=a?"regex_"+i.regex:i.numericInput?e.split("").reverse().join(""):e;return ie.prototype.masksCache[s]===te||!0===o?(r={mask:e,maskToken:ie.prototype.analyseMask(e,a,i),validPositions:{},_buffer:te,buffer:te,tests:{},metadata:t,maskLength:te},!0!==o&&(ie.prototype.masksCache[s]=r,r=Z.extend(!0,{},ie.prototype.masksCache[s]))):r=Z.extend(!0,{},ie.prototype.masksCache[s]),r}if(Z.isFunction(i.mask)&&(i.mask=i.mask(i)),Z.isArray(i.mask)){if(i.mask.length>1){i.keepStatic=null===i.keepStatic||i.keepStatic;var a=i.groupmarker.start;return Z.each(i.numericInput?i.mask.reverse():i.mask,function(e,t){a.length>1&&(a+=i.groupmarker.end+i.alternatormarker+i.groupmarker.start),t.mask===te||Z.isFunction(t.mask)?a+=t:a+=t.mask}),a+=i.groupmarker.end,e(a,i.mask,i)}i.mask=i.mask.pop()}return i.mask&&i.mask.mask!==te&&!Z.isFunction(i.mask.mask)?e(i.mask.mask,i.mask,i):e(i.mask,i.mask,i)}function ae(e,t,N){function n(e,t,i){t=t||0;var a,n,r,s=[],o=0,l=x();do{!0===e&&F().validPositions[o]?(n=(r=F().validPositions[o]).match,a=r.locator.slice(),s.push(!0===i?r.input:!1===i?n.nativeDef:I(o,n))):(n=(r=y(o,a,o-1)).match,a=r.locator.slice(),(!1===N.jitMasking||o<l||"number"==typeof N.jitMasking&&isFinite(N.jitMasking)&&N.jitMasking>o)&&s.push(!1===i?n.nativeDef:I(o,n))),o++}while((L===te||o<L)&&(null!==n.fn||""!==n.def)||t>o);return""===s[s.length-1]&&s.pop(),F().maskLength=o+1,s}function F(){return t}function w(e){var t=F();t.buffer=te,!0!==e&&(t.validPositions={},t.p=0)}function x(e,t,i){var a=-1,n=-1,r=i||F().validPositions;e===te&&(e=-1);for(var s in r){var o=parseInt(s);r[o]&&(t||!0!==r[o].generatedInput)&&(o<=e&&(a=o),o>=e&&(n=o))}return-1!==a&&e-a>1||n<e?a:n}function _(e,t,i,a){var n,r=e,s=Z.extend(!0,{},F().validPositions),o=!1;for(F().p=e,n=t-1;n>=r;n--)F().validPositions[n]!==te&&(!0!==i&&(!F().validPositions[n].match.optionality&&function(e){var t=F().validPositions[e];if(t!==te&&null===t.match.fn){var i=F().validPositions[e-1],a=F().validPositions[e+1];return i!==te&&a!==te}return!1}(n)||!1===N.canClearPosition(F(),n,x(),a,N))||delete F().validPositions[n]);for(w(!0),n=r+1;n<=x();){for(;F().validPositions[r]!==te;)r++;if(n<r&&(n=r+1),F().validPositions[n]===te&&E(n))n++;else{var l=y(n);!1===o&&s[r]&&s[r].match.def===l.match.def?(F().validPositions[r]=Z.extend(!0,{},s[r]),F().validPositions[r].input=l.input,delete F().validPositions[n],n++):b(r,l.match.def)?!1!==D(r,l.input||I(n),!0)&&(delete F().validPositions[n],n++,o=!0):E(n)||(n++,r--),r++}}w(!0)}function f(e,t){for(var i,a=e,n=x(),r=F().validPositions[n]||C(0)[0],s=r.alternation!==te?r.locator[r.alternation].toString().split(","):[],o=0;o<a.length&&(!((i=a[o]).match&&(N.greedy&&!0!==i.match.optionalQuantifier||(!1===i.match.optionality||!1===i.match.newBlockMarker)&&!0!==i.match.optionalQuantifier)&&(r.alternation===te||r.alternation!==i.alternation||i.locator[r.alternation]!==te&&j(i.locator[r.alternation].toString().split(","),s)))||!0===t&&(null!==i.match.fn||/[0-9a-bA-Z]/.test(i.match.def)));o++);return i}function y(e,t,i){return F().validPositions[e]||f(C(e,t?t.slice():t,i))}function o(e){return F().validPositions[e]?F().validPositions[e]:C(e)[0]}function b(e,t){for(var i=!1,a=C(e),n=0;n<a.length;n++)if(a[n].match&&a[n].match.def===t){i=!0;break}return i}function C(D,e,t){function E(S,T,e,t){function j(e,i,t){function r(i,a){var n=0===Z.inArray(i,a.matches);return n||Z.each(a.matches,function(e,t){if(!0===t.isQuantifier&&(n=r(i,a.matches[e-1])))return!1}),n}function l(e,n,r){var s,o;if(F().validPositions[e-1]&&r&&F().tests[e])for(var t=F().validPositions[e-1].locator,i=F().tests[e][0].locator,a=0;a<r;a++)if(t[a]!==i[a])return t.slice(r+1);return(F().tests[e]||F().validPositions[e])&&Z.each(F().tests[e]||[F().validPositions[e]],function(e,t){var i=r!==te?r:t.alternation,a=t.locator[i]!==te?t.locator[i].toString().indexOf(n):-1;(o===te||a<o)&&-1!==a&&(s=t,o=a)}),s?s.locator.slice((r!==te?r:s.alternation)+1):r!==te?l(e,n):te}if(A>1e4)throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. "+F().mask;if(A===D&&e.matches===te)return I.push({match:e,locator:i.reverse(),cd:O}),!0;if(e.matches!==te){if(e.isGroup&&t!==e){if(e=j(S.matches[Z.inArray(e,S.matches)+1],i))return!0}else if(e.isOptional){var a=e;if(e=E(e,T,i,t)){if(M=I[I.length-1].match,!r(M,a))return!0;P=!0,A=D}}else if(e.isAlternator){var n,s=e,o=[],c=I.slice(),d=i.length,u=T.length>0?T.shift():-1;if(-1===u||"string"==typeof u){var p,f=A,h=T.slice(),m=[];if("string"==typeof u)m=u.split(",");else for(p=0;p<s.matches.length;p++)m.push(p);for(var v=0;v<m.length;v++){if(p=parseInt(m[v]),I=[],T=l(A,p,d)||h.slice(),!0!==(e=j(s.matches[p]||S.matches[p],[p].concat(i),t)||e)&&e!==te&&m[m.length-1]<s.matches.length){var g=Z.inArray(e,S.matches)+1;S.matches.length>g&&(e=j(S.matches[g],[g].concat(i.slice(1,i.length)),t))&&(m.push(g.toString()),Z.each(I,function(e,t){t.alternation=i.length-1}))}n=I.slice(),A=f,I=[];for(var _=0;_<n.length;_++){var y=n[_],b=!1;y.alternation=y.alternation||d;for(var $=0;$<o.length;$++){var k=o[$];if("string"!=typeof u||-1!==Z.inArray(y.locator[y.alternation].toString(),m)){if(function(e,t){return e.match.nativeDef===t.match.nativeDef||e.match.def===t.match.nativeDef||e.match.nativeDef===t.match.def}(y,k)){b=!0,y.alternation===k.alternation&&-1===k.locator[k.alternation].toString().indexOf(y.locator[y.alternation])&&(k.locator[k.alternation]=k.locator[k.alternation]+","+y.locator[y.alternation],k.alternation=y.alternation),y.match.nativeDef===k.match.def&&(y.locator[y.alternation]=k.locator[k.alternation],o.splice(o.indexOf(k),1,y));break}if(y.match.def===k.match.def){b=!1;break}if(function(e,t){return null===e.match.fn&&null!==t.match.fn&&t.match.fn.test(e.match.def,F(),D,!1,N,!1)}(y,k)||function(e,t){return null!==e.match.fn&&null!==t.match.fn&&t.match.fn.test(e.match.def.replace(/[\[\]]/g,""),F(),D,!1,N,!1)}(y,k)){y.alternation===k.alternation&&-1===y.locator[y.alternation].toString().indexOf(k.locator[k.alternation].toString().split("")[0])&&(y.na=y.na||y.locator[y.alternation].toString(),-1===y.na.indexOf(y.locator[y.alternation].toString().split("")[0])&&(y.na=y.na+","+y.locator[k.alternation].toString().split("")[0]),b=!0,y.locator[y.alternation]=k.locator[k.alternation].toString().split("")[0]+","+y.locator[y.alternation],o.splice(o.indexOf(k),0,y));break}}}b||o.push(y)}}"string"==typeof u&&(o=Z.map(o,function(e,t){if(isFinite(t)){var i=e.alternation,a=e.locator[i].toString().split(",");e.locator[i]=te,e.alternation=te;for(var n=0;n<a.length;n++)-1!==Z.inArray(a[n],m)&&(e.locator[i]!==te?(e.locator[i]+=",",e.locator[i]+=a[n]):e.locator[i]=parseInt(a[n]),e.alternation=i);if(e.locator[i]!==te)return e}})),I=c.concat(o),A=D,P=I.length>0,e=o.length>0,T=h.slice()}else e=j(s.matches[u]||S.matches[u],[u].concat(i),t);if(e)return!0}else if(e.isQuantifier&&t!==S.matches[Z.inArray(e,S.matches)-1])for(var w=e,x=T.length>0?T.shift():0;x<(isNaN(w.quantifier.max)?x+1:w.quantifier.max)&&A<=D;x++){var C=S.matches[Z.inArray(w,S.matches)-1];if(e=j(C,[x].concat(i),C)){if(M=I[I.length-1].match,M.optionalQuantifier=x>w.quantifier.min-1,r(M,C)){if(x>w.quantifier.min-1){P=!0,A=D;break}return!0}return!0}}else if(e=E(e,T,i,t))return!0}else A++}for(var i=T.length>0?T.shift():0;i<S.matches.length;i++)if(!0!==S.matches[i].isQuantifier){var a=j(S.matches[i],[i].concat(e),t);if(a&&A===D)return a;if(A>D)break}}function i(e){if(N.keepStatic&&D>0&&e.length>1+(""===e[e.length-1].match.def?1:0)&&!0!==e[0].match.optionality&&!0!==e[0].match.optionalQuantifier&&null===e[0].match.fn&&!/[0-9a-bA-Z]/.test(e[0].match.def)){if(F().validPositions[D-1]===te)return[f(e)];if(F().validPositions[D-1].alternation===e[0].alternation)return[f(e)];if(F().validPositions[D-1])return[f(e)]}return e}var M,a=F().maskToken,A=e?t:0,n=e?e.slice():[0],I=[],P=!1,O=e?e.join(""):"";if(D>-1){if(e===te){for(var r,s=D-1;(r=F().validPositions[s]||F().tests[s])===te&&s>-1;)s--;r!==te&&s>-1&&(n=function(e){var a=[];return Z.isArray(e)||(e=[e]),e.length>0&&(e[0].alternation===te?0===(a=f(e.slice()).locator.slice()).length&&(a=e[0].locator.slice()):Z.each(e,function(e,t){if(""!==t.def)if(0===a.length)a=t.locator.slice();else for(var i=0;i<a.length;i++)t.locator[i]&&-1===a[i].toString().indexOf(t.locator[i])&&(a[i]+=","+t.locator[i])})),a}(r),O=n.join(""),A=s)}if(F().tests[D]&&F().tests[D][0].cd===O)return i(F().tests[D]);for(var o=n.shift();o<a.length&&!(E(a[o],n,[o])&&A===D||A>D);o++);}return(0===I.length||P)&&I.push({match:{fn:null,cardinality:0,optionality:!0,casing:null,def:"",placeholder:""},locator:[],cd:O}),e!==te&&F().tests[D]?i(Z.extend(!0,[],I)):(F().tests[D]=Z.extend(!0,[],I),i(F().tests[D]))}function v(){return F()._buffer===te&&(F()._buffer=n(!1,1),F().buffer===te&&(F().buffer=F()._buffer.slice())),F()._buffer}function $(e){return F().buffer!==te&&!0!==e||(F().buffer=n(!0,x(),!0)),F().buffer}function S(e,t,i){var a,n;if(!0===e)w(),e=0,t=i.length;else for(a=e;a<t;a++)delete F().validPositions[a];for(n=e,a=e;a<t;a++)if(w(!0),i[a]!==N.skipOptionalPartCharacter){var r=D(n,i[a],!0,!0);!1!==r&&(w(!0),n=r.caret!==te?r.caret:r.pos+1)}}function T(e,t,i){switch(N.casing||t.casing){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase();break;case"title":var a=F().validPositions[i-1];e=0===i||a&&a.input===String.fromCharCode(ie.keyCode.SPACE)?e.toUpperCase():e.toLowerCase();break;default:if(Z.isFunction(N.casing)){var n=Array.prototype.slice.call(arguments);n.push(F().validPositions),e=N.casing.apply(this,n)}}return e}function j(e,t,i){for(var a,n=N.greedy?t:t.slice(0,1),r=!1,s=i!==te?i.split(","):[],o=0;o<s.length;o++)-1!==(a=e.indexOf(s[o]))&&e.splice(a,1);for(var l=0;l<e.length;l++)if(-1!==Z.inArray(e[l],n)){r=!0;break}return r}function D(h,e,t,k,i,a){function m(e){var t=R?e.begin-e.end>1||e.begin-e.end==1:e.end-e.begin>1||e.end-e.begin==1;return t&&0===e.begin&&e.end===F().maskLength?"full":t}function r(d,u,p){var f=!1;return Z.each(C(d),function(e,t){for(var i=t.match,a=u?1:0,n="",r=i.cardinality;r>a;r--)n+=A(d-(r-1));if(u&&(n+=u),$(!0),!1!==(f=null!=i.fn?i.fn.test(n,F(),d,p,N,m(h)):(u===i.def||u===N.skipOptionalPartCharacter)&&""!==i.def&&{c:I(d,i,!0)||i.def,pos:d})){var s=f.c!==te?f.c:u;s=s===N.skipOptionalPartCharacter&&null===i.fn?I(d,i,!0)||i.def:s;var o=d,l=$();if(f.remove!==te&&(Z.isArray(f.remove)||(f.remove=[f.remove]),Z.each(f.remove.sort(function(e,t){return t-e}),function(e,t){_(t,t+1,!0)})),f.insert!==te&&(Z.isArray(f.insert)||(f.insert=[f.insert]),Z.each(f.insert.sort(function(e,t){return e-t}),function(e,t){D(t.pos,t.c,!0,k)})),f.refreshFromBuffer){var c=f.refreshFromBuffer;if(S(!0===c?c:c.start,c.end,l),f.pos===te&&f.c===te)return f.pos=x(),!1;if((o=f.pos!==te?f.pos:d)!==d)return f=Z.extend(f,D(o,s,!0,k)),!1}else if(!0!==f&&f.pos!==te&&f.pos!==d&&(o=f.pos,S(d,o,$().slice()),o!==d))return f=Z.extend(f,D(o,s,!0)),!1;return(!0===f||f.pos!==te||f.c!==te)&&(e>0&&w(!0),v(o,Z.extend({},t,{input:T(s,i,o)}),k,m(h))||(f=!1),!1)}}),f}function v(e,t,i,a){if(a||N.insertMode&&F().validPositions[e]!==te&&i===te){var n,r=Z.extend(!0,{},F().validPositions),s=x(te,!0);for(n=e;n<=s;n++)delete F().validPositions[n];F().validPositions[e]=Z.extend(!0,{},t);var o,l=!0,c=F().validPositions,d=!1,u=F().maskLength;for(n=o=e;n<=s;n++){var p=r[n];if(p!==te)for(var f=o;f<F().maskLength&&(null===p.match.fn&&c[n]&&(!0===c[n].match.optionalQuantifier||!0===c[n].match.optionality)||null!=p.match.fn);){if(f++,!1===d&&r[f]&&r[f].match.def===p.match.def)F().validPositions[f]=Z.extend(!0,{},r[f]),F().validPositions[f].input=p.input,g(f),o=f,l=!0;else if(b(f,p.match.def)){var h=D(f,p.input,!0,!0);l=!1!==h,o=h.caret||h.insert?x():f,d=!0}else if(!(l=!0===p.generatedInput)&&f>=F().maskLength-1)break;if(F().maskLength<u&&(F().maskLength=u),l)break}if(!l)break}if(!l)return F().validPositions=Z.extend(!0,{},r),w(!0),!1}else F().validPositions[e]=Z.extend(!0,{},t);return w(!0),!0}function g(e){for(var t=e-1;t>-1&&!F().validPositions[t];t--);var i,a;for(t++;t<e;t++)F().validPositions[t]===te&&(!1===N.jitMasking||N.jitMasking>t)&&(""===(a=C(t,y(t-1).locator,t-1).slice())[a.length-1].match.def&&a.pop(),(i=f(a))&&(i.match.def===N.radixPointDefinitionSymbol||!E(t,!0)||Z.inArray(N.radixPoint,$())<t&&i.match.fn&&i.match.fn.test(I(t),F(),t,!1,N))&&!1!==(s=r(t,I(t,i.match,!0)||(null==i.match.fn?i.match.def:""!==I(t)?I(t):$()[t]),!0))&&(F().validPositions[s.pos||t].generatedInput=!0))}t=!0===t;var n=h;h.begin!==te&&(n=R&&!m(h)?h.end:h.begin);var s=!0,o=Z.extend(!0,{},F().validPositions);if(Z.isFunction(N.preValidation)&&!t&&!0!==k&&!0!==a&&(s=N.preValidation($(),n,e,m(h),N)),!0===s){if(g(n),m(h)&&(P(te,ie.keyCode.DELETE,h,!0,!0),n=F().p),n<F().maskLength&&(L===te||n<L)&&(s=r(n,e,t),(!t||!0===k)&&!1===s&&!0!==a)){var l=F().validPositions[n];if(!l||null!==l.match.fn||l.match.def!==e&&e!==N.skipOptionalPartCharacter){if((N.insertMode||F().validPositions[M(n)]===te)&&!E(n,!0))for(var c=n+1,d=M(n);c<=d;c++)if(!1!==(s=r(c,e,t))){!function(e,t){var i=F().validPositions[t];if(i)for(var s=i.locator,o=s.length,a=e;a<t;a++)if(F().validPositions[a]===te&&!E(a,!0)){var n=C(a).slice(),l=f(n,!0),c=-1;""===n[n.length-1].match.def&&n.pop(),Z.each(n,function(e,t){for(var i=0;i<o;i++){if(t.locator[i]===te||!j(t.locator[i].toString().split(","),s[i].toString().split(","),t.na)){var a=s[i],n=l.locator[i],r=t.locator[i];a-n>Math.abs(a-r)&&(l=t);break}c<i&&(c=i,l=t)}}),(l=Z.extend({},l,{input:I(a,l.match,!0)||l.match.def})).generatedInput=!0,v(a,l,!0),F().validPositions[t]=te,r(t,i.input,!0)}}(n,s.pos!==te?s.pos:c),n=c;break}}else s={caret:M(n)}}!1===s&&N.keepStatic&&!t&&!0!==i&&(s=function(d,u,p){var e,f,t,i,h,m,v,g,_=Z.extend(!0,{},F().validPositions),y=!1,a=x();for(i=F().validPositions[a];a>=0;a--)if((t=F().validPositions[a])&&t.alternation!==te){if(e=a,f=F().validPositions[e].alternation,i.locator[t.alternation]!==t.locator[t.alternation])break;i=t}if(f!==te){g=parseInt(e);var b=i.locator[i.alternation||f]!==te?i.locator[i.alternation||f]:v[0];b.length>0&&(b=b.split(",")[0]);var $=F().validPositions[g],n=F().validPositions[g-1];Z.each(C(g,n?n.locator:te,g-1),function(e,t){v=t.locator[f]?t.locator[f].toString().split(","):[];for(var i=0;i<v.length;i++){var a=[],n=0,r=0,s=!1;if(b<v[i]&&(t.na===te||-1===Z.inArray(v[i],t.na.split(","))||-1===Z.inArray(b.toString(),v))){F().validPositions[g]=Z.extend(!0,{},t);var o=F().validPositions[g].locator;for(F().validPositions[g].locator[f]=parseInt(v[i]),null==t.match.fn?($.input!==t.match.def&&(s=!0,!0!==$.generatedInput&&a.push($.input)),r++,F().validPositions[g].generatedInput=!/[0-9a-bA-Z]/.test(t.match.def),F().validPositions[g].input=t.match.def):F().validPositions[g].input=$.input,h=g+1;h<x(te,!0)+1;h++)(m=F().validPositions[h])&&!0!==m.generatedInput&&/[0-9a-bA-Z]/.test(m.input)?a.push(m.input):h<d&&n++,delete F().validPositions[h];for(s&&a[0]===t.match.def&&a.shift(),w(!0),y=!0;a.length>0;){var l=a.shift();if(l!==N.skipOptionalPartCharacter&&!(y=D(x(te,!0)+1,l,!1,k,!0)))break}if(y){F().validPositions[g].locator=o;var c=x(d)+1;for(h=g+1;h<x()+1;h++)((m=F().validPositions[h])===te||null==m.match.fn)&&h<d+(r-n)&&r++;y=D((d+=r-n)>c?c:d,u,p,k,!0)}if(y)return!1;w(),F().validPositions=Z.extend(!0,{},_)}}})}return y}(n,e,t)),!0===s&&(s={pos:n})}if(Z.isFunction(N.postValidation)&&!1!==s&&!t&&!0!==k&&!0!==a){var u=N.postValidation($(!0),s,N);if(u.refreshFromBuffer&&u.buffer){var p=u.refreshFromBuffer;S(!0===p?p:p.start,p.end,u.buffer)}s=!0===u?s:u}return s&&s.pos===te&&(s.pos=n),!1!==s&&!0!==a||(w(!0),F().validPositions=Z.extend(!0,{},o)),s}function E(e,t){var i=y(e).match;if(""===i.def&&(i=o(e).match),null!=i.fn)return i.fn;if(!0!==t&&e>-1){var a=C(e);return a.length>1+(""===a[a.length-1].match.def?1:0)}return!1}function M(e,t){var i=F().maskLength;if(e>=i)return i;var a=e;for(C(i+1).length>1&&(n(!0,i+1,!0),i=F().maskLength);++a<i&&(!0===t&&(!0!==o(a).match.newBlockMarker||!E(a))||!0!==t&&!E(a)););return a}function g(e,t){var i,a=e;if(a<=0)return 0;for(;--a>0&&(!0===t&&!0!==o(a).match.newBlockMarker||!0!==t&&!E(a)&&((i=C(a)).length<2||2===i.length&&""===i[1].match.def)););return a}function A(e){return F().validPositions[e]===te?I(e):F().validPositions[e].input}function k(e,t,i,a,n){if(a&&Z.isFunction(N.onBeforeWrite)){var r=N.onBeforeWrite.call(z,a,t,i,N);if(r){if(r.refreshFromBuffer){var s=r.refreshFromBuffer;S(!0===s?s:s.start,s.end,r.buffer||t),t=$(!0)}i!==te&&(i=r.caret!==te?r.caret:i)}}e!==te&&(e.inputmask._valueSet(t.join("")),i===te||a!==te&&"blur"===a.type?u(e,i,0===t.length):oe&&a&&"input"===a.type?setTimeout(function(){h(e,i)},0):h(e,i),!0===n&&(q=!0,Z(e).trigger("input")))}function I(e,t,i){if((t=t||o(e).match).placeholder!==te||!0===i)return Z.isFunction(t.placeholder)?t.placeholder(N):t.placeholder;if(null===t.fn){if(e>-1&&F().validPositions[e]===te){var a,n=C(e),r=[];if(n.length>1+(""===n[n.length-1].match.def?1:0))for(var s=0;s<n.length;s++)if(!0!==n[s].match.optionality&&!0!==n[s].match.optionalQuantifier&&(null===n[s].match.fn||a===te||!1!==n[s].match.fn.test(a.match.def,F(),e,!0,N))&&(r.push(n[s]),null===n[s].match.fn&&(a=n[s]),r.length>1&&/[0-9a-bA-Z]/.test(r[0].match.def)))return N.placeholder.charAt(e%N.placeholder.length)}return t.def}return N.placeholder.charAt(e%N.placeholder.length)}function d(c,e,d,t,i){function u(e,t){return-1!==v().slice(e,M(e)).join("").indexOf(t)&&!E(e)&&o(e).match.nativeDef===t.charAt(t.length-1)}var p=t.slice(),f="",h=-1,m=te;if(w(),d||!0===N.autoUnmask)h=M(h);else{var a=v().slice(0,M(-1)).join(""),n=p.join("").match(new RegExp("^"+ie.escapeRegex(a),"g"));n&&n.length>0&&(p.splice(0,n.length*a.length),h=M(h))}if(-1===h?(F().p=M(h),h=0):F().p=h,Z.each(p,function(e,t){if(t!==te)if(F().validPositions[e]===te&&p[e]===I(e)&&E(e,!0)&&!1===D(e,p[e],!0,te,te,!0))F().p++;else{var i=new Z.Event("_checkval");i.which=t.charCodeAt(0),f+=t;var a=x(te,!0),n=F().validPositions[a],r=y(a+1,n?n.locator.slice():te,a);if(!u(h,f)||d||N.autoUnmask){var s=d?e:null==r.match.fn&&r.match.optionality&&a+1<F().p?a+1:F().p;m=X.keypressEvent.call(c,i,!0,!1,d,s),h=s+1,f=""}else m=X.keypressEvent.call(c,i,!0,!1,!0,a+1);if(!1!==m&&!d&&Z.isFunction(N.onBeforeWrite)){var o=m;if(m=N.onBeforeWrite.call(z,i,$(),m.forwardPosition,N),(m=Z.extend(o,m))&&m.refreshFromBuffer){var l=m.refreshFromBuffer;S(!0===l?l:l.start,l.end,m.buffer),w(!0),m.caret&&(F().p=m.caret,m.forwardPosition=m.caret)}}}}),e){var r=te;ee.activeElement===c&&m&&(r=N.numericInput?g(m.forwardPosition):m.forwardPosition),k(c,$(),r,i||new Z.Event("checkval"),i&&"input"===i.type)}}function i(e){if(e){if(e.inputmask===te)return e.value;e.inputmask&&e.inputmask.refreshValue&&X.setValueEvent.call(e)}var t=[],i=F().validPositions;for(var a in i)i[a].match&&null!=i[a].match.fn&&t.push(i[a].input);var n=0===t.length?"":(R?t.reverse():t).join("");if(Z.isFunction(N.onUnMask)){var r=(R?$().slice().reverse():$()).join("");n=N.onUnMask.call(z,r,n,N)}return n}function h(e,t,i,a){function n(e){return!0===a||!R||"number"!=typeof e||N.greedy&&""===N.placeholder||(e=$().join("").length-e),e}var r;if(t===te)return e.setSelectionRange?(t=e.selectionStart,i=e.selectionEnd):J.getSelection?(r=J.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode!==e&&r.commonAncestorContainer!==e||(t=r.startOffset,i=r.endOffset):ee.selection&&ee.selection.createRange&&(i=(t=0-(r=ee.selection.createRange()).duplicate().moveStart("character",-e.inputmask._valueGet().length))+r.text.length),{begin:n(t),end:n(i)};if(t.begin!==te&&(i=t.end,t=t.begin),"number"==typeof t){t=n(t),i="number"==typeof(i=n(i))?i:t;var s=parseInt(((e.ownerDocument.defaultView||J).getComputedStyle?(e.ownerDocument.defaultView||J).getComputedStyle(e,null):e.currentStyle).fontSize)*i;if(e.scrollLeft=s>e.scrollWidth?s:0,ne||!1!==N.insertMode||t!==i||i++,e.setSelectionRange)e.selectionStart=t,e.selectionEnd=i;else if(J.getSelection){if(r=ee.createRange(),e.firstChild===te||null===e.firstChild){var o=ee.createTextNode("");e.appendChild(o)}r.setStart(e.firstChild,t<e.inputmask._valueGet().length?t:e.inputmask._valueGet().length),r.setEnd(e.firstChild,i<e.inputmask._valueGet().length?i:e.inputmask._valueGet().length),r.collapse(!0);var l=J.getSelection();l.removeAllRanges(),l.addRange(r)}else e.createTextRange&&((r=e.createTextRange()).collapse(!0),r.moveEnd("character",i),r.moveStart("character",t),r.select());u(e,{begin:t,end:i})}}function s(e){var t,i,a=$(),n=a.length,r=x(),s={},o=F().validPositions[r],l=o!==te?o.locator.slice():te;for(t=r+1;t<a.length;t++)l=(i=y(t,l,t-1)).locator.slice(),s[t]=Z.extend(!0,{},i);var c=o&&o.alternation!==te?o.locator[o.alternation]:te;for(t=n-1;t>r&&(((i=s[t]).match.optionality||i.match.optionalQuantifier&&i.match.newBlockMarker||c&&(c!==s[t].locator[o.alternation]&&null!=i.match.fn||null===i.match.fn&&i.locator[o.alternation]&&j(i.locator[o.alternation].toString().split(","),c.toString().split(","))&&""!==C(t)[0].def))&&a[t]===I(t,i.match));t--)n--;return e?{l:n,def:s[n]?s[n].match:te}:n}function l(e){for(var t,i=s(),a=e.length,n=F().validPositions[x()];i<a&&!E(i,!0)&&(t=n!==te?y(i,n.locator.slice(""),n):o(i))&&!0!==t.match.optionality&&(!0!==t.match.optionalQuantifier&&!0!==t.match.newBlockMarker||i+1===a&&""===(n!==te?y(i+1,n.locator.slice(""),n):o(i+1)).match.def);)i++;for(;(t=F().validPositions[i-1])&&t&&t.match.optionality&&t.input===N.skipOptionalPartCharacter;)i--;return e.splice(i),e}function m(e){if(Z.isFunction(N.isComplete))return N.isComplete(e,N);if("*"===N.repeat)return te;var t=!1,i=s(!0),a=g(i.l);if(i.def===te||i.def.newBlockMarker||i.def.optionality||i.def.optionalQuantifier){t=!0;for(var n=0;n<=a;n++){var r=y(n).match;if(null!==r.fn&&F().validPositions[n]===te&&!0!==r.optionality&&!0!==r.optionalQuantifier||null===r.fn&&e[n]!==I(n,r)){t=!1;break}}}return t}function P(s,e,t,i,a){if((N.numericInput||R)&&(e===ie.keyCode.BACKSPACE?e=ie.keyCode.DELETE:e===ie.keyCode.DELETE&&(e=ie.keyCode.BACKSPACE),R)){var n=t.end;t.end=t.begin,t.begin=n}e===ie.keyCode.BACKSPACE&&(t.end-t.begin<1||!1===N.insertMode)?(t.begin=g(t.begin),F().validPositions[t.begin]!==te&&F().validPositions[t.begin].input===N.groupSeparator&&t.begin--):e===ie.keyCode.DELETE&&t.begin===t.end&&(t.end=E(t.end,!0)&&F().validPositions[t.end]&&F().validPositions[t.end].input!==N.radixPoint?t.end+1:M(t.end)+1,F().validPositions[t.begin]!==te&&F().validPositions[t.begin].input===N.groupSeparator&&t.end++),_(t.begin,t.end,!1,i),!0!==i&&function(){if(N.keepStatic){for(var e=[],t=x(-1,!0),i=Z.extend(!0,{},F().validPositions),a=F().validPositions[t];t>=0;t--){var n=F().validPositions[t];if(n){if(!0!==n.generatedInput&&/[0-9a-bA-Z]/.test(n.input)&&e.push(n.input),delete F().validPositions[t],n.alternation!==te&&n.locator[n.alternation]!==a.locator[n.alternation])break;a=n}}if(t>-1)for(F().p=M(x(-1,!0));e.length>0;){var r=new Z.Event("keypress");r.which=e.pop().charCodeAt(0),X.keypressEvent.call(s,r,!0,!1,!1,F().p)}else F().validPositions=Z.extend(!0,{},i)}}();var r=x(t.begin,!0);if(r<t.begin)F().p=M(r);else if(!0!==i&&(F().p=t.begin,!0!==a))for(;F().p<r&&F().validPositions[F().p]===te;)F().p++}function r(c){function t(e){var t,i=ee.createElement("span");for(var a in d)isNaN(a)&&-1!==a.indexOf("font")&&(i.style[a]=d[a]);i.style.textTransform=d.textTransform,i.style.letterSpacing=d.letterSpacing,i.style.position="absolute",i.style.height="auto",i.style.width="auto",i.style.visibility="hidden",i.style.whiteSpace="nowrap",ee.body.appendChild(i);var n,r=c.inputmask._valueGet(),s=0;for(t=0,n=r.length;t<=n;t++){if(i.innerHTML+=r.charAt(t)||"_",i.offsetWidth>=e){var o=e-s,l=i.offsetWidth-e;i.innerHTML=r.charAt(t),t=(o-=i.offsetWidth/3)<l?t-1:t;break}s=i.offsetWidth}return ee.body.removeChild(i),t}var d=(c.ownerDocument.defaultView||J).getComputedStyle(c,null),e=ee.createElement("div");e.style.width=d.width,e.style.textAlign=d.textAlign,(H=ee.createElement("div")).className="im-colormask",c.parentNode.insertBefore(H,c),c.parentNode.removeChild(c),H.appendChild(e),H.appendChild(c),c.style.left=e.offsetLeft+"px",Z(c).on("click",function(e){return h(c,t(e.clientX)),X.clickEvent.call(c,[e])}),Z(c).on("keydown",function(e){e.shiftKey||!1===N.insertMode||setTimeout(function(){u(c)},0)})}function u(t,i,e){function a(){c||null!==r.fn&&s.input!==te?c&&(null!==r.fn&&s.input!==te||""===r.def)&&(c=!1,l+="</span>"):(c=!0,l+="<span class='im-static'>")}function n(e){!0!==e&&d!==i.begin||ee.activeElement!==t||(l+="<span class='im-caret' style='border-right-width: 1px;border-right-style: solid;'></span>")}var r,s,o,l="",c=!1,d=0;if(H!==te){var u=$();if(i===te?i=h(t):i.begin===te&&(i={begin:i,end:i}),!0!==e){var p=x();do{n(),F().validPositions[d]?(s=F().validPositions[d],r=s.match,o=s.locator.slice(),a(),l+=u[d]):(s=y(d,o,d-1),r=s.match,o=s.locator.slice(),(!1===N.jitMasking||d<p||"number"==typeof N.jitMasking&&isFinite(N.jitMasking)&&N.jitMasking>d)&&(a(),l+=I(d,r))),d++}while((L===te||d<L)&&(null!==r.fn||""!==r.def)||p>d||c);-1===l.indexOf("im-caret")&&n(!0),c&&a()}var f=H.getElementsByTagName("div")[0];f.innerHTML=l,t.inputmask.positionColorMask(t,f)}}t=t||this.maskset,N=N||this.opts;var O,c,L,H,z=this,p=this.el,R=this.isRTL,B=!1,q=!1,W=!1,U=!1,Y={on:function(e,t,r){var i=function(e){if(this.inputmask===te&&"FORM"!==this.nodeName){var t=Z.data(this,"_inputmask_opts");t?new ie(t).mask(this):Y.off(this)}else{if("setvalue"===e.type||"FORM"===this.nodeName||!(this.disabled||this.readOnly&&!("keydown"===e.type&&e.ctrlKey&&67===e.keyCode||!1===N.tabThrough&&e.keyCode===ie.keyCode.TAB))){switch(e.type){case"input":if(!0===q)return q=!1,e.preventDefault();break;case"keydown":B=!1,q=!1;break;case"keypress":if(!0===B)return e.preventDefault();B=!0;break;case"click":if(re||se){var i=this,a=arguments;return setTimeout(function(){r.apply(i,a)},0),!1}}var n=r.apply(this,arguments);return!1===n&&(e.preventDefault(),e.stopPropagation()),n}e.preventDefault()}};e.inputmask.events[t]=e.inputmask.events[t]||[],e.inputmask.events[t].push(i),-1!==Z.inArray(t,["submit","reset"])?null!==e.form&&Z(e.form).on(t,i):Z(e).on(t,i)},off:function(a,e){if(a.inputmask&&a.inputmask.events){var t;e?(t=[])[e]=a.inputmask.events[e]:t=a.inputmask.events,Z.each(t,function(e,t){for(;t.length>0;){var i=t.pop();-1!==Z.inArray(e,["submit","reset"])?null!==a.form&&Z(a.form).off(e,i):Z(a).off(e,i)}delete a.inputmask.events[e]})}}},X={keydownEvent:function(e){var t=this,i=Z(t),a=e.keyCode,n=h(t);if(a===ie.keyCode.BACKSPACE||a===ie.keyCode.DELETE||se&&a===ie.keyCode.BACKSPACE_SAFARI||e.ctrlKey&&a===ie.keyCode.X&&!function(e){var t=ee.createElement("input"),i="on"+e,a=i in t;return a||(t.setAttribute(i,"return;"),a="function"==typeof t[i]),t=null,a}("cut"))e.preventDefault(),P(t,a,n),k(t,$(!0),F().p,e,t.inputmask._valueGet()!==$().join("")),t.inputmask._valueGet()===v().join("")?i.trigger("cleared"):!0===m($())&&i.trigger("complete");else if(a===ie.keyCode.END||a===ie.keyCode.PAGE_DOWN){e.preventDefault();var r=M(x());N.insertMode||r!==F().maskLength||e.shiftKey||r--,h(t,e.shiftKey?n.begin:r,r,!0)}else a===ie.keyCode.HOME&&!e.shiftKey||a===ie.keyCode.PAGE_UP?(e.preventDefault(),h(t,0,e.shiftKey?n.begin:0,!0)):(N.undoOnEscape&&a===ie.keyCode.ESCAPE||90===a&&e.ctrlKey)&&!0!==e.altKey?(d(t,!0,!1,O.split("")),i.trigger("click")):a!==ie.keyCode.INSERT||e.shiftKey||e.ctrlKey?!0===N.tabThrough&&a===ie.keyCode.TAB?(!0===e.shiftKey?(null===o(n.begin).match.fn&&(n.begin=M(n.begin)),n.end=g(n.begin,!0),n.begin=g(n.end,!0)):(n.begin=M(n.begin,!0),n.end=M(n.begin,!0),n.end<F().maskLength&&n.end--),n.begin<F().maskLength&&(e.preventDefault(),h(t,n.begin,n.end))):e.shiftKey||!1===N.insertMode&&(a===ie.keyCode.RIGHT?setTimeout(function(){var e=h(t);h(t,e.begin)},0):a===ie.keyCode.LEFT&&setTimeout(function(){var e=h(t);h(t,R?e.begin+1:e.begin-1)},0)):(N.insertMode=!N.insertMode,h(t,N.insertMode||n.begin!==F().maskLength?n.begin:n.begin-1));N.onKeyDown.call(this,e,$(),h(t).begin,N),W=-1!==Z.inArray(a,N.ignorables)},keypressEvent:function(e,t,i,a,n){var r=this,s=Z(r),o=e.which||e.charCode||e.keyCode;if(!(!0===t||e.ctrlKey&&e.altKey)&&(e.ctrlKey||e.metaKey||W))return o===ie.keyCode.ENTER&&O!==$().join("")&&(O=$().join(""),setTimeout(function(){s.trigger("change")},0)),!0;if(o){46===o&&!1===e.shiftKey&&""!==N.radixPoint&&(o=N.radixPoint.charCodeAt(0));var l,c=t?{begin:n,end:n}:h(r),d=String.fromCharCode(o);F().writeOutBuffer=!0;var u=D(c,d,a);if(!1!==u&&(w(!0),l=u.caret!==te?u.caret:t?u.pos+1:M(u.pos),F().p=l),!1!==i&&(setTimeout(function(){N.onKeyValidation.call(r,o,u,N)},0),F().writeOutBuffer&&!1!==u)){var p=$();k(r,p,N.numericInput&&u.caret===te?g(l):l,e,!0!==t),!0!==t&&setTimeout(function(){!0===m(p)&&s.trigger("complete")},0)}if(e.preventDefault(),t)return!1!==u&&(u.forwardPosition=l),u}},pasteEvent:function(e){var t,i=this,a=e.originalEvent||e,n=Z(i),r=i.inputmask._valueGet(!0),s=h(i);R&&(t=s.end,s.end=s.begin,s.begin=t);var o=r.substr(0,s.begin),l=r.substr(s.end,r.length);if(o===(R?v().reverse():v()).slice(0,s.begin).join("")&&(o=""),l===(R?v().reverse():v()).slice(s.end).join("")&&(l=""),R&&(t=o,o=l,l=t),J.clipboardData&&J.clipboardData.getData)r=o+J.clipboardData.getData("Text")+l;else{if(!a.clipboardData||!a.clipboardData.getData)return!0;r=o+a.clipboardData.getData("text/plain")+l}var c=r;if(Z.isFunction(N.onBeforePaste)){if(!1===(c=N.onBeforePaste.call(z,r,N)))return e.preventDefault();c||(c=r)}return d(i,!1,!1,R?c.split("").reverse():c.toString().split("")),k(i,$(),M(x()),e,O!==$().join("")),!0===m($())&&n.trigger("complete"),e.preventDefault()},inputFallBackEvent:function(e){var a=this,t=a.inputmask._valueGet();if($().join("")!==t){var i=h(a);if(!1===function(e,t,i){if("."===t.charAt(i.begin-1)&&""!==N.radixPoint&&((t=t.split(""))[i.begin-1]=N.radixPoint.charAt(0),t=t.join("")),t.charAt(i.begin-1)===N.radixPoint&&t.length>$().length){var a=new Z.Event("keypress");return a.which=N.radixPoint.charCodeAt(0),X.keypressEvent.call(e,a,!0,!0,!1,i.begin-1),!1}}(a,t,i))return!1;if(t=t.replace(new RegExp("("+ie.escapeRegex(v().join(""))+")*"),""),!1===function(e,t,i){if(re){var a=t.replace($().join(""),"");if(1===a.length){var n=new Z.Event("keypress");return n.which=a.charCodeAt(0),X.keypressEvent.call(e,n,!0,!0,!1,F().validPositions[i.begin-1]?i.begin:i.begin-1),!1}}}(a,t,i))return!1;i.begin>t.length&&(h(a,t.length),i=h(a));var n=$().join(""),r=t.substr(0,i.begin),s=t.substr(i.begin),o=n.substr(0,i.begin),l=n.substr(i.begin),c=i,d="",u=!1;if(r!==o){c.begin=0;for(var p=(u=r.length>=o.length)?r.length:o.length,f=0;r.charAt(f)===o.charAt(f)&&f<p;f++)c.begin++;u&&(d+=r.slice(c.begin,c.end))}s!==l&&(s.length>l.length?u&&(c.end=c.begin):s.length<l.length?c.end+=l.length-s.length:s.charAt(0)!==l.charAt(0)&&c.end++),k(a,$(),c),d.length>0?Z.each(d.split(""),function(e,t){var i=new Z.Event("keypress");i.which=t.charCodeAt(0),W=!1,X.keypressEvent.call(a,i)}):(c.begin===c.end-1&&h(a,g(c.begin+1),c.end),e.keyCode=ie.keyCode.DELETE,X.keydownEvent.call(a,e)),e.preventDefault()}},setValueEvent:function(e){this.inputmask.refreshValue=!1;var t=this,i=t.inputmask._valueGet(!0);Z.isFunction(N.onBeforeMask)&&(i=N.onBeforeMask.call(z,i,N)||i),i=i.split(""),d(t,!0,!1,R?i.reverse():i),O=$().join(""),(N.clearMaskOnLostFocus||N.clearIncomplete)&&t.inputmask._valueGet()===v().join("")&&t.inputmask._valueSet("")},focusEvent:function(e){var t=this,i=t.inputmask._valueGet();N.showMaskOnFocus&&(!N.showMaskOnHover||N.showMaskOnHover&&""===i)&&(t.inputmask._valueGet()!==$().join("")?k(t,$(),M(x())):!1===U&&h(t,M(x()))),!0===N.positionCaretOnTab&&!1===U&&""!==i&&(k(t,$(),h(t)),X.clickEvent.apply(t,[e,!0])),O=$().join("")},mouseleaveEvent:function(e){var t=this;if(U=!1,N.clearMaskOnLostFocus&&ee.activeElement!==t){var i=$().slice(),a=t.inputmask._valueGet();a!==t.getAttribute("placeholder")&&""!==a&&(-1===x()&&a===v().join("")?i=[]:l(i),k(t,i))}},clickEvent:function(e,c){function d(e){if(""!==N.radixPoint){var t=F().validPositions;if(t[e]===te||t[e].input===I(e)){if(e<M(-1))return!0;var i=Z.inArray(N.radixPoint,$());if(-1!==i){for(var a in t)if(i<a&&t[a].input!==I(a))return!1;return!0}}}return!1}var u=this;setTimeout(function(){if(ee.activeElement===u){var e=h(u);if(c&&(R?e.end=e.begin:e.begin=e.end),e.begin===e.end)switch(N.positionCaretOnClick){case"none":break;case"radixFocus":if(d(e.begin)){var t=$().join("").indexOf(N.radixPoint);h(u,N.numericInput?M(t):t);break}default:var i=e.begin,a=x(i,!0),n=M(a);if(i<n)h(u,E(i,!0)||E(i-1,!0)?i:M(i));else{var r=F().validPositions[a],s=y(n,r?r.match.locator:te,r),o=I(n,s.match);if(""!==o&&$()[n]!==o&&!0!==s.match.optionalQuantifier&&!0!==s.match.newBlockMarker||!E(n,!0)&&s.match.def===o){var l=M(n);(i>=l||i===n)&&(n=l)}h(u,n)}}}},0)},dblclickEvent:function(e){var t=this;setTimeout(function(){h(t,0,M(x()))},0)},cutEvent:function(e){var t=this,i=Z(t),a=h(t),n=e.originalEvent||e,r=J.clipboardData||n.clipboardData,s=R?$().slice(a.end,a.begin):$().slice(a.begin,a.end);r.setData("text",R?s.reverse().join(""):s.join("")),ee.execCommand&&ee.execCommand("copy"),P(t,ie.keyCode.DELETE,a),k(t,$(),F().p,e,O!==$().join("")),t.inputmask._valueGet()===v().join("")&&i.trigger("cleared")},blurEvent:function(e){var t=Z(this),i=this;if(i.inputmask){var a=i.inputmask._valueGet(),n=$().slice();""!==a&&(N.clearMaskOnLostFocus&&(-1===x()&&a===v().join("")?n=[]:l(n)),!1===m(n)&&(setTimeout(function(){t.trigger("incomplete")},0),N.clearIncomplete&&(w(),n=N.clearMaskOnLostFocus?[]:v().slice())),k(i,n,te,e)),O!==$().join("")&&(O=n.join(""),t.trigger("change"))}},mouseenterEvent:function(e){var t=this;U=!0,ee.activeElement!==t&&N.showMaskOnHover&&t.inputmask._valueGet()!==$().join("")&&k(t,$())},submitEvent:function(e){O!==$().join("")&&c.trigger("change"),N.clearMaskOnLostFocus&&-1===x()&&p.inputmask._valueGet&&p.inputmask._valueGet()===v().join("")&&p.inputmask._valueSet(""),N.removeMaskOnSubmit&&(p.inputmask._valueSet(p.inputmask.unmaskedvalue(),!0),setTimeout(function(){k(p,$())},0))},resetEvent:function(e){p.inputmask.refreshValue=!0,setTimeout(function(){c.trigger("setvalue")},0)}};ie.prototype.positionColorMask=function(e,t){e.style.left=t.offsetLeft+"px"};var a;if(e!==te)switch(e.action){case"isComplete":return p=e.el,m($());case"unmaskedvalue":return p!==te&&e.value===te||(a=e.value,a=(Z.isFunction(N.onBeforeMask)?N.onBeforeMask.call(z,a,N)||a:a).split(""),d(te,!1,!1,R?a.reverse():a),Z.isFunction(N.onBeforeWrite)&&N.onBeforeWrite.call(z,te,$(),0,N)),i(p);case"mask":!function(e){Y.off(e);var t=function(e,s){var t=e.getAttribute("type"),i="INPUT"===e.tagName&&-1!==Z.inArray(t,s.supportsInputType)||e.isContentEditable||"TEXTAREA"===e.tagName;if(!i)if("INPUT"===e.tagName){var a=ee.createElement("input");a.setAttribute("type",t),i="text"===a.type,a=null}else i="partial";return!1!==i?function(e){function t(){return this.inputmask?this.inputmask.opts.autoUnmask?this.inputmask.unmaskedvalue():-1!==x()||!0!==s.nullable?ee.activeElement===this&&s.clearMaskOnLostFocus?(R?l($().slice()).reverse():l($().slice())).join(""):a.call(this):"":a.call(this)}function i(e){n.call(this,e),this.inputmask&&Z(this).trigger("setvalue")}var a,n;if(!e.inputmask.__valueGet){if(!0!==s.noValuePatching){if(Object.getOwnPropertyDescriptor){"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===le("test".__proto__)?function(e){return e.__proto__}:function(e){return e.constructor.prototype});var r=Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(e),"value"):te;r&&r.get&&r.set?(a=r.get,n=r.set,Object.defineProperty(e,"value",{get:t,set:i,configurable:!0})):"INPUT"!==e.tagName&&(a=function(){return this.textContent},n=function(e){this.textContent=e},Object.defineProperty(e,"value",{get:t,set:i,configurable:!0}))}else ee.__lookupGetter__&&e.__lookupGetter__("value")&&(a=e.__lookupGetter__("value"),n=e.__lookupSetter__("value"),e.__defineGetter__("value",t),e.__defineSetter__("value",i));e.inputmask.__valueGet=a,e.inputmask.__valueSet=n}e.inputmask._valueGet=function(e){return R&&!0!==e?a.call(this.el).split("").reverse().join(""):a.call(this.el)},e.inputmask._valueSet=function(e,t){n.call(this.el,null===e||e===te?"":!0!==t&&R?e.split("").reverse().join(""):e)},a===te&&(a=function(){return this.value},n=function(e){this.value=e},function(e){if(Z.valHooks&&(Z.valHooks[e]===te||!0!==Z.valHooks[e].inputmaskpatch)){var i=Z.valHooks[e]&&Z.valHooks[e].get?Z.valHooks[e].get:function(e){return e.value},n=Z.valHooks[e]&&Z.valHooks[e].set?Z.valHooks[e].set:function(e,t){return e.value=t,e};Z.valHooks[e]={get:function(e){if(e.inputmask){if(e.inputmask.opts.autoUnmask)return e.inputmask.unmaskedvalue();var t=i(e);return-1!==x(te,te,e.inputmask.maskset.validPositions)||!0!==s.nullable?t:""}return i(e)},set:function(e,t){var i,a=Z(e);return i=n(e,t),e.inputmask&&a.trigger("setvalue"),i},inputmaskpatch:!0}}}(e.type),function(e){Y.on(e,"mouseenter",function(e){var t=Z(this);this.inputmask._valueGet()!==$().join("")&&t.trigger("setvalue")})}(e))}}(e):e.inputmask=te,i}(e,N);if(!1!==t&&(p=e,c=Z(p),-1===(L=p!==te?p.maxLength:te)&&(L=te),!0===N.colorMask&&r(p),oe&&(p.hasOwnProperty("inputmode")&&(p.inputmode=N.inputmode,p.setAttribute("inputmode",N.inputmode)),"rtfm"===N.androidHack&&(!0!==N.colorMask&&r(p),p.type="password")),!0===t&&(Y.on(p,"submit",X.submitEvent),Y.on(p,"reset",X.resetEvent),Y.on(p,"mouseenter",X.mouseenterEvent),Y.on(p,"blur",X.blurEvent),Y.on(p,"focus",X.focusEvent),Y.on(p,"mouseleave",X.mouseleaveEvent),!0!==N.colorMask&&Y.on(p,"click",X.clickEvent),Y.on(p,"dblclick",X.dblclickEvent),Y.on(p,"paste",X.pasteEvent),Y.on(p,"dragdrop",X.pasteEvent),Y.on(p,"drop",X.pasteEvent),Y.on(p,"cut",X.cutEvent),Y.on(p,"complete",N.oncomplete),Y.on(p,"incomplete",N.onincomplete),Y.on(p,"cleared",N.oncleared),oe||!0===N.inputEventOnly?p.removeAttribute("maxLength"):(Y.on(p,"keydown",X.keydownEvent),Y.on(p,"keypress",X.keypressEvent)),Y.on(p,"compositionstart",Z.noop),Y.on(p,"compositionupdate",Z.noop),Y.on(p,"compositionend",Z.noop),Y.on(p,"keyup",Z.noop),Y.on(p,"input",X.inputFallBackEvent),Y.on(p,"beforeinput",Z.noop)),Y.on(p,"setvalue",X.setValueEvent),O=v().join(""),""!==p.inputmask._valueGet(!0)||!1===N.clearMaskOnLostFocus||ee.activeElement===p)){var i=Z.isFunction(N.onBeforeMask)?N.onBeforeMask.call(z,p.inputmask._valueGet(!0),N)||p.inputmask._valueGet(!0):p.inputmask._valueGet(!0);""!==i&&d(p,!0,!1,R?i.split("").reverse():i.split(""));var a=$().slice();O=a.join(""),!1===m(a)&&N.clearIncomplete&&w(),N.clearMaskOnLostFocus&&ee.activeElement!==p&&(-1===x()?a=[]:l(a)),k(p,a),ee.activeElement===p&&h(p,M(x()))}}(p);break;case"format":return a=(Z.isFunction(N.onBeforeMask)?N.onBeforeMask.call(z,e.value,N)||e.value:e.value).split(""),d(te,!0,!1,R?a.reverse():a),e.metadata?{value:R?$().slice().reverse().join(""):$().join(""),metadata:ae.call(this,{action:"getmetadata"},t,N)}:R?$().slice().reverse().join(""):$().join("");case"isValid":e.value?(a=e.value.split(""),d(te,!0,!0,R?a.reverse():a)):e.value=$().join("");for(var G=$(),V=s(),K=G.length-1;K>V&&!E(K);K--);return G.splice(V,K+1-V),m(G)&&e.value===$().join("");case"getemptymask":return v().join("");case"remove":if(p&&p.inputmask){c=Z(p),p.inputmask._valueSet(N.autoUnmask?i(p):p.inputmask._valueGet(!0)),Y.off(p);Object.getOwnPropertyDescriptor&&Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(p),"value")&&p.inputmask.__valueGet&&Object.defineProperty(p,"value",{get:p.inputmask.__valueGet,set:p.inputmask.__valueSet,configurable:!0}):ee.__lookupGetter__&&p.__lookupGetter__("value")&&p.inputmask.__valueGet&&(p.__defineGetter__("value",p.inputmask.__valueGet),p.__defineSetter__("value",p.inputmask.__valueSet)),p.inputmask=te}return p;case"getmetadata":if(Z.isArray(t.metadata)){var Q=n(!0,0,!1).join("");return Z.each(t.metadata,function(e,t){if(t.mask===Q)return Q=t,!1}),Q}return t.metadata}}var e=navigator.userAgent,ne=/mobile/i.test(e),re=/iemobile/i.test(e),se=/iphone/i.test(e)&&!re,oe=/android/i.test(e)&&!re;return ie.prototype={dataAttribute:"data-inputmask",defaults:{placeholder:"_",optionalmarker:{start:"[",end:"]"},quantifiermarker:{start:"{",end:"}"},groupmarker:{start:"(",end:")"},alternatormarker:"|",escapeChar:"\\",mask:null,regex:null,oncomplete:Z.noop,onincomplete:Z.noop,oncleared:Z.noop,repeat:0,greedy:!0,autoUnmask:!1,removeMaskOnSubmit:!1,clearMaskOnLostFocus:!0,insertMode:!0,clearIncomplete:!1,alias:null,onKeyDown:Z.noop,onBeforeMask:null,onBeforePaste:function(e,t){return Z.isFunction(t.onBeforeMask)?t.onBeforeMask.call(this,e,t):e},onBeforeWrite:null,onUnMask:null,showMaskOnFocus:!0,showMaskOnHover:!0,onKeyValidation:Z.noop,skipOptionalPartCharacter:" ",numericInput:!1,rightAlign:!1,undoOnEscape:!0,radixPoint:"",radixPointDefinitionSymbol:te,groupSeparator:"",keepStatic:null,positionCaretOnTab:!0,tabThrough:!1,supportsInputType:["text","tel","password"],ignorables:[8,9,13,19,27,33,34,35,36,37,38,39,40,45,46,93,112,113,114,115,116,117,118,119,120,121,122,123,0,229],isComplete:null,canClearPosition:Z.noop,preValidation:null,postValidation:null,staticDefinitionSymbol:te,jitMasking:!1,nullable:!0,inputEventOnly:!1,noValuePatching:!1,positionCaretOnClick:"lvp",casing:null,inputmode:"verbatim",colorMask:!1,androidHack:!1,importDataAttributes:!0},definitions:{9:{validator:"[0-9１-９]",cardinality:1,definitionSymbol:"*"},a:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,definitionSymbol:"*"},"*":{validator:"[0-9１-９A-Za-zА-яЁёÀ-ÿµ]",cardinality:1}},aliases:{},masksCache:{},mask:function(e){function n(i,e,a,n){if(!0===e.importDataAttributes){var t,r,s,o,l=function(e,t){null!==(t=t!==te?t:i.getAttribute(n+"-"+e))&&("string"==typeof t&&(0===e.indexOf("on")?t=J[t]:"false"===t?t=!1:"true"===t&&(t=!0)),a[e]=t)},c=i.getAttribute(n);if(c&&""!==c&&(c=c.replace(new RegExp("'","g"),'"'),r=JSON.parse("{"+c+"}")),r){s=te;for(o in r)if("alias"===o.toLowerCase()){s=r[o];break}}l("alias",s),a.alias&&d(a.alias,a,e);for(t in e){if(r){s=te;for(o in r)if(o.toLowerCase()===t.toLowerCase()){s=r[o];break}}l(t,s)}}return Z.extend(!0,e,a),("rtl"===i.dir||e.rightAlign)&&(i.style.textAlign="right"),("rtl"===i.dir||e.numericInput)&&(i.dir="ltr",i.removeAttribute("dir"),e.isRTL=!0),e}var r=this;return"string"==typeof e&&(e=ee.getElementById(e)||ee.querySelectorAll(e)),e=e.nodeName?[e]:e,Z.each(e,function(e,t){var i=Z.extend(!0,{},r.opts);n(t,i,Z.extend(!0,{},r.userOptions),r.dataAttribute);var a=s(i,r.noMasksCache);a!==te&&(t.inputmask!==te&&(t.inputmask.opts.autoUnmask=!0,t.inputmask.remove()),t.inputmask=new ie(te,te,!0),t.inputmask.opts=i,t.inputmask.noMasksCache=r.noMasksCache,t.inputmask.userOptions=Z.extend(!0,{},r.userOptions),t.inputmask.isRTL=i.isRTL||i.numericInput,t.inputmask.el=t,t.inputmask.maskset=a,Z.data(t,"_inputmask_opts",i),ae.call(t.inputmask,{action:"mask"}))}),e&&e[0]?e[0].inputmask||this:this},option:function(e,t){return"string"==typeof e?this.opts[e]:"object"===(void 0===e?"undefined":le(e))?(Z.extend(this.userOptions,e),this.el&&!0!==t&&this.mask(this.el),this):void 0},unmaskedvalue:function(e){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),ae.call(this,{action:"unmaskedvalue",value:e})},remove:function(){return ae.call(this,{action:"remove"})},getemptymask:function(){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),ae.call(this,{action:"getemptymask"})},hasMaskedValue:function(){return!this.opts.autoUnmask},isComplete:function(){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),ae.call(this,{action:"isComplete"})},getmetadata:function(){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),ae.call(this,{action:"getmetadata"})},isValid:function(e){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),ae.call(this,{action:"isValid",value:e})},format:function(e,t){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),ae.call(this,{action:"format",value:e,metadata:t})},analyseMask:function(e,u,p){function t(e,t,i,a){this.matches=[],this.openGroup=e||!1,this.alternatorGroup=!1,this.isGroup=e||!1,this.isOptional=t||!1,this.isQuantifier=i||!1,this.isAlternator=a||!1,this.quantifier={min:1,max:1}}function n(i,e,a){a=a!==te?a:i.matches.length;var n=i.matches[a-1];if(u)0===e.indexOf("[")||g&&/\\d|\\s|\\w]/i.test(e)||"."===e?i.matches.splice(a++,0,{fn:new RegExp(e,p.casing?"i":""),cardinality:1,optionality:i.isOptional,newBlockMarker:n===te||n.def!==e,casing:null,def:e,placeholder:te,nativeDef:e}):(g&&(e=e[e.length-1]),Z.each(e.split(""),function(e,t){n=i.matches[a-1],i.matches.splice(a++,0,{fn:null,cardinality:0,optionality:i.isOptional,newBlockMarker:n===te||n.def!==t&&null!==n.fn,casing:null,def:p.staticDefinitionSymbol||t,placeholder:p.staticDefinitionSymbol!==te?t:te,nativeDef:t})})),g=!1;else{var t=(p.definitions?p.definitions[e]:te)||ie.prototype.definitions[e];if(t&&!g){for(var r=t.prevalidator,s=r?r.length:0,o=1;o<t.cardinality;o++){var l=s>=o?r[o-1]:[],c=l.validator,d=l.cardinality;i.matches.splice(a++,0,{fn:c?"string"==typeof c?new RegExp(c,p.casing?"i":""):new function(){this.test=c}:new RegExp("."),cardinality:d||1,optionality:i.isOptional,newBlockMarker:n===te||n.def!==(t.definitionSymbol||e),casing:t.casing,def:t.definitionSymbol||e,placeholder:t.placeholder,nativeDef:e}),n=i.matches[a-1]}i.matches.splice(a++,0,{fn:t.validator?"string"==typeof t.validator?new RegExp(t.validator,p.casing?"i":""):new function(){this.test=t.validator}:new RegExp("."),cardinality:t.cardinality,optionality:i.isOptional,newBlockMarker:n===te||n.def!==(t.definitionSymbol||e),casing:t.casing,def:t.definitionSymbol||e,placeholder:t.placeholder,nativeDef:e})}else i.matches.splice(a++,0,{fn:null,cardinality:0,optionality:i.isOptional,newBlockMarker:n===te||n.def!==e&&null!==n.fn,casing:null,def:p.staticDefinitionSymbol||e,placeholder:p.staticDefinitionSymbol!==te?e:te,nativeDef:e}),g=!1}}function r(a){a&&a.matches&&Z.each(a.matches,function(e,t){var i=a.matches[e+1];(i===te||i.matches===te||!1===i.isQuantifier)&&t&&t.isGroup&&(t.isGroup=!1,u||(n(t,p.groupmarker.start,0),!0!==t.openGroup&&n(t,p.groupmarker.end))),r(t)})}function i(){if(y.length>0){if(c=y[y.length-1],n(c,o),c.isAlternator){d=y.pop();for(var e=0;e<d.matches.length;e++)d.matches[e].isGroup=!1;y.length>0?(c=y[y.length-1]).matches.push(d):_.matches.push(d)}}else n(_,o)}function s(e){e.matches=e.matches.reverse();for(var t in e.matches)if(e.matches.hasOwnProperty(t)){var i=parseInt(t);if(e.matches[t].isQuantifier&&e.matches[i+1]&&e.matches[i+1].isGroup){var a=e.matches[t];e.matches.splice(t,1),e.matches.splice(i+1,0,a)}e.matches[t].matches!==te?e.matches[t]=s(e.matches[t]):e.matches[t]=function(e){return e===p.optionalmarker.start?e=p.optionalmarker.end:e===p.optionalmarker.end?e=p.optionalmarker.start:e===p.groupmarker.start?e=p.groupmarker.end:e===p.groupmarker.end&&(e=p.groupmarker.start),e}(e.matches[t])}return e}var a,o,l,c,d,f,h,m=/(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g,v=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,g=!1,_=new t,y=[],b=[];for(u&&(p.optionalmarker.start=te,p.optionalmarker.end=te);a=u?v.exec(e):m.exec(e);){if(o=a[0],u)switch(o.charAt(0)){case"?":o="{0,1}";break;case"+":case"*":o="{"+o+"}"}if(g)i();else switch(o.charAt(0)){case p.escapeChar:g=!0,u&&i();break;case p.optionalmarker.end:case p.groupmarker.end:if(l=y.pop(),l.openGroup=!1,l!==te)if(y.length>0){if((c=y[y.length-1]).matches.push(l),c.isAlternator){d=y.pop();for(var $=0;$<d.matches.length;$++)d.matches[$].isGroup=!1,d.matches[$].alternatorGroup=!1;y.length>0?(c=y[y.length-1]).matches.push(d):_.matches.push(d)}}else _.matches.push(l);else i();break;case p.optionalmarker.start:y.push(new t(!1,!0));break;case p.groupmarker.start:y.push(new t(!0));break;case p.quantifiermarker.start:var k=new t(!1,!1,!0),w=(o=o.replace(/[{}]/g,"")).split(","),x=isNaN(w[0])?w[0]:parseInt(w[0]),C=1===w.length?x:isNaN(w[1])?w[1]:parseInt(w[1]);if("*"!==C&&"+"!==C||(x="*"===C?0:1),k.quantifier={min:x,max:C},y.length>0){var S=y[y.length-1].matches;(a=S.pop()).isGroup||((h=new t(!0)).matches.push(a),a=h),S.push(a),S.push(k)}else(a=_.matches.pop()).isGroup||(u&&null===a.fn&&"."===a.def&&(a.fn=new RegExp(a.def,p.casing?"i":"")),(h=new t(!0)).matches.push(a),a=h),_.matches.push(a),_.matches.push(k);break;case p.alternatormarker:if(y.length>0){var T=(c=y[y.length-1]).matches[c.matches.length-1];f=c.openGroup&&(T.matches===te||!1===T.isGroup&&!1===T.isAlternator)?y.pop():c.matches.pop()}else f=_.matches.pop();if(f.isAlternator)y.push(f);else if(f.alternatorGroup?(d=y.pop(),f.alternatorGroup=!1):d=new t(!1,!1,!1,!0),d.matches.push(f),y.push(d),f.openGroup){f.openGroup=!1;var j=new t(!0);j.alternatorGroup=!0,y.push(j)}break;default:i()}}for(;y.length>0;)l=y.pop(),_.matches.push(l);return _.matches.length>0&&(r(_),b.push(_)),(p.numericInput||p.isRTL)&&s(b[0]),b}},ie.extendDefaults=function(e){Z.extend(!0,ie.prototype.defaults,e)},ie.extendDefinitions=function(e){Z.extend(!0,ie.prototype.definitions,e)},ie.extendAliases=function(e){Z.extend(!0,ie.prototype.aliases,e)},ie.format=function(e,t,i){return ie(t).format(e,i)},ie.unmask=function(e,t){return ie(t).unmaskedvalue(e)},ie.isValid=function(e,t){return ie(t).isValid(e)},ie.remove=function(e){Z.each(e,function(e,t){t.inputmask&&t.inputmask.remove()})},ie.escapeRegex=function(e){var t=["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"];return e.replace(new RegExp("(\\"+t.join("|\\")+")","gim"),"\\$1")},ie.keyCode={ALT:18,BACKSPACE:8,BACKSPACE_SAFARI:127,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91,X:88},ie})?a.apply(t,n):a)&&(e.exports=r)},function(e,t){e.exports=jQuery},function(e,t,i){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}i(4),i(9),i(12),i(13),i(14),i(15);var n=a(i(1)),r=a(i(0)),s=a(i(2));r.default===s.default&&i(16),window.Inputmask=n.default},function(e,t,i){var a=i(5);"string"==typeof a&&(a=[[e.i,a,""]]);var n={hmr:!0,transform:void 0};i(7)(a,n),a.locals&&(e.exports=a.locals)},function(e,t,i){(e.exports=i(6)(void 0)).push([e.i,"span.im-caret {\r\n    -webkit-animation: 1s blink step-end infinite;\r\n    animation: 1s blink step-end infinite;\r\n}\r\n\r\n@keyframes blink {\r\n    from, to {\r\n        border-right-color: black;\r\n    }\r\n    50% {\r\n        border-right-color: transparent;\r\n    }\r\n}\r\n\r\n@-webkit-keyframes blink {\r\n    from, to {\r\n        border-right-color: black;\r\n    }\r\n    50% {\r\n        border-right-color: transparent;\r\n    }\r\n}\r\n\r\nspan.im-static {\r\n    color: grey;\r\n}\r\n\r\ndiv.im-colormask {\r\n    display: inline-block;\r\n    border-style: inset;\r\n    border-width: 2px;\r\n    -webkit-appearance: textfield;\r\n    -moz-appearance: textfield;\r\n    appearance: textfield;\r\n}\r\n\r\ndiv.im-colormask > input {\r\n    position: absolute;\r\n    display: inline-block;\r\n    background-color: transparent;\r\n    color: transparent;\r\n    -webkit-appearance: caret;\r\n    -moz-appearance: caret;\r\n    appearance: caret;\r\n    border-style: none;\r\n    left: 0; /*calculated*/\r\n}\r\n\r\ndiv.im-colormask > input:focus {\r\n    outline: none;\r\n}\r\n\r\ndiv.im-colormask > input::-moz-selection{\r\n    background: none;\r\n}\r\n\r\ndiv.im-colormask > input::selection{\r\n    background: none;\r\n}\r\ndiv.im-colormask > input::-moz-selection{\r\n    background: none;\r\n}\r\n\r\ndiv.im-colormask > div {\r\n    color: black;\r\n    display: inline-block;\r\n    width: 100px; /*calculated*/\r\n}",""])},function(e,t){function a(e,t){var i,a=e[1]||"",n=e[3];if(!n)return a;if(t&&"function"==typeof btoa){var r=(i=n,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),s=n.sources.map(function(e){return"/*# sourceURL="+n.sourceRoot+e+" */"});return[a].concat(s).concat([r]).join("\n")}return[a].join("\n")}e.exports=function(i){var s=[];return s.toString=function(){return this.map(function(e){var t=a(e,i);return e[2]?"@media "+e[2]+"{"+t+"}":t}).join("")},s.i=function(e,t){"string"==typeof e&&(e=[[null,e,""]]);for(var i={},a=0;a<this.length;a++){var n=this[a][0];"number"==typeof n&&(i[n]=!0)}for(a=0;a<e.length;a++){var r=e[a];"number"==typeof r[0]&&i[r[0]]||(t&&!r[2]?r[2]=t:t&&(r[2]="("+r[2]+") and ("+t+")"),s.push(r))}},s}},function(e,t,i){function l(e,t){for(var i=0;i<e.length;i++){var a=e[i],n=m[a.id];if(n){for(n.refs++,s=0;s<n.parts.length;s++)n.parts[s](a.parts[s]);for(;s<a.parts.length;s++)n.parts.push(o(a.parts[s],t))}else{for(var r=[],s=0;s<a.parts.length;s++)r.push(o(a.parts[s],t));m[a.id]={id:a.id,refs:1,parts:r}}}}function c(e,t){for(var i=[],a={},n=0;n<e.length;n++){var r=e[n],s=t.base?r[0]+t.base:r[0],o={css:r[1],media:r[2],sourceMap:r[3]};a[s]?a[s].parts.push(o):i.push(a[s]={id:s,parts:[o]})}return i}function d(e,t){var i=s(e.insertInto);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var a=_[_.length-1];if("top"===e.insertAt)a?a.nextSibling?i.insertBefore(t,a.nextSibling):i.appendChild(t):i.insertBefore(t,i.firstChild),_.push(t);else if("bottom"===e.insertAt)i.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var n=s(e.insertInto+" "+e.insertAt.before);i.insertBefore(t,n)}}function u(e){if(null!==e.parentNode){e.parentNode.removeChild(e);var t=_.indexOf(e);0<=t&&_.splice(t,1)}}function p(e){var t=document.createElement("style");return e.attrs.type="text/css",f(t,e.attrs),d(e,t),t}function f(t,i){Object.keys(i).forEach(function(e){t.setAttribute(e,i[e])})}function o(t,e){var i,a,n,r,s,o;if(e.transform&&t.css){if(!(r=e.transform(t.css)))return function(){};t.css=r}if(e.singleton){var l=g++;i=v=v||p(e),a=h.bind(null,i,l,!1),n=h.bind(null,i,l,!0)}else n=t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(s=e,o=document.createElement("link"),s.attrs.type="text/css",s.attrs.rel="stylesheet",f(o,s.attrs),d(s,o),a=function(e,t,i){var a=i.css,n=i.sourceMap,r=void 0===t.convertToAbsoluteUrls&&n;(t.convertToAbsoluteUrls||r)&&(a=y(a)),n&&(a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */");var s=new Blob([a],{type:"text/css"}),o=e.href;e.href=URL.createObjectURL(s),o&&URL.revokeObjectURL(o)}.bind(null,i=o,e),function(){u(i),i.href&&URL.revokeObjectURL(i.href)}):(i=p(e),a=function(e,t){var i=t.css,a=t.media;if(a&&e.setAttribute("media",a),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}.bind(null,i),function(){u(i)});return a(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;a(t=e)}else n()}}function h(e,t,i,a){var n=i?"":a.css;if(e.styleSheet)e.styleSheet.cssText=$(t,n);else{var r=document.createTextNode(n),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(r,s[t]):e.appendChild(r)}}var a,n,m={},r=function(){return void 0===n&&(n=function(){return window&&document&&document.all&&!window.atob}.apply(this,arguments)),n},s=(a={},function(e){if(void 0===a[e]){var t=function(e){return document.querySelector(e)}.call(this,e);if(t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}a[e]=t}return a[e]}),v=null,g=0,_=[],y=i(8);e.exports=function(e,s){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(s=s||{}).attrs="object"==typeof s.attrs?s.attrs:{},s.singleton||(s.singleton=r()),s.insertInto||(s.insertInto="head"),s.insertAt||(s.insertAt="bottom");var o=c(e,s);return l(o,s),function(e){for(var t=[],i=0;i<o.length;i++){var a=o[i];(n=m[a.id]).refs--,t.push(n)}for(e&&l(c(e,s),s),i=0;i<t.length;i++){var n=t[i];if(0===n.refs){for(var r=0;r<n.parts.length;r++)n.parts[r]();delete m[n.id]}}}};var b,$=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")})},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var i,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(a)?e:(i=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}},function(e,t,i){"use strict";var a,n,r;n=[i(0),i(1)],void 0!==(r="function"==typeof(a=function(s,o){function l(e){return isNaN(e)||29===new Date(e,2,0).getDate()}return o.extendAliases({"dd/mm/yyyy":{mask:"1/2/y",placeholder:"dd/mm/yyyy",regex:{val1pre:new RegExp("[0-3]"),val1:new RegExp("0[1-9]|[12][0-9]|3[01]"),val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|[12][0-9]|3[01])"+t+"[01])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|[12][0-9])"+t+"(0[1-9]|1[012]))|(30"+t+"(0[13-9]|1[012]))|(31"+t+"(0[13578]|1[02]))")}},leapday:"29/02/",separator:"/",yearrange:{minyear:1900,maxyear:2099},isInYearRange:function(e,t,i){if(isNaN(e))return!1;var a=parseInt(e.concat(t.toString().slice(e.length))),n=parseInt(e.concat(i.toString().slice(e.length)));return!isNaN(a)&&(t<=a&&a<=i)||!isNaN(n)&&(t<=n&&n<=i)},determinebaseyear:function(e,t,i){var a=(new Date).getFullYear();if(e>a)return e;if(t<a){for(var n=t.toString().slice(0,2),r=t.toString().slice(2,4);t<n+i;)n--;var s=n+r;return e>s?e:s}if(e<=a&&a<=t){for(var o=a.toString().slice(0,2);t<o+i;)o--;var l=o+i;return l<e?e:l}return a},onKeyDown:function(e,t,i,a){var n=s(this);if(e.ctrlKey&&e.keyCode===o.keyCode.RIGHT){var r=new Date;n.val(r.getDate().toString()+(r.getMonth()+1).toString()+r.getFullYear().toString()),n.trigger("setvalue")}},getFrontValue:function(e,t,i){for(var a=0,n=0,r=0;r<e.length&&"2"!==e.charAt(r);r++){var s=i.definitions[e.charAt(r)];s?(a+=n,n=s.cardinality):n++}return t.join("").substr(a,n)},postValidation:function(e,t,i){var a,n,r=e.join("");return 0===i.mask.indexOf("y")?(n=r.substr(0,4),a=r.substring(4,10)):(n=r.substring(6,10),a=r.substr(0,6)),t&&(a!==i.leapday||l(n))},definitions:{1:{validator:function(e,t,i,a,n){var r=n.regex.val1.test(e);return a||r||e.charAt(1)!==n.separator&&-1==="-./".indexOf(e.charAt(1))||!(r=n.regex.val1.test("0"+e.charAt(0)))?r:(t.buffer[i-1]="0",{refreshFromBuffer:{start:i-1,end:i},pos:i,c:e.charAt(0)})},cardinality:2,prevalidator:[{validator:function(e,t,i,a,n){var r=e;isNaN(t.buffer[i+1])||(r+=t.buffer[i+1]);var s=1===r.length?n.regex.val1pre.test(r):n.regex.val1.test(r);if(s&&t.validPositions[i]&&(n.regex.val2(n.separator).test(e+t.validPositions[i].input)||(t.validPositions[i].input="0"===e?"1":"0")),!a&&!s){if(s=n.regex.val1.test(e+"0"))return t.buffer[i]=e,t.buffer[++i]="0",{pos:i,c:"0"};if(s=n.regex.val1.test("0"+e))return t.buffer[i]="0",i++,{pos:i}}return s},cardinality:1}]},2:{validator:function(e,t,i,a,n){var r=n.getFrontValue(t.mask,t.buffer,n);-1!==r.indexOf(n.placeholder[0])&&(r="01"+n.separator);var s=n.regex.val2(n.separator).test(r+e);return a||s||e.charAt(1)!==n.separator&&-1==="-./".indexOf(e.charAt(1))||!(s=n.regex.val2(n.separator).test(r+"0"+e.charAt(0)))?s:(t.buffer[i-1]="0",{refreshFromBuffer:{start:i-1,end:i},pos:i,c:e.charAt(0)})},cardinality:2,prevalidator:[{validator:function(e,t,i,a,n){isNaN(t.buffer[i+1])||(e+=t.buffer[i+1]);var r=n.getFrontValue(t.mask,t.buffer,n);-1!==r.indexOf(n.placeholder[0])&&(r="01"+n.separator);var s=1===e.length?n.regex.val2pre(n.separator).test(r+e):n.regex.val2(n.separator).test(r+e);return s&&t.validPositions[i]&&(n.regex.val2(n.separator).test(e+t.validPositions[i].input)||(t.validPositions[i].input="0"===e?"1":"0")),a||s||!(s=n.regex.val2(n.separator).test(r+"0"+e))?s:(t.buffer[i]="0",i++,{pos:i})},cardinality:1}]},y:{validator:function(e,t,i,a,n){return n.isInYearRange(e,n.yearrange.minyear,n.yearrange.maxyear)},cardinality:4,prevalidator:[{validator:function(e,t,i,a,n){var r=n.isInYearRange(e,n.yearrange.minyear,n.yearrange.maxyear);if(!a&&!r){var s=n.determinebaseyear(n.yearrange.minyear,n.yearrange.maxyear,e+"0").toString().slice(0,1);if(r=n.isInYearRange(s+e,n.yearrange.minyear,n.yearrange.maxyear))return t.buffer[i++]=s.charAt(0),{pos:i};if(s=n.determinebaseyear(n.yearrange.minyear,n.yearrange.maxyear,e+"0").toString().slice(0,2),r=n.isInYearRange(s+e,n.yearrange.minyear,n.yearrange.maxyear))return t.buffer[i++]=s.charAt(0),t.buffer[i++]=s.charAt(1),{pos:i}}return r},cardinality:1},{validator:function(e,t,i,a,n){var r=n.isInYearRange(e,n.yearrange.minyear,n.yearrange.maxyear);if(!a&&!r){var s=n.determinebaseyear(n.yearrange.minyear,n.yearrange.maxyear,e).toString().slice(0,2);if(r=n.isInYearRange(e[0]+s[1]+e[1],n.yearrange.minyear,n.yearrange.maxyear))return t.buffer[i++]=s.charAt(1),{pos:i};if(s=n.determinebaseyear(n.yearrange.minyear,n.yearrange.maxyear,e).toString().slice(0,2),r=n.isInYearRange(s+e,n.yearrange.minyear,n.yearrange.maxyear))return t.buffer[i-1]=s.charAt(0),t.buffer[i++]=s.charAt(1),t.buffer[i++]=e.charAt(0),{refreshFromBuffer:{start:i-3,end:i},pos:i}}return r},cardinality:2},{validator:function(e,t,i,a,n){return n.isInYearRange(e,n.yearrange.minyear,n.yearrange.maxyear)},cardinality:3}]}},insertMode:!1,autoUnmask:!1},"mm/dd/yyyy":{placeholder:"mm/dd/yyyy",alias:"dd/mm/yyyy",regex:{val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+t+"[0-3])|(02"+t+"[0-2])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+t+"30)|((0[13578]|1[02])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(e,t,i,a){var n=s(this);if(e.ctrlKey&&e.keyCode===o.keyCode.RIGHT){var r=new Date;n.val((r.getMonth()+1).toString()+r.getDate().toString()+r.getFullYear().toString()),n.trigger("setvalue")}}},"yyyy/mm/dd":{mask:"y/1/2",placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",leapday:"/02/29",onKeyDown:function(e,t,i,a){var n=s(this);if(e.ctrlKey&&e.keyCode===o.keyCode.RIGHT){var r=new Date;n.val(r.getFullYear().toString()+(r.getMonth()+1).toString()+r.getDate().toString()),n.trigger("setvalue")}}},"dd.mm.yyyy":{mask:"1.2.y",placeholder:"dd.mm.yyyy",leapday:"29.02.",separator:".",alias:"dd/mm/yyyy"},"dd-mm-yyyy":{mask:"1-2-y",placeholder:"dd-mm-yyyy",leapday:"29-02-",separator:"-",alias:"dd/mm/yyyy"},"mm.dd.yyyy":{mask:"1.2.y",placeholder:"mm.dd.yyyy",leapday:"02.29.",separator:".",alias:"mm/dd/yyyy"},"mm-dd-yyyy":{mask:"1-2-y",placeholder:"mm-dd-yyyy",leapday:"02-29-",separator:"-",alias:"mm/dd/yyyy"},"yyyy.mm.dd":{mask:"y.1.2",placeholder:"yyyy.mm.dd",leapday:".02.29",separator:".",alias:"yyyy/mm/dd"},"yyyy-mm-dd":{mask:"y-1-2",placeholder:"yyyy-mm-dd",leapday:"-02-29",separator:"-",alias:"yyyy/mm/dd"},datetime:{mask:"1/2/y h:s",placeholder:"dd/mm/yyyy hh:mm",alias:"dd/mm/yyyy",regex:{hrspre:new RegExp("[012]"),hrs24:new RegExp("2[0-4]|1[3-9]"),hrs:new RegExp("[01][0-9]|2[0-4]"),ampm:new RegExp("^[a|p|A|P][m|M]"),mspre:new RegExp("[0-5]"),ms:new RegExp("[0-5][0-9]")},timeseparator:":",hourFormat:"24",definitions:{h:{validator:function(e,t,i,a,n){if("24"===n.hourFormat&&24===parseInt(e,10))return t.buffer[i-1]="0",t.buffer[i]="0",{refreshFromBuffer:{start:i-1,end:i},c:"0"};var r=n.regex.hrs.test(e);if(!a&&!r&&(e.charAt(1)===n.timeseparator||-1!=="-.:".indexOf(e.charAt(1)))&&(r=n.regex.hrs.test("0"+e.charAt(0))))return t.buffer[i-1]="0",t.buffer[i]=e.charAt(0),i++,{refreshFromBuffer:{start:i-2,end:i},pos:i,c:n.timeseparator};if(r&&"24"!==n.hourFormat&&n.regex.hrs24.test(e)){var s=parseInt(e,10);return 24===s?(t.buffer[i+5]="a",t.buffer[i+6]="m"):(t.buffer[i+5]="p",t.buffer[i+6]="m"),(s-=12)<10?(t.buffer[i]=s.toString(),t.buffer[i-1]="0"):(t.buffer[i]=s.toString().charAt(1),t.buffer[i-1]=s.toString().charAt(0)),{refreshFromBuffer:{start:i-1,end:i+6},c:t.buffer[i]}}return r},cardinality:2,prevalidator:[{validator:function(e,t,i,a,n){var r=n.regex.hrspre.test(e);return a||r||!(r=n.regex.hrs.test("0"+e))?r:(t.buffer[i]="0",i++,{pos:i})},cardinality:1}]},s:{validator:"[0-5][0-9]",cardinality:2,prevalidator:[{validator:function(e,t,i,a,n){var r=n.regex.mspre.test(e);return a||r||!(r=n.regex.ms.test("0"+e))?r:(t.buffer[i]="0",i++,{pos:i})},cardinality:1}]},t:{validator:function(e,t,i,a,n){return n.regex.ampm.test(e+"m")},casing:"lower",cardinality:1}},insertMode:!1,autoUnmask:!1},datetime12:{mask:"1/2/y h:s t\\m",placeholder:"dd/mm/yyyy hh:mm xm",alias:"datetime",hourFormat:"12"},"mm/dd/yyyy hh:mm xm":{mask:"1/2/y h:s t\\m",placeholder:"mm/dd/yyyy hh:mm xm",alias:"datetime12",regex:{val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+t+"[0-3])|(02"+t+"[0-2])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+t+"30)|((0[13578]|1[02])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(e,t,i,a){var n=s(this);if(e.ctrlKey&&e.keyCode===o.keyCode.RIGHT){var r=new Date;n.val((r.getMonth()+1).toString()+r.getDate().toString()+r.getFullYear().toString()),n.trigger("setvalue")}}},"hh:mm t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"h:s t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"hh:mm:ss":{mask:"h:s:s",placeholder:"hh:mm:ss",alias:"datetime",autoUnmask:!1},"hh:mm":{mask:"h:s",placeholder:"hh:mm",alias:"datetime",autoUnmask:!1},date:{alias:"dd/mm/yyyy"},"mm/yyyy":{mask:"1/y",placeholder:"mm/yyyy",leapday:"donotuse",separator:"/",alias:"mm/dd/yyyy"},shamsi:{regex:{val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"[0-3])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[1-9]|1[012])"+t+"30)|((0[1-6])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},yearrange:{minyear:1300,maxyear:1499},mask:"y/1/2",leapday:"/12/30",placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",clearIncomplete:!0},"yyyy-mm-dd hh:mm:ss":{mask:"y-1-2 h:s:s",placeholder:"yyyy-mm-dd hh:mm:ss",alias:"datetime",separator:"-",leapday:"-02-29",regex:{val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+t+"[0-3])|(02"+t+"[0-2])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+t+"30)|((0[13578]|1[02])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},onKeyDown:function(e,t,i,a){}}}),o})?a.apply(t,n):a)&&(e.exports=r)},function(e,t,i){"use strict";var a;void 0!==(a=function(){return window}.call(t,i,t,e))&&(e.exports=a)},function(e,t,i){"use strict";var a;void 0!==(a=function(){return document}.call(t,i,t,e))&&(e.exports=a)},function(e,t,i){"use strict";var a,n,r;n=[i(0),i(1)],void 0!==(r="function"==typeof(a=function(e,t){return t.extendDefinitions({A:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,casing:"upper"},"&":{validator:"[0-9A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,casing:"upper"},"#":{validator:"[0-9A-Fa-f]",cardinality:1,casing:"upper"}}),t.extendAliases({url:{definitions:{i:{validator:".",cardinality:1}},mask:"(\\http://)|(\\http\\s://)|(ftp://)|(ftp\\s://)i{+}",insertMode:!1,autoUnmask:!1,inputmode:"url"},ip:{mask:"i[i[i]].i[i[i]].i[i[i]].i[i[i]]",definitions:{i:{validator:function(e,t,i,a,n){return i-1>-1&&"."!==t.buffer[i-1]?(e=t.buffer[i-1]+e,e=i-2>-1&&"."!==t.buffer[i-2]?t.buffer[i-2]+e:"0"+e):e="00"+e,new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(e)},cardinality:1}},onUnMask:function(e,t,i){return e},inputmode:"numeric"},email:{mask:"*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",greedy:!1,onBeforePaste:function(e,t){return(e=e.toLowerCase()).replace("mailto:","")},definitions:{"*":{validator:"[0-9A-Za-z!#$%&'*+/=?^_`{|}~-]",cardinality:1,casing:"lower"},"-":{validator:"[0-9A-Za-z-]",cardinality:1,casing:"lower"}},onUnMask:function(e,t,i){return e},inputmode:"email"},mac:{mask:"##:##:##:##:##:##"},vin:{mask:"V{13}9{4}",definitions:{V:{validator:"[A-HJ-NPR-Za-hj-npr-z\\d]",cardinality:1,casing:"upper"}},clearIncomplete:!0,autoUnmask:!0}}),t})?a.apply(t,n):a)&&(e.exports=r)},function(e,t,i){"use strict";var a,n,r;n=[i(0),i(1)],void 0!==(r="function"==typeof(a=function(m,v,g){function r(e,t){for(var i="",a=0;a<e.length;a++)v.prototype.definitions[e.charAt(a)]||t.definitions[e.charAt(a)]||t.optionalmarker.start===e.charAt(a)||t.optionalmarker.end===e.charAt(a)||t.quantifiermarker.start===e.charAt(a)||t.quantifiermarker.end===e.charAt(a)||t.groupmarker.start===e.charAt(a)||t.groupmarker.end===e.charAt(a)||t.alternatormarker===e.charAt(a)?i+="\\"+e.charAt(a):i+=e.charAt(a);return i}return v.extendAliases({numeric:{mask:function(e){if(0!==e.repeat&&isNaN(e.integerDigits)&&(e.integerDigits=e.repeat),e.repeat=0,e.groupSeparator===e.radixPoint&&("."===e.radixPoint?e.groupSeparator=",":","===e.radixPoint?e.groupSeparator=".":e.groupSeparator="")," "===e.groupSeparator&&(e.skipOptionalPartCharacter=g),e.autoGroup=e.autoGroup&&""!==e.groupSeparator,e.autoGroup&&("string"==typeof e.groupSize&&isFinite(e.groupSize)&&(e.groupSize=parseInt(e.groupSize)),isFinite(e.integerDigits))){var t=Math.floor(e.integerDigits/e.groupSize),i=e.integerDigits%e.groupSize;e.integerDigits=parseInt(e.integerDigits)+(0===i?t-1:t),e.integerDigits<1&&(e.integerDigits="*")}e.placeholder.length>1&&(e.placeholder=e.placeholder.charAt(0)),"radixFocus"===e.positionCaretOnClick&&""===e.placeholder&&!1===e.integerOptional&&(e.positionCaretOnClick="lvp"),e.definitions[";"]=e.definitions["~"],e.definitions[";"].definitionSymbol="~",!0===e.numericInput&&(e.positionCaretOnClick="radixFocus"===e.positionCaretOnClick?"lvp":e.positionCaretOnClick,e.digitsOptional=!1,isNaN(e.digits)&&(e.digits=2),e.decimalProtect=!1);var a="[+]";if(a+=r(e.prefix,e),!0===e.integerOptional?a+="~{1,"+e.integerDigits+"}":a+="~{"+e.integerDigits+"}",e.digits!==g){e.radixPointDefinitionSymbol=e.decimalProtect?":":e.radixPoint;var n=e.digits.toString().split(",");isFinite(n[0]&&n[1]&&isFinite(n[1]))?a+=e.radixPointDefinitionSymbol+";{"+e.digits+"}":(isNaN(e.digits)||parseInt(e.digits)>0)&&(e.digitsOptional?a+="["+e.radixPointDefinitionSymbol+";{1,"+e.digits+"}]":a+=e.radixPointDefinitionSymbol+";{"+e.digits+"}")}return a+=r(e.suffix,e),a+="[-]",e.greedy=!1,a},placeholder:"",greedy:!1,digits:"*",digitsOptional:!0,enforceDigitsOnBlur:!1,radixPoint:".",positionCaretOnClick:"radixFocus",groupSize:3,groupSeparator:"",autoGroup:!1,allowMinus:!0,negationSymbol:{front:"-",back:""},integerDigits:"+",integerOptional:!0,prefix:"",suffix:"",rightAlign:!0,decimalProtect:!0,min:null,max:null,step:1,insertMode:!0,autoUnmask:!1,unmaskAsNumber:!1,inputmode:"numeric",preValidation:function(e,t,i,a,n){if("-"===i||i===n.negationSymbol.front)return!0===n.allowMinus&&(n.isNegative=n.isNegative===g||!n.isNegative,""===e.join("")||{caret:t,dopost:!0});if(!1===a&&i===n.radixPoint&&n.digits!==g&&(isNaN(n.digits)||parseInt(n.digits)>0)){var r=m.inArray(n.radixPoint,e);if(-1!==r)return!0===n.numericInput?t===r:{caret:r+1}}return!0},postValidation:function(e,t,i){var a=i.suffix.split(""),n=i.prefix.split("");if(t.pos===g&&t.caret!==g&&!0!==t.dopost)return t;var r=t.caret!==g?t.caret:t.pos,s=e.slice();i.numericInput&&(r=s.length-r-1,s=s.reverse());var o=s[r];if(o===i.groupSeparator&&(o=s[r+=1]),r===s.length-i.suffix.length-1&&o===i.radixPoint)return t;o!==g&&o!==i.radixPoint&&o!==i.negationSymbol.front&&o!==i.negationSymbol.back&&(s[r]="?",i.prefix.length>0&&r>=(!1===i.isNegative?1:0)&&r<i.prefix.length-1+(!1===i.isNegative?1:0)?n[r-(!1===i.isNegative?1:0)]="?":i.suffix.length>0&&r>=s.length-i.suffix.length-(!1===i.isNegative?1:0)&&(a[r-(s.length-i.suffix.length-(!1===i.isNegative?1:0))]="?")),n=n.join(""),a=a.join("");var l=s.join("").replace(n,"");if(l=l.replace(a,""),l=l.replace(new RegExp(v.escapeRegex(i.groupSeparator),"g"),""),l=l.replace(new RegExp("[-"+v.escapeRegex(i.negationSymbol.front)+"]","g"),""),l=l.replace(new RegExp(v.escapeRegex(i.negationSymbol.back)+"$"),""),isNaN(i.placeholder)&&(l=l.replace(new RegExp(v.escapeRegex(i.placeholder),"g"),"")),l.length>1&&1!==l.indexOf(i.radixPoint)&&("0"===o&&(l=l.replace(/^\?/g,"")),l=l.replace(/^0/g,"")),l.charAt(0)===i.radixPoint&&""!==i.radixPoint&&!0!==i.numericInput&&(l="0"+l),""!==l){if(l=l.split(""),(!i.digitsOptional||i.enforceDigitsOnBlur&&"blur"===t.event)&&isFinite(i.digits)){var c=m.inArray(i.radixPoint,l),d=m.inArray(i.radixPoint,s);-1===c&&(l.push(i.radixPoint),c=l.length-1);for(var u=1;u<=i.digits;u++)i.digitsOptional&&(!i.enforceDigitsOnBlur||"blur"!==t.event)||l[c+u]!==g&&l[c+u]!==i.placeholder.charAt(0)?-1!==d&&s[d+u]!==g&&(l[c+u]=l[c+u]||s[d+u]):l[c+u]=t.placeholder||i.placeholder.charAt(0)}if(!0!==i.autoGroup||""===i.groupSeparator||o===i.radixPoint&&t.pos===g&&!t.dopost)l=l.join("");else{var p=l[l.length-1]===i.radixPoint&&t.c===i.radixPoint;l=v(function(e,t){var i="";if(i+="("+t.groupSeparator+"*{"+t.groupSize+"}){*}",""!==t.radixPoint){var a=e.join("").split(t.radixPoint);a[1]&&(i+=t.radixPoint+"*{"+a[1].match(/^\d*\??\d*/)[0].length+"}")}return i}(l,i),{numericInput:!0,jitMasking:!0,definitions:{"*":{validator:"[0-9?]",cardinality:1}}}).format(l.join("")),p&&(l+=i.radixPoint),l.charAt(0)===i.groupSeparator&&l.substr(1)}}if(i.isNegative&&"blur"===t.event&&(i.isNegative="0"!==l),l=n+l,l+=a,i.isNegative&&(l=i.negationSymbol.front+l,l+=i.negationSymbol.back),l=l.split(""),o!==g)if(o!==i.radixPoint&&o!==i.negationSymbol.front&&o!==i.negationSymbol.back)(r=m.inArray("?",l))>-1?l[r]=o:r=t.caret||0;else if(o===i.radixPoint||o===i.negationSymbol.front||o===i.negationSymbol.back){var f=m.inArray(o,l);-1!==f&&(r=f)}i.numericInput&&(r=l.length-r-1,l=l.reverse());var h={caret:o===g||t.pos!==g?r+(i.numericInput?-1:1):r,buffer:l,refreshFromBuffer:t.dopost||e.join("")!==l.join("")};return h.refreshFromBuffer?h:t},onBeforeWrite:function(e,t,i,a){if(e)switch(e.type){case"keydown":return a.postValidation(t,{caret:i,dopost:!0},a);case"blur":case"checkval":var n;if(function(e){e.parseMinMaxOptions===g&&(null!==e.min&&(e.min=e.min.toString().replace(new RegExp(v.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.min=e.min.replace(e.radixPoint,".")),e.min=isFinite(e.min)?parseFloat(e.min):NaN,isNaN(e.min)&&(e.min=Number.MIN_VALUE)),null!==e.max&&(e.max=e.max.toString().replace(new RegExp(v.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.max=e.max.replace(e.radixPoint,".")),e.max=isFinite(e.max)?parseFloat(e.max):NaN,isNaN(e.max)&&(e.max=Number.MAX_VALUE)),e.parseMinMaxOptions="done")}(a),null!==a.min||null!==a.max){if(n=a.onUnMask(t.join(""),g,m.extend({},a,{unmaskAsNumber:!0})),null!==a.min&&n<a.min)return a.isNegative=a.min<0,a.postValidation(a.min.toString().replace(".",a.radixPoint).split(""),{caret:i,dopost:!0,placeholder:"0"},a);if(null!==a.max&&n>a.max)return a.isNegative=a.max<0,a.postValidation(a.max.toString().replace(".",a.radixPoint).split(""),{caret:i,dopost:!0,placeholder:"0"},a)}return a.postValidation(t,{caret:i,placeholder:"0",event:"blur"},a);case"_checkval":return{caret:i}}},regex:{integerPart:function(e,t){return t?new RegExp("["+v.escapeRegex(e.negationSymbol.front)+"+]?"):new RegExp("["+v.escapeRegex(e.negationSymbol.front)+"+]?\\d+")},integerNPart:function(e){return new RegExp("[\\d"+v.escapeRegex(e.groupSeparator)+v.escapeRegex(e.placeholder.charAt(0))+"]+")}},definitions:{"~":{validator:function(e,t,i,a,n,r){var s=a?new RegExp("[0-9"+v.escapeRegex(n.groupSeparator)+"]").test(e):new RegExp("[0-9]").test(e);if(!0===s){if(!0!==n.numericInput&&t.validPositions[i]!==g&&"~"===t.validPositions[i].match.def&&!r){var o=t.buffer.join(""),l=(o=(o=o.replace(new RegExp("[-"+v.escapeRegex(n.negationSymbol.front)+"]","g"),"")).replace(new RegExp(v.escapeRegex(n.negationSymbol.back)+"$"),"")).split(n.radixPoint);l.length>1&&(l[1]=l[1].replace(/0/g,n.placeholder.charAt(0))),"0"===l[0]&&(l[0]=l[0].replace(/0/g,n.placeholder.charAt(0))),o=l[0]+n.radixPoint+l[1]||"";var c=t._buffer.join("");for(o===n.radixPoint&&(o=c);null===o.match(v.escapeRegex(c)+"$");)c=c.slice(1);s=(o=(o=o.replace(c,"")).split(""))[i]===g?{pos:i,remove:i}:{pos:i}}}else a||e!==n.radixPoint||t.validPositions[i-1]!==g||(t.buffer[i]="0",s={pos:i+1});return s},cardinality:1},"+":{validator:function(e,t,i,a,n){return n.allowMinus&&("-"===e||e===n.negationSymbol.front)},cardinality:1,placeholder:""},"-":{validator:function(e,t,i,a,n){return n.allowMinus&&e===n.negationSymbol.back},cardinality:1,placeholder:""},":":{validator:function(e,t,i,a,n){var r="["+v.escapeRegex(n.radixPoint)+"]",s=new RegExp(r).test(e);return s&&t.validPositions[i]&&t.validPositions[i].match.placeholder===n.radixPoint&&(s={caret:i+1}),s},cardinality:1,placeholder:function(e){return e.radixPoint}}},onUnMask:function(e,t,i){if(""===t&&!0===i.nullable)return t;var a=e.replace(i.prefix,"");return a=a.replace(i.suffix,""),a=a.replace(new RegExp(v.escapeRegex(i.groupSeparator),"g"),""),""!==i.placeholder.charAt(0)&&(a=a.replace(new RegExp(i.placeholder.charAt(0),"g"),"0")),i.unmaskAsNumber?(""!==i.radixPoint&&-1!==a.indexOf(i.radixPoint)&&(a=a.replace(v.escapeRegex.call(this,i.radixPoint),".")),a=a.replace(new RegExp("^"+v.escapeRegex(i.negationSymbol.front)),"-"),a=a.replace(new RegExp(v.escapeRegex(i.negationSymbol.back)+"$"),""),Number(a)):a},isComplete:function(e,t){var i=e.join("");if(e.slice().join("")!==i)return!1;var a=i.replace(t.prefix,"");return a=a.replace(t.suffix,""),a=a.replace(new RegExp(v.escapeRegex(t.groupSeparator),"g"),""),","===t.radixPoint&&(a=a.replace(v.escapeRegex(t.radixPoint),".")),isFinite(a)},onBeforeMask:function(e,t){if(t.isNegative=g,e=e.toString().charAt(e.length-1)===t.radixPoint?e.toString().substr(0,e.length-1):e.toString(),""!==t.radixPoint&&isFinite(e)){var i=e.split("."),a=""!==t.groupSeparator?parseInt(t.groupSize):0;2===i.length&&(i[0].length>a||i[1].length>a||i[0].length<=a&&i[1].length<a)&&(e=e.replace(".",t.radixPoint))}var n=e.match(/,/g),r=e.match(/\./g);if(e=r&&n?r.length>n.length?(e=e.replace(/\./g,"")).replace(",",t.radixPoint):n.length>r.length?(e=e.replace(/,/g,"")).replace(".",t.radixPoint):e.indexOf(".")<e.indexOf(",")?e.replace(/\./g,""):e.replace(/,/g,""):e.replace(new RegExp(v.escapeRegex(t.groupSeparator),"g"),""),0===t.digits&&(-1!==e.indexOf(".")?e=e.substring(0,e.indexOf(".")):-1!==e.indexOf(",")&&(e=e.substring(0,e.indexOf(",")))),""!==t.radixPoint&&isFinite(t.digits)&&-1!==e.indexOf(t.radixPoint)){var s=e.split(t.radixPoint)[1].match(new RegExp("\\d*"))[0];if(parseInt(t.digits)<s.toString().length){var o=Math.pow(10,parseInt(t.digits));e=e.replace(v.escapeRegex(t.radixPoint),"."),e=(e=Math.round(parseFloat(e)*o)/o).toString().replace(".",t.radixPoint)}}return e},canClearPosition:function(e,t,i,a,n){var r=e.validPositions[t],s=r.input!==n.radixPoint||null!==e.validPositions[t].match.fn&&!1===n.decimalProtect||r.input===n.radixPoint&&e.validPositions[t+1]&&null===e.validPositions[t+1].match.fn||isFinite(r.input)||t===i||r.input===n.groupSeparator||r.input===n.negationSymbol.front||r.input===n.negationSymbol.back;return!s||"+"!==r.match.nativeDef&&"-"!==r.match.nativeDef||(n.isNegative=!1),s},onKeyDown:function(e,t,i,a){var n=m(this);if(e.ctrlKey)switch(e.keyCode){case v.keyCode.UP:n.val(parseFloat(this.inputmask.unmaskedvalue())+parseInt(a.step)),n.trigger("setvalue");break;case v.keyCode.DOWN:n.val(parseFloat(this.inputmask.unmaskedvalue())-parseInt(a.step)),n.trigger("setvalue")}}},currency:{prefix:"$ ",groupSeparator:",",alias:"numeric",placeholder:"0",autoGroup:!0,digits:2,digitsOptional:!1,clearMaskOnLostFocus:!1},decimal:{alias:"numeric"},integer:{alias:"numeric",digits:0,radixPoint:""},percentage:{alias:"numeric",digits:2,digitsOptional:!0,radixPoint:".",placeholder:"0",autoGroup:!1,min:0,max:100,suffix:" %",allowMinus:!1}}),v})?a.apply(t,n):a)&&(e.exports=r)},function(e,t,i){"use strict";var a,n,r;n=[i(0),i(1)],void 0!==(r="function"==typeof(a=function(s,t){function i(e,t){var i=(e.mask||e).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),a=(t.mask||t).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),n=(e.mask||e).split("#")[0],r=(t.mask||t).split("#")[0];return 0===r.indexOf(n)?-1:0===n.indexOf(r)?1:i.localeCompare(a)}var a=t.prototype.analyseMask;return t.prototype.analyseMask=function(o,e,n){function l(e,t,i){t=t||"",i=i||c,""!==t&&(i[t]={});for(var a="",n=i[t]||i,r=e.length-1;r>=0;r--)n[a=(o=e[r].mask||e[r]).substr(0,1)]=n[a]||[],n[a].unshift(o.substr(1)),e.splice(r,1);for(var s in n)n[s].length>500&&l(n[s].slice(),s,n)}function r(e){var t="",i=[];for(var a in e)s.isArray(e[a])?1===e[a].length?i.push(a+e[a]):i.push(a+n.groupmarker.start+e[a].join(n.groupmarker.end+n.alternatormarker+n.groupmarker.start)+n.groupmarker.end):i.push(a+r(e[a]));return 1===i.length?t+=i[0]:t+=n.groupmarker.start+i.join(n.groupmarker.end+n.alternatormarker+n.groupmarker.start)+n.groupmarker.end,t}var c={};return n.phoneCodes&&(n.phoneCodes&&n.phoneCodes.length>1e3&&(l((o=o.substr(1,o.length-2)).split(n.groupmarker.end+n.alternatormarker+n.groupmarker.start)),o=r(c)),o=o.replace(/9/g,"\\9")),a.call(this,o,e,n)},t.extendAliases({abstractphone:{groupmarker:{start:"<",end:">"},countrycode:"",phoneCodes:[],mask:function(e){return e.definitions={"#":t.prototype.definitions[9]},e.phoneCodes.sort(i)},keepStatic:!0,onBeforeMask:function(e,t){var i=e.replace(/^0{1,2}/,"").replace(/[\s]/g,"");return(i.indexOf(t.countrycode)>1||-1===i.indexOf(t.countrycode))&&(i="+"+t.countrycode+i),i},onUnMask:function(e,t,i){return e.replace(/[()#-]/g,"")},inputmode:"tel"}}),t})?a.apply(t,n):a)&&(e.exports=r)},function(e,t,i){"use strict";var a,n,r;n=[i(0),i(1)],void 0!==(r="function"==typeof(a=function($,e){return e.extendAliases({Regex:{mask:"r",greedy:!1,repeat:"*",regex:null,regexTokens:null,tokenizer:/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,quantifierFilter:/[0-9]+[^,]/,isComplete:function(e,t){return new RegExp(t.regex,t.casing?"i":"").test(e.join(""))},definitions:{r:{validator:function(e,t,i,a,v){function c(e,t){this.matches=[],this.isGroup=e||!1,this.isQuantifier=t||!1,this.quantifier={min:1,max:1},this.repeaterPart=void 0}function g(e,t){var i=!1;t&&(y+="(",b++);for(var a=0;a<e.matches.length;a++){var n=e.matches[a];if(!0===n.isGroup)i=g(n,!0);else if(!0===n.isQuantifier){var r=$.inArray(n,e.matches),s=e.matches[r-1],o=y;if(isNaN(n.quantifier.max)){for(;n.repeaterPart&&n.repeaterPart!==y&&n.repeaterPart.length>y.length&&!(i=g(s,!0)););(i=i||g(s,!0))&&(n.repeaterPart=y),y=o+n.quantifier.max}else{for(var l=0,c=n.quantifier.max-1;l<c&&!(i=g(s,!0));l++);y=o+"{"+n.quantifier.min+","+n.quantifier.max+"}"}}else if(void 0!==n.matches)for(var d=0;d<n.length&&!(i=g(n[d],t));d++);else{var u;if("["==n.charAt(0)){u=y,u+=n;for(h=0;h<b;h++)u+=")";i=(m=new RegExp("^("+u+")$",v.casing?"i":"")).test(_)}else for(var p=0,f=n.length;p<f;p++)if("\\"!==n.charAt(p)){u=y,u=(u+=n.substr(0,p+1)).replace(/\|$/,"");for(var h=0;h<b;h++)u+=")";var m=new RegExp("^("+u+")$",v.casing?"i":"");if(i=m.test(_))break}y+=n}if(i)break}return t&&(y+=")",b--),i}var _,d,n=t.buffer.slice(),y="",r=!1,b=0;null===v.regexTokens&&function(){var e,t,i=new c,a=[];for(v.regexTokens=[];e=v.tokenizer.exec(v.regex);)switch((t=e[0]).charAt(0)){case"(":a.push(new c(!0));break;case")":d=a.pop(),a.length>0?a[a.length-1].matches.push(d):i.matches.push(d);break;case"{":case"+":case"*":var n=new c(!1,!0),r=(t=t.replace(/[{}]/g,"")).split(","),s=isNaN(r[0])?r[0]:parseInt(r[0]),o=1===r.length?s:isNaN(r[1])?r[1]:parseInt(r[1]);if(n.quantifier={min:s,max:o},a.length>0){var l=a[a.length-1].matches;(e=l.pop()).isGroup||((d=new c(!0)).matches.push(e),e=d),l.push(e),l.push(n)}else(e=i.matches.pop()).isGroup||((d=new c(!0)).matches.push(e),e=d),i.matches.push(e),i.matches.push(n);break;default:a.length>0?a[a.length-1].matches.push(t):i.matches.push(t)}i.matches.length>0&&v.regexTokens.push(i)}(),n.splice(i,0,e),_=n.join("");for(var s=0;s<v.regexTokens.length;s++){var o=v.regexTokens[s];if(r=g(o,o.isGroup))break}return r},cardinality:1}}}}),e})?a.apply(t,n):a)&&(e.exports=r)},function(e,t,i){"use strict";var a,n,r,s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};n=[i(2),i(1)],void 0!==(r="function"==typeof(a=function(n,r){return void 0===n.fn.inputmask&&(n.fn.inputmask=function(e,t){var i,a=this[0];if(void 0===t&&(t={}),"string"==typeof e)switch(e){case"unmaskedvalue":return a&&a.inputmask?a.inputmask.unmaskedvalue():n(a).val();case"remove":return this.each(function(){this.inputmask&&this.inputmask.remove()});case"getemptymask":return a&&a.inputmask?a.inputmask.getemptymask():"";case"hasMaskedValue":return!(!a||!a.inputmask)&&a.inputmask.hasMaskedValue();case"isComplete":return!a||!a.inputmask||a.inputmask.isComplete();case"getmetadata":return a&&a.inputmask?a.inputmask.getmetadata():void 0;case"setvalue":n(a).val(t),a&&void 0===a.inputmask&&n(a).triggerHandler("setvalue");break;case"option":if("string"!=typeof t)return this.each(function(){if(void 0!==this.inputmask)return this.inputmask.option(t)});if(a&&void 0!==a.inputmask)return a.inputmask.option(t);break;default:return t.alias=e,i=new r(t),this.each(function(){i.mask(this)})}else{if("object"==(void 0===e?"undefined":s(e)))return i=new r(e),void 0===e.mask&&void 0===e.alias?this.each(function(){if(void 0!==this.inputmask)return this.inputmask.option(e);i.mask(this)}):this.each(function(){i.mask(this)});if(void 0===e)return this.each(function(){(i=new r(t)).mask(this)})}}),n.fn.inputmask})?a.apply(t,n):a)&&(e.exports=r)}]);var $jscomp={scope:{},findInternal:function(e,t,i){e instanceof String&&(e=String(e));for(var a=e.length,n=0;n<a;n++){var r=e[n];if(t.call(i,r,n,e))return{i:n,v:r}}return{i:-1,v:void 0}}};function kto_fns(){var e=$(this).val().slice(1);"n"==$(this).val()[0]&&($(".js-ajax-new-profi[id=1]").trigger("click"),$(".js-options-supply-1").hide(),$(".js-options-supply-1").after('<div class="b_loading_small js-metka" style="position:relative; margin-bottom: 20px; "><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("acc","new_contractor","GET","url="+window.location.href+"&inn="+e,"Afterkto_fns",0,0))}function Afterkto_fns(e,t){if("reg"!=e.status)return"ok"==e.status?($(".js-options-supply-1").find("[name=name_contractor]").val(e.name).trigger("click"),$(".js-options-supply-1").find("[name=address_contractor]").val(e.adress).trigger("click"),$(".js-options-supply-1").find("[name=dir_contractor]").val(e.dir).trigger("click"),$(".js-options-supply-1").find("[name=inn_contractor]").val(e.inn).trigger("click"),$(".js-options-supply-1").find("[name=ogrn_contractor]").val(e.ogrn).trigger("click"),$(".js-options-supply-1").find("[name=name_small_contractor]").val(e.name_small),$(".js-options-supply-1").find("[name=status_contractor]").val(e.status_f),$(".js-metka").remove(),void $(".js-options-supply-1").slideDown("slow")):void alert_message("error","Ошибка выбора поставщика. Попробуйте еще раз.");WindowLogin()}function AfterSignAcc(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){var i=$(".content_block").attr("iu"),a=$.cookie("current_supply_"+i);null!=a&&a==t&&($.cookie("current_supply_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$.cookie("basket_score_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$.cookie("basket_supply_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$(".js-basket-supply-acc").hide(),$(".js-basket-supply-acc").removeClass("more-active-s"),$(".js-basket-supply-acc").removeClass("more-active-s1"),$(".js-basket-supply-acc .more_supply1").find("i").empty(),$(".checher_supply").removeClass("checher_supply"),$(".score_active").removeClass("score_active")),$("[rel_score="+t+"]").next().find("[rel=2]").parents("li").hide(),$("[rel_score="+t+"]").next().find("[rel=3]").parents("li").hide(),$("[rel_score="+t+"]").next().find("[rel=4]").parents("li").hide(),$("[rel_score="+t+"]").find(".js-state-acc-link").remove(),$("[rel_score="+t+"]").find("i").after(e.echo),$("[rel_score="+t+"]").parents("[supply_stock]").each(function(e,t){UpdateStatusADA($(this).attr("supply_stock").split("_")[0])}),alert_message("ok","Счет отправлен на согласование")}"error"==e.status&&alert_message("error","Ошибка - попробуйте еще раз");var n=$(".box-modal:last");clearInterval(timerId),n.find(".arcticmodal-close").click()}function RejectFoA(){if(!$(this).is(".gray-bb")){var e=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_acc_reject.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}}function ForwardFoA(){if(!$(this).is(".gray-bb")){var e=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_acc_forward.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}}function SingFoA(){if(!$(this).is(".gray-bb")){var e=$(this);if(!e.hasClass("gray-bb"))if(1==e.find("input").val()){var t=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_acc_remark.php?id="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}else $("#js-form-next-sign").submit()}}function SingFoEnd(){if(!$(this).is(".gray-bb")&&!$(this).hasClass("gray-bb")){var e=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_yes_bill.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}}function SingFoPay(){if(!$(this).is(".gray-bb")&&!$(this).hasClass("gray-bb")){var e=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_booker_yes.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}}$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,i){if(i.get||i.set)throw new TypeError("ES3 does not support getters and setters.");e!=Array.prototype&&e!=Object.prototype&&(e[t]=i.value)},$jscomp.getGlobal=function(e){return("undefined"==typeof window||window!==e)&&"undefined"!=typeof global&&null!=global?global:e},$jscomp.global=$jscomp.getGlobal(this),$jscomp.polyfill=function(e,t,i,a){if(t){for(i=$jscomp.global,e=e.split("."),a=0;a<e.length-1;a++){var n=e[a];n in i||(i[n]={}),i=i[n]}(t=t(a=i[e=e[e.length-1]]))!=a&&null!=t&&$jscomp.defineProperty(i,e,{configurable:!0,writable:!0,value:t})}},$jscomp.polyfill("Array.prototype.find",function(e){return e||function(e,t){return $jscomp.findInternal(this,e,t).v}},"es6-impl","es3"),function(e,t,i){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):e(t||i)}(function(s){function o(c,y,b){var $={invalid:[],getCaret:function(){try{var e,t=0,i=c.get(0),a=document.selection,n=i.selectionStart;return a&&-1===navigator.appVersion.indexOf("MSIE 10")?((e=a.createRange()).moveStart("character",-$.val().length),t=e.text.length):!n&&"0"!==n||(t=n),t}catch(e){}},setCaret:function(e){try{if(c.is(":focus")){var t,i=c.get(0);i.setSelectionRange?i.setSelectionRange(e,e):((t=i.createTextRange()).collapse(!0),t.moveEnd("character",e),t.moveStart("character",e),t.select())}}catch(e){}},events:function(){c.on("keydown.mask",function(e){c.data("mask-keycode",e.keyCode||e.which),c.data("mask-previus-value",c.val()),c.data("mask-previus-caret-pos",$.getCaret()),$.maskDigitPosMapOld=$.maskDigitPosMap}).on(s.jMaskGlobals.useInput?"input.mask":"keyup.mask",$.behaviour).on("paste.mask drop.mask",function(){setTimeout(function(){c.keydown().keyup()},100)}).on("change.mask",function(){c.data("changed",!0)}).on("blur.mask",function(){r===$.val()||c.data("changed")||c.trigger("change"),c.data("changed",!1)}).on("blur.mask",function(){r=$.val()}).on("focus.mask",function(e){!0===b.selectOnFocus&&s(e.target).select()}).on("focusout.mask",function(){b.clearIfNotMatch&&!a.test($.val())&&$.val("")})},getRegexMask:function(){for(var e,t,i,a,n=[],r=0;r<y.length;r++)(e=k.translation[y.charAt(r)])?(t=e.pattern.toString().replace(/.{1}$|^.{1}/g,""),i=e.optional,(e=e.recursive)?(n.push(y.charAt(r)),a={digit:y.charAt(r),pattern:t}):n.push(i||e?t+"?":t)):n.push(y.charAt(r).replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"));return n=n.join(""),a&&(n=n.replace(new RegExp("("+a.digit+"(.*"+a.digit+")?)"),"($1)?").replace(new RegExp(a.digit,"g"),a.pattern)),new RegExp(n)},destroyEvents:function(){c.off("input keydown keyup paste drop blur focusout ".split(" ").join(".mask "))},val:function(e){var t=c.is("input")?"val":"text";return t=0<arguments.length?(c[t]()!==e&&c[t](e),c):c[t]()},calculateCaretPosition:function(){var e=c.data("mask-previus-value")||"",t=$.getMasked(),i=$.getCaret();if(e!==t){var a,n=c.data("mask-previus-caret-pos")||0,r=(t=t.length,e.length),s=e=0,o=0,l=0;for(a=i;a<t&&$.maskDigitPosMap[a];a++)s++;for(a=i-1;0<=a&&$.maskDigitPosMap[a];a--)e++;for(a=i-1;0<=a;a--)$.maskDigitPosMap[a]&&o++;for(a=n-1;0<=a;a--)$.maskDigitPosMapOld[a]&&l++;r<i?i=10*t:i<=n&&n!==r?$.maskDigitPosMapOld[i]||(i=(n=i)-(l-o)-e,$.maskDigitPosMap[i]&&(i=n)):n<i&&(i=i+(o-l)+s)}return i},behaviour:function(e){e=e||window.event,$.invalid=[];var t=c.data("mask-keycode");if(-1===s.inArray(t,k.byPassKeys)){t=$.getMasked();var i=$.getCaret();return setTimeout(function(){$.setCaret($.calculateCaretPosition())},s.jMaskGlobals.keyStrokeCompensation),$.val(t),$.setCaret(i),$.callbacks(e)}},getMasked:function(e,t){var i,a,n,r=[],s=void 0===t?$.val():t+"",o=0,l=y.length,c=0,d=s.length,u=1,p="push",f=-1,h=0,m=[];for(a=b.reverse?(p="unshift",u=-1,i=0,o=l-1,c=d-1,function(){return-1<o&&-1<c}):(i=l-1,function(){return o<l&&c<d});a();){var v=y.charAt(o),g=s.charAt(c),_=k.translation[v];_?(g.match(_.pattern)?(r[p](g),_.recursive&&(-1===f?f=o:o===i&&o!==f&&(o=f-u),i===f&&(o-=u)),o+=u):g===n?(h--,n=void 0):_.optional?(o+=u,c-=u):_.fallback?(r[p](_.fallback),o+=u,c-=u):$.invalid.push({p:c,v:g,e:_.pattern}),c+=u):(e||r[p](v),g===v?(m.push(c),c+=u):(n=v,m.push(c+h),h++),o+=u)}return s=y.charAt(i),l!==d+1||k.translation[s]||r.push(s),r=r.join(""),$.mapMaskdigitPositions(r,m,d),r},mapMaskdigitPositions:function(e,t,i){for(e=b.reverse?e.length-i:0,$.maskDigitPosMap={},i=0;i<t.length;i++)$.maskDigitPosMap[t[i]+e]=1},callbacks:function(e){function t(e,t,i){"function"==typeof b[e]&&t&&b[e].apply(this,i)}var i=$.val(),a=i!==r,n=[i,e,c,b];t("onChange",!0==a,n),t("onKeyPress",!0==a,n),t("onComplete",i.length===y.length,n),t("onInvalid",0<$.invalid.length,[i,e,c,$.invalid,b])}};c=s(c);var a,k=this,r=$.val();y="function"==typeof y?y($.val(),void 0,c,b):y,k.mask=y,k.options=b,k.remove=function(){var e=$.getCaret();return k.options.placeholder&&c.removeAttr("placeholder"),c.data("mask-maxlength")&&c.removeAttr("maxlength"),$.destroyEvents(),$.val(k.getCleanVal()),$.setCaret(e),c},k.getCleanVal=function(){return $.getMasked(!0)},k.getMaskedVal=function(e){return $.getMasked(!1,e)},k.init=function(e){if(e=e||!1,b=b||{},k.clearIfNotMatch=s.jMaskGlobals.clearIfNotMatch,k.byPassKeys=s.jMaskGlobals.byPassKeys,k.translation=s.extend({},s.jMaskGlobals.translation,b.translation),k=s.extend(!0,{},k,b),a=$.getRegexMask(),e)$.events(),$.val($.getMasked());else{b.placeholder&&c.attr("placeholder",b.placeholder),c.data("mask")&&c.attr("autocomplete","off");for(var t=!(e=0);e<y.length;e++){var i=k.translation[y.charAt(e)];if(i&&i.recursive){t=!1;break}}t&&c.attr("maxlength",y.length).data("mask-maxlength",!0),$.destroyEvents(),$.events(),e=$.getCaret(),$.val($.getMasked()),$.setCaret(e)}},k.init(!c.is("input"))}s.maskWatchers={};function t(){var e=s(this),t={},i=e.attr("data-mask");if(e.attr("data-mask-reverse")&&(t.reverse=!0),e.attr("data-mask-clearifnotmatch")&&(t.clearIfNotMatch=!0),"true"===e.attr("data-mask-selectonfocus")&&(t.selectOnFocus=!0),l(e,i,t))return e.data("mask",new o(this,i,t))}var l=function(e,t,i){i=i||{};var a=s(e).data("mask"),n=JSON.stringify;e=s(e).val()||s(e).text();try{return"function"==typeof t&&(t=t(e)),"object"!=typeof a||n(a.options)!==n(i)||a.mask!==t}catch(e){}},e=function(e){var t,i=document.createElement("div");return(t=(e="on"+e)in i)||(i.setAttribute(e,"return;"),t="function"==typeof i[e]),t};s.fn.mask=function(e,t){t=t||{};function i(){if(l(this,e,t))return s(this).data("mask",new o(this,e,t))}var a=this.selector,n=(r=s.jMaskGlobals).watchInterval,r=t.watchInputs||r.watchInputs;return s(this).each(i),a&&""!==a&&r&&(clearInterval(s.maskWatchers[a]),s.maskWatchers[a]=setInterval(function(){s(document).find(a).each(i)},n)),this},s.fn.masked=function(e){return this.data("mask").getMaskedVal(e)},s.fn.unmask=function(){return clearInterval(s.maskWatchers[this.selector]),delete s.maskWatchers[this.selector],this.each(function(){var e=s(this).data("mask");e&&e.remove().removeData("mask")})},s.fn.cleanVal=function(){return this.data("mask").getCleanVal()},s.applyDataMask=function(e){((e=e||s.jMaskGlobals.maskElements)instanceof s?e:s(e)).filter(s.jMaskGlobals.dataMaskAttr).each(t)},e={maskElements:"input,td,span,div",dataMaskAttr:"*[data-mask]",dataMask:!0,watchInterval:300,watchInputs:!0,keyStrokeCompensation:10,useInput:!/Chrome\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent)&&e("input"),watchDataMask:!1,byPassKeys:[9,16,17,18,36,37,38,39,40,91],translation:{0:{pattern:/\d/},9:{pattern:/\d/,optional:!0},"#":{pattern:/\d/,recursive:!0},A:{pattern:/[a-zA-Z0-9]/},S:{pattern:/[a-zA-Z]/}}},s.jMaskGlobals=s.jMaskGlobals||{},(e=s.jMaskGlobals=s.extend(!0,{},e,s.jMaskGlobals)).dataMask&&s.applyDataMask(),setInterval(function(){s.jMaskGlobals.watchDataMask&&s.applyDataMask()},e.watchInterval)},window.jQuery,window.Zepto),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof module&&module.exports?module.exports=e(require("jquery")):e(jQuery)}(function(s){"use strict";function g(e){return!e.nodeName||-1!==s.inArray(e.nodeName.toLowerCase(),["iframe","#document","html","body"])}function t(e){return s.isFunction(e)||s.isPlainObject(e)?e:{top:e,left:e}}var _=s.scrollTo=function(e,t,i){return s(window).scrollTo(e,t,i)};return _.defaults={axis:"xy",duration:0,limit:!0},s.fn.scrollTo=function(e,i,m){"object"==typeof i&&(m=i,i=0),"function"==typeof m&&(m={onAfter:m}),"max"===e&&(e=9e9),m=s.extend({},_.defaults,m),i=i||m.duration;var v=m.queue&&1<m.axis.length;return v&&(i/=2),m.offset=t(m.offset),m.over=t(m.over),this.each(function(){function o(e){var t=s.extend({},m,{queue:!0,duration:i,complete:e&&function(){e.call(d,p,m)}});u.animate(f,t)}if(null!==e){var l,c=g(this),d=c?this.contentWindow||window:this,u=s(d),p=e,f={};switch(typeof p){case"number":case"string":if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(p)){p=t(p);break}p=c?s(p):s(p,d);case"object":if(0===p.length)return;(p.is||p.style)&&(l=(p=s(p)).offset())}var h=s.isFunction(m.offset)&&m.offset(d,p)||m.offset;s.each(m.axis.split(""),function(e,t){var i="x"===t?"Left":"Top",a=i.toLowerCase(),n="scroll"+i,r=u[n](),s=_.max(d,t);l?(f[n]=l[a]+(c?0:r-u.offset()[a]),m.margin&&(f[n]-=parseInt(p.css("margin"+i),10)||0,f[n]-=parseInt(p.css("border"+i+"Width"),10)||0),f[n]+=h[a]||0,m.over[a]&&(f[n]+=p["x"===t?"width":"height"]()*m.over[a])):(i=p[a],f[n]=i.slice&&"%"===i.slice(-1)?parseFloat(i)/100*s:i),m.limit&&/^\d+$/.test(f[n])&&(f[n]=f[n]<=0?0:Math.min(f[n],s)),!e&&1<m.axis.length&&(r===f[n]?f={}:v&&(o(m.onAfterFirst),f={}))}),o(m.onAfter)}})},_.max=function(e,t){var i="scroll"+(a="x"===t?"Width":"Height");if(!g(e))return e[i]-s(e)[a.toLowerCase()]();var a="client"+a,n=(r=e.ownerDocument||e.document).documentElement,r=r.body;return Math.max(n[i],r[i])-Math.min(n[a],r[a])},s.Tween.propHooks.scrollLeft=s.Tween.propHooks.scrollTop={get:function(e){return s(e.elem)[e.prop]()},set:function(e){var t=this.get(e);if(e.options.interrupt&&e._last&&e._last!==t)return s(e.elem).stop();var i=Math.round(e.now);t!==i&&(s(e.elem)[e.prop](i),e._last=this.get(e))}},_}),function(w){jQuery.fn.extend({slimScroll:function($){var k=w.extend({width:"auto",height:"250px",size:"7px",color:"#000",position:"right",distance:"1px",start:"top",opacity:.4,alwaysVisible:!1,disableFadeOut:!1,railVisible:!1,railColor:"#333",railOpacity:.2,railDraggable:!0,railClass:"slimScrollRail",barClass:"slimScrollBar",wrapperClass:"slimScrollDiv",allowPageScroll:!1,wheelStep:20,touchScrollStep:200,borderRadius:"7px",railBorderRadius:"7px"},$);return this.each(function(){function e(e){var t=0;(e=e||window.event).wheelDelta&&(t=-e.wheelDelta/120),e.detail&&(t=e.detail/3),w(e.target||e.srcTarget||e.srcElement).closest("."+k.wrapperClass).is(v.parent())&&a(t,!0),e.preventDefault&&!m&&e.preventDefault(),m||(e.returnValue=!1)}function a(e,t,i){m=!1;var a=e,n=v.outerHeight()-_.outerHeight();t&&(a=parseInt(_.css("top"))+e*parseInt(k.wheelStep)/100*_.outerHeight(),a=Math.min(Math.max(a,0),n),a=0<e?Math.ceil(a):Math.floor(a),_.css({top:a+"px"})),a=(p=parseInt(_.css("top"))/(v.outerHeight()-_.outerHeight()))*(v[0].scrollHeight-v.outerHeight()),i&&(e=(a=e)/v[0].scrollHeight*v.outerHeight(),e=Math.min(Math.max(e,0),n),_.css({top:e+"px"})),v.scrollTop(a),v.trigger("slimscrolling",~~a),r(),s()}function i(){u=Math.max(v.outerHeight()/v[0].scrollHeight*v.outerHeight(),h),_.css({height:u+"px"});var e=u==v.outerHeight()?"none":"block";_.css({display:e})}function r(){i(),clearTimeout(c),p==~~p?(m=k.allowPageScroll,f!=p&&v.trigger("slimscroll",0==~~p?"top":"bottom")):m=!1,f=p,u>=v.outerHeight()?m=!0:(_.stop(!0,!0).fadeIn("fast"),k.railVisible&&y.stop(!0,!0).fadeIn("fast"))}function s(){k.alwaysVisible||(c=setTimeout(function(){k.disableFadeOut&&n||o||l||(_.fadeOut("slow"),y.fadeOut("slow"))},1e3))}var n,o,l,c,d,u,p,f,h=30,m=!1,v=w(this);if(v.parent().hasClass(k.wrapperClass)){var g=v.scrollTop(),_=v.parent().find("."+k.barClass),y=v.parent().find("."+k.railClass);if(i(),w.isPlainObject($)){if("height"in $&&"auto"==$.height){v.parent().css("height","auto"),v.css("height","auto");var b=v.parent().parent().height();v.parent().css("height",b),v.css("height",b)}if("scrollTo"in $)g=parseInt(k.scrollTo);else if("scrollBy"in $)g+=parseInt(k.scrollBy);else if("destroy"in $)return _.remove(),y.remove(),void v.unwrap();a(g,!1,!0)}}else{k.height="auto"==$.height?v.parent().height():$.height,g=w("<div></div>").addClass(k.wrapperClass).css({position:"relative",overflow:"hidden",width:k.width,height:k.height}),v.css({overflow:"hidden",width:k.width,height:k.height});y=w("<div></div>").addClass(k.railClass).css({width:k.size,height:"100%",position:"absolute",top:0,display:k.alwaysVisible&&k.railVisible?"block":"none","border-radius":k.railBorderRadius,background:k.railColor,opacity:k.railOpacity,zIndex:90}),_=w("<div></div>").addClass(k.barClass).css({background:k.color,width:k.size,position:"absolute",top:0,opacity:k.opacity,display:k.alwaysVisible?"block":"none","border-radius":k.borderRadius,BorderRadius:k.borderRadius,MozBorderRadius:k.borderRadius,WebkitBorderRadius:k.borderRadius,zIndex:99}),b="right"==k.position?{right:k.distance}:{left:k.distance};y.css(b),_.css(b),v.wrap(g),v.parent().append(_),v.parent().append(y),k.railDraggable&&_.bind("mousedown",function(e){var i=w(document);return l=!0,t=parseFloat(_.css("top")),pageY=e.pageY,i.bind("mousemove.slimscroll",function(e){currTop=t+e.pageY-pageY,_.css("top",currTop),a(0,_.position().top,!1)}),i.bind("mouseup.slimscroll",function(e){l=!1,s(),i.unbind(".slimscroll")}),!1}).bind("selectstart.slimscroll",function(e){return e.stopPropagation(),e.preventDefault(),!1}),y.hover(function(){r()},function(){s()}),_.hover(function(){o=!0},function(){o=!1}),v.hover(function(){n=!0,r(),s()},function(){n=!1,s()}),v.bind("touchstart",function(e,t){e.originalEvent.touches.length&&(d=e.originalEvent.touches[0].pageY)}),v.bind("touchmove",function(e){m||e.originalEvent.preventDefault(),e.originalEvent.touches.length&&(a((d-e.originalEvent.touches[0].pageY)/k.touchScrollStep,!0),d=e.originalEvent.touches[0].pageY)}),i(),"bottom"===k.start?(_.css({top:v.outerHeight()-_.outerHeight()}),a(0,!0)):"top"!==k.start&&(a(w(k.start).position().top,null,!0),k.alwaysVisible||_.hide()),function(){window.addEventListener?(this.addEventListener("DOMMouseScroll",e,!1),this.addEventListener("mousewheel",e,!1)):document.attachEvent("onmousewheel",e)}()}}),this}}),jQuery.fn.extend({slimscroll:jQuery.fn.slimScroll})}(jQuery),function(e){"function"==typeof define&&define.amd?define([],function(){return e()}):"object"==typeof exports?module.exports=e():e()}(function(){!function(t,i){"use strict";function e(e){return this.core=t(e).data("lightGallery"),this.$el=t(e),this.core.s=t.extend({},a,this.core.s),this.init(),this}var a={fullScreen:!0};e.prototype.init=function(){var e="";if(this.core.s.fullScreen){if(!(i.fullscreenEnabled||i.webkitFullscreenEnabled||i.mozFullScreenEnabled||i.msFullscreenEnabled))return;e='<span class="lg-fullscreen lg-icon"></span>',this.core.$outer.find(".lg-toolbar").append(e),this.fullScreen()}},e.prototype.requestFullscreen=function(){var e=i.documentElement;e.requestFullscreen?e.requestFullscreen():e.msRequestFullscreen?e.msRequestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen&&e.webkitRequestFullscreen()},e.prototype.exitFullscreen=function(){i.exitFullscreen?i.exitFullscreen():i.msExitFullscreen?i.msExitFullscreen():i.mozCancelFullScreen?i.mozCancelFullScreen():i.webkitExitFullscreen&&i.webkitExitFullscreen()},e.prototype.fullScreen=function(){var e=this;t(i).on("fullscreenchange.lg webkitfullscreenchange.lg mozfullscreenchange.lg MSFullscreenChange.lg",function(){e.core.$outer.toggleClass("lg-fullscreen-on")}),this.core.$outer.find(".lg-fullscreen").on("click.lg",function(){i.fullscreenElement||i.mozFullScreenElement||i.webkitFullscreenElement||i.msFullscreenElement?e.exitFullscreen():e.requestFullscreen()})},e.prototype.destroy=function(){this.exitFullscreen(),t(i).off("fullscreenchange.lg webkitfullscreenchange.lg mozfullscreenchange.lg MSFullscreenChange.lg")},t.fn.lightGallery.modules.fullscreen=e}(jQuery,(window,document))}),function(e){"function"==typeof define&&define.amd?define([],function(){return e()}):"object"==typeof exports?module.exports=e():e()}(function(){!function(c,d){"use strict";function e(e){return this.core=c(e).data("lightGallery"),this.core.s=c.extend({},t,this.core.s),this.$el=c(e),this.$thumbOuter=null,this.thumbOuterWidth=0,this.thumbTotalWidth=this.core.$items.length*(this.core.s.thumbWidth+this.core.s.thumbMargin),this.thumbIndex=this.core.index,this.left=0,this.init(),this}var t={thumbnail:!0,animateThumb:!0,currentPagerPosition:"middle",thumbWidth:100,thumbContHeight:100,thumbMargin:5,exThumbImage:!1,showThumbByDefault:!0,toogleThumb:!0,pullCaptionUp:!0,enableThumbDrag:!0,enableThumbSwipe:!0,swipeThreshold:50,loadYoutubeThumbnail:!0,youtubeThumbSize:1,loadVimeoThumbnail:!0,vimeoThumbSize:"thumbnail_small",loadDailymotionThumbnail:!0};e.prototype.init=function(){var e=this;this.core.s.thumbnail&&1<this.core.$items.length&&(this.core.s.showThumbByDefault&&setTimeout(function(){e.core.$outer.addClass("lg-thumb-open")},700),this.core.s.pullCaptionUp&&this.core.$outer.addClass("lg-pull-caption-up"),this.build(),this.core.s.animateThumb?(this.core.s.enableThumbDrag&&!this.core.isTouch&&this.core.doCss()&&this.enableThumbDrag(),this.core.s.enableThumbSwipe&&this.core.isTouch&&this.core.doCss()&&this.enableThumbSwipe(),this.thumbClickable=!1):this.thumbClickable=!0,this.toogle(),this.thumbkeyPress())},e.prototype.build=function(){function t(e,t,i){var a,n=s.core.isVideo(e,i)||{},r="";n.youtube||n.vimeo||n.dailymotion?n.youtube?a=s.core.s.loadYoutubeThumbnail?"//img.youtube.com/vi/"+n.youtube[1]+"/"+s.core.s.youtubeThumbSize+".jpg":t:n.vimeo?s.core.s.loadVimeoThumbnail?(a="//i.vimeocdn.com/video/error_"+l+".jpg",r=n.vimeo[1]):a=t:n.dailymotion&&(a=s.core.s.loadDailymotionThumbnail?"//www.dailymotion.com/thumbnail/video/"+n.dailymotion[1]:t):a=t,o+='<div data-vimeo-id="'+r+'" class="lg-thumb-item" style="width:'+s.core.s.thumbWidth+"px; margin-right: "+s.core.s.thumbMargin+'px"><img src="'+a+'" /></div>',r=""}var e,s=this,o="",l="";switch(this.core.s.vimeoThumbSize){case"thumbnail_large":l="640";break;case"thumbnail_medium":l="200x150";break;case"thumbnail_small":l="100x75"}if(s.core.$outer.addClass("lg-has-thumb"),s.core.$outer.find(".lg").append('<div class="lg-thumb-outer"><div class="lg-thumb group"></div></div>'),s.$thumbOuter=s.core.$outer.find(".lg-thumb-outer"),s.thumbOuterWidth=s.$thumbOuter.width(),s.core.s.animateThumb&&s.core.$outer.find(".lg-thumb").css({width:s.thumbTotalWidth+"px",position:"relative"}),this.core.s.animateThumb&&s.$thumbOuter.css("height",s.core.s.thumbContHeight+"px"),s.core.s.dynamic)for(var i=0;i<s.core.s.dynamicEl.length;i++)t(s.core.s.dynamicEl[i].src,s.core.s.dynamicEl[i].thumb,i);else s.core.$items.each(function(e){s.core.s.exThumbImage?t(c(this).attr("href")||c(this).attr("data-src"),c(this).attr(s.core.s.exThumbImage),e):t(c(this).attr("href")||c(this).attr("data-src"),c(this).find("img").attr("src"),e)});s.core.$outer.find(".lg-thumb").html(o),(e=s.core.$outer.find(".lg-thumb-item")).each(function(){var t=c(this),e=t.attr("data-vimeo-id");e&&c.getJSON("//www.vimeo.com/api/v2/video/"+e+".json?callback=?",{format:"json"},function(e){t.find("img").attr("src",e[0][s.core.s.vimeoThumbSize])})}),e.eq(s.core.index).addClass("active"),s.core.$el.on("onBeforeSlide.lg.tm",function(){e.removeClass("active"),e.eq(s.core.index).addClass("active")}),e.on("click.lg touchend.lg",function(){var e=c(this);setTimeout(function(){(!s.thumbClickable||s.core.lgBusy)&&s.core.doCss()||(s.core.index=e.index(),s.core.slide(s.core.index,!1,!0))},50)}),s.core.$el.on("onBeforeSlide.lg.tm",function(){s.animateThumb(s.core.index)}),c(d).on("resize.lg.thumb orientationchange.lg.thumb",function(){setTimeout(function(){s.animateThumb(s.core.index),s.thumbOuterWidth=s.$thumbOuter.width()},200)})},e.prototype.setTranslate=function(e){this.core.$outer.find(".lg-thumb").css({transform:"translate3d(-"+e+"px, 0px, 0px)"})},e.prototype.animateThumb=function(e){var t=this.core.$outer.find(".lg-thumb");if(this.core.s.animateThumb){var i;switch(this.core.s.currentPagerPosition){case"left":i=0;break;case"middle":i=this.thumbOuterWidth/2-this.core.s.thumbWidth/2;break;case"right":i=this.thumbOuterWidth-this.core.s.thumbWidth}this.left=(this.core.s.thumbWidth+this.core.s.thumbMargin)*e-1-i,this.left>this.thumbTotalWidth-this.thumbOuterWidth&&(this.left=this.thumbTotalWidth-this.thumbOuterWidth),this.left<0&&(this.left=0),this.core.lGalleryOn?(t.hasClass("on")||this.core.$outer.find(".lg-thumb").css("transition-duration",this.core.s.speed+"ms"),this.core.doCss()||t.animate({left:-this.left+"px"},this.core.s.speed)):this.core.doCss()||t.css("left",-this.left+"px"),this.setTranslate(this.left)}},e.prototype.enableThumbDrag=function(){var t=this,i=0,a=0,n=!1,r=!1,s=0;t.$thumbOuter.addClass("lg-grab"),t.core.$outer.find(".lg-thumb").on("mousedown.lg.thumb",function(e){t.thumbTotalWidth>t.thumbOuterWidth&&(e.preventDefault(),i=e.pageX,n=!0,t.core.$outer.scrollLeft+=1,--t.core.$outer.scrollLeft,t.thumbClickable=!1,t.$thumbOuter.removeClass("lg-grab").addClass("lg-grabbing"))}),c(d).on("mousemove.lg.thumb",function(e){n&&(s=t.left,r=!0,a=e.pageX,t.$thumbOuter.addClass("lg-dragging"),(s-=a-i)>t.thumbTotalWidth-t.thumbOuterWidth&&(s=t.thumbTotalWidth-t.thumbOuterWidth),s<0&&(s=0),t.setTranslate(s))}),c(d).on("mouseup.lg.thumb",function(){r?(r=!1,t.$thumbOuter.removeClass("lg-dragging"),t.left=s,Math.abs(a-i)<t.core.s.swipeThreshold&&(t.thumbClickable=!0)):t.thumbClickable=!0,n&&(n=!1,t.$thumbOuter.removeClass("lg-grabbing").addClass("lg-grab"))})},e.prototype.enableThumbSwipe=function(){var t=this,i=0,a=0,n=!1,r=0;t.core.$outer.find(".lg-thumb").on("touchstart.lg",function(e){t.thumbTotalWidth>t.thumbOuterWidth&&(e.preventDefault(),i=e.originalEvent.targetTouches[0].pageX,t.thumbClickable=!1)}),t.core.$outer.find(".lg-thumb").on("touchmove.lg",function(e){t.thumbTotalWidth>t.thumbOuterWidth&&(e.preventDefault(),a=e.originalEvent.targetTouches[0].pageX,n=!0,t.$thumbOuter.addClass("lg-dragging"),r=t.left,(r-=a-i)>t.thumbTotalWidth-t.thumbOuterWidth&&(r=t.thumbTotalWidth-t.thumbOuterWidth),r<0&&(r=0),t.setTranslate(r))}),t.core.$outer.find(".lg-thumb").on("touchend.lg",function(){t.thumbTotalWidth>t.thumbOuterWidth&&n?(n=!1,t.$thumbOuter.removeClass("lg-dragging"),Math.abs(a-i)<t.core.s.swipeThreshold&&(t.thumbClickable=!0),t.left=r):t.thumbClickable=!0})},e.prototype.toogle=function(){var e=this;e.core.s.toogleThumb&&(e.core.$outer.addClass("lg-can-toggle"),e.$thumbOuter.append('<span class="lg-toogle-thumb lg-icon"></span>'),e.core.$outer.find(".lg-toogle-thumb").on("click.lg",function(){e.core.$outer.toggleClass("lg-thumb-open")}))},e.prototype.thumbkeyPress=function(){var t=this;c(d).on("keydown.lg.thumb",function(e){38===e.keyCode?(e.preventDefault(),t.core.$outer.addClass("lg-thumb-open")):40===e.keyCode&&(e.preventDefault(),t.core.$outer.removeClass("lg-thumb-open"))})},e.prototype.destroy=function(){this.core.s.thumbnail&&1<this.core.$items.length&&(c(d).off("resize.lg.thumb orientationchange.lg.thumb keydown.lg.thumb"),this.$thumbOuter.remove(),this.core.$outer.removeClass("lg-has-thumb"))},c.fn.lightGallery.modules.Thumbnail=e}(jQuery,window,document)}),window.Modernizr=function(e,l,_){function t(e,t){var i=e.charAt(0).toUpperCase()+e.substr(1);return a((e+" "+m.join(i+" ")+i).split(" "),t)}function a(e,t){for(var i in e)if(f[e[i]]!==_)return"pfx"!=t||e[i];return!1}function i(e,t){return typeof e===t}function n(e){f.cssText=e}function r(e,t,i,a){var n,r,s,o=l.createElement("div");if(parseInt(i,10))for(;i--;)(s=l.createElement("div")).id=a?a[i]:u+(i+1),o.appendChild(s);return n=["&shy;","<style>",e,"</style>"].join(""),o.id=u,o.innerHTML+=n,d.appendChild(o),r=t(o,e),o.parentNode.removeChild(o),!!r}var s,o,c={},d=l.documentElement,u=(l.head||l.getElementsByTagName("head")[0],"modernizr"),p=l.createElement(u),f=p.style,h=(Object.prototype.toString," -webkit- -moz- -o- -ms- -khtml- ".split(" ")),m="Webkit Moz O ms Khtml".split(" "),v={},g=[],y={}.hasOwnProperty;o=i(y,_)||i(y.call,_)?function(e,t){return t in e&&i(e.constructor.prototype[t],_)}:function(e,t){return y.call(e,t)};var b,$,k,w;b=[,"csstransforms3d"],$=[,["@media (",h.join("transform-3d),("),u,")","{#csstransforms3d{left:9px;position:absolute}}"].join("")].join(""),r($,function(e,t){for(var i=l.styleSheets[l.styleSheets.length-1],a=(i.cssRules&&i.cssRules[0]?i.cssRules[0].cssText:i.cssText,e.childNodes),n={};k--;)n[a[k].id]=a[k];c.csstransforms3d=9===n.csstransforms3d.offsetLeft},k=b.length,b);for(var x in v.csstransforms=function(){return!!a(["transformProperty","WebkitTransform","MozTransform","OTransform","msTransform"])},v.csstransforms3d=function(){var e=!!a(["perspectiveProperty","WebkitPerspective","MozPerspective","OPerspective","msPerspective"]);return e&&"webkitPerspective"in d.style&&(e=c.csstransforms3d),e},v.csstransitions=function(){return t("transitionProperty")},v)o(v,x)&&(s=x.toLowerCase(),c[s]=v[x](),g.push((c[s]?"":"no-")+s));return n(""),p=null,e.attachEvent&&((w=l.createElement("div")).innerHTML="<elem></elem>",1!==w.childNodes.length)&&function(e,n){function t(e){for(var t=-1;++t<l;)e.createElement(o[t])}e.iepp=e.iepp||{};var r,s=e.iepp,i=s.html5elements||"abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",o=i.split("|"),l=o.length,a=new RegExp("(^|\\s)("+i+")","gi"),c=new RegExp("<(/*)("+i+")","gi"),d=/^\s*[\{\}]\s*$/,u=new RegExp("(^|[^\\n]*?\\s)("+i+")([^\\n]*)({[\\n\\w\\W]*?})","gi"),p=n.createDocumentFragment(),f=n.documentElement,h=f.firstChild,m=n.createElement("body"),v=n.createElement("style"),g=/print|all/;s.getCSS=function(e,t){if(e+""===_)return"";for(var i,a=-1,n=e.length,r=[];++a<n;)(i=e[a]).disabled||(t=i.media||t,g.test(t)&&r.push(s.getCSS(i.imports,t),i.cssText),t="all");return r.join("")},s.parseCSS=function(e){for(var t,i=[];null!=(t=u.exec(e));)i.push(((d.exec(t[1])?"\n":t[1])+t[2]+t[3]).replace(a,"$1.iepp_$2")+t[4]);return i.join("\n")},s.writeHTML=function(){var e=-1;for(r=r||n.body;++e<l;)for(var t=n.getElementsByTagName(o[e]),i=t.length,a=-1;++a<i;)t[a].className.indexOf("iepp_")<0&&(t[a].className+=" iepp_"+o[e]);p.appendChild(r),f.appendChild(m),m.className=r.className,m.id=r.id,m.innerHTML=r.innerHTML.replace(c,"<$1font")},s._beforePrint=function(){v.styleSheet.cssText=s.parseCSS(s.getCSS(n.styleSheets,"all")),s.writeHTML()},s.restoreHTML=function(){m.innerHTML="",f.removeChild(m),f.appendChild(r)},s._afterPrint=function(){s.restoreHTML(),v.styleSheet.cssText=""},t(n),t(p),s.disablePP||(h.insertBefore(v,h.firstChild),v.media="print",v.className="iepp-printshim",e.attachEvent("onbeforeprint",s._beforePrint),e.attachEvent("onafterprint",s._afterPrint))}(e,l),c._version="2.0.6",c._prefixes=h,c._domPrefixes=m,c.testProp=function(e){return a([e])},c.testAllProps=t,c.testStyles=r,d.className=d.className.replace(/\bno-js\b/,"")+(" js "+g.join(" ")),c}(this,this.document),function(e,f){function h(e){return!e||"loaded"==e||"complete"==e}function m(){for(var e=1,t=-1;b.length-++t&&(!b[t].s||(e=b[t].r)););e&&v()}function v(){var a=b.shift();$=1,a?a.t?_(function(){var e,t,i;"c"==a.t?function(e){var i,t=f.createElement("link");if(t.href=e.s,t.rel="stylesheet",t.type="text/css",e.e||!l&&!r)t.onload=function(){i||(i=1,_(function(){m()},0))},e.e&&t.onload();else{var a=function(t){_(function(){if(!i)try{t.sheet.cssRules.length?(i=1,m()):a(t)}catch(e){1e3==e.code||"security"==e.message||"denied"==e.message?(i=1,_(function(){m()},0)):a(t)}},0)};a(t)}_(function(){i||(i=1,m())},g.errorTimeout),e.e||y.parentNode.insertBefore(t,y)}(a):(e=a,(i=f.createElement("script")).src=e.s,i.onreadystatechange=i.onload=function(){!t&&h(i.readyState)&&(t=1,m(),i.onload=i.onreadystatechange=null)},_(function(){t||(t=1,m())},g.errorTimeout),e.e?i.onload():y.parentNode.insertBefore(i,y))},0):(a(),m()):$=0}function t(e,t,i){var a,n,r,s,o,l,c,d,u="c"==t?C:x;function p(){!c&&h(l.readyState)&&(d.r=c=1,$||m(),l.onload=l.onreadystatechange=null,_(function(){w.removeChild(l)},0))}return $=0,t=t||"j",S(e)?(a=u,n=e,r=t,s=this.i++,o=i,l=f.createElement(a),c=0,d={t:r,s:n,e:o},l.src=l.data=n,k||(l.style.display="none"),l.width=l.height="0","object"!=a&&(l.type=r),l.onload=l.onreadystatechange=p,"img"==a?l.onerror=p:"script"==a&&(l.onerror=function(){d.e=d.r=1,v()}),b.splice(s,0,d),w.insertBefore(l,k?null:y),_(function(){c||(w.removeChild(l),d.r=d.e=c=1,m())},g.errorTimeout)):(b.splice(this.i++,0,e),1==b.length&&v()),this}function o(){var e=g;return e.loader={load:t,i:0},e}function c(e){return Object(e)===e}function d(e){return"[object Function]"==n.call(e)}var i,g,a=f.documentElement,_=e.setTimeout,y=f.getElementsByTagName("script")[0],n={}.toString,b=[],$=0,r="MozAppearance"in a.style,k=r&&!!f.createRange().compareNode,w=k?a:y.parentNode,s=e.opera&&"[object Opera]"==n.call(e.opera),l="webkitAppearance"in a.style,u=l&&"async"in f.createElement("script"),x=r?"object":s||u?"img":"script",C=l?"img":x,p=Array.isArray||function(e){return"[object Array]"==n.call(e)},S=function(e){return"string"==typeof e},T=[],j={};(g=function(e){function l(e,t,i,a,n){var r=function(e){var t,i,a=e.split("!"),n=T.length,r=a.pop(),s=a.length,o={url:r,origUrl:r,prefixes:a};for(i=0;i<s;i++)(t=j[a[i]])&&(o=t(o));for(i=0;i<n;i++)o=T[i](o);return o}(e),s=r.autoCallback;if(!r.bypass){if(t=t&&(d(t)?t:t[e]||t[a]||t[e.split("/").pop().split("?")[0]]),r.instead)return r.instead(e,t,i,a,n);i.load(r.url,r.forceCSS||!r.forceJS&&/css$/.test(r.url)?"c":void 0,r.noexec),(d(t)||d(s))&&i.load(function(){o(),t&&t(r.origUrl,n,a),s&&s(r.origUrl,n,a)})}}function t(e,t){function i(e){if(S(e))l(e,o,t,0,n);else if(c(e))for(a in e)e.hasOwnProperty(a)&&l(e[a],o,t,a,n)}var a,n=!!e.test,r=n?e.yep:e.nope,s=e.load||e.both,o=e.callback;i(r),i(s),e.complete&&t.load(e.complete)}var i,a,n=this.yepnope.loader;if(S(e))l(e,0,n,0);else if(p(e))for(i=0;i<e.length;i++)a=e[i],S(a)?l(a,0,n,0):p(a)?g(a):c(a)&&t(a,n);else c(e)&&t(e,n)}).addPrefix=function(e,t){j[e]=t},g.addFilter=function(e){T.push(e)},g.errorTimeout=1e4,null==f.readyState&&f.addEventListener&&(f.readyState="loading",f.addEventListener("DOMContentLoaded",i=function(){f.removeEventListener("DOMContentLoaded",i,0),f.readyState="complete"},0)),e.yepnope=o()}(this,this.document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))},function(n){"use strict";function a(){for(var e=0;e<_.length;e++)m(_[e],d)}var e,t,i,r,s,o,l,c,d=function(e,t){if(k.push(e.responseText),w.push(t),w.length===_.length){for(var i=0;i<w.length;i++)u(k[i],w[i]);0<(_=y.slice(0)).length?(w=[],k=[],y=[],a()):p()}},u=function(e,t){for(var i,a=v(e).replace(/\/\*[\s\S]*?\*\//g,""),n=a.match(/[\w\d\s\-\/\\\[\]:,.'"*()<>+~%#^$_=|@]+\{[\w\d\s\-\/\\%#:!;,.'"*()]+\d*\.?\d+rem[\w\d\s\-\/\\%#:!;,.'"*()]*\}/g),r=a.match(/\d*\.?\d+rem/g),s=/(.*\/)/.exec(t)[0],o=/@import (?:url\()?['"]?([^'\)"]*)['"]?\)?[^;]*/gm;null!==(i=o.exec(e));)0===i[1].indexOf("/")?y.push(i[1]):y.push(s+i[1]);null!==n&&0!==n.length&&(b=b.concat(n),$=$.concat(r))},p=function(){for(var e=/[\w\d\s\-\/\\%#:,.'"*()]+\d*\.?\d+rem[\w\d\s\-\/\\%#:!,.'"*()]*[;}]/g,t=0;t<b.length;t++){g+=b[t].substr(0,b[t].indexOf("{")+1);for(var i=b[t].match(e),a=0;a<i.length;a++)g+=i[a],a===i.length-1&&"}"!==g[g.length-1]&&(g+="\n}")}f()},f=function(){for(var e=0;e<$.length;e++)x[e]=Math.round(parseFloat($[e].substr(0,$[e].length-3)*C))+"px";h()},h=function(){for(var e=0;e<x.length;e++)x[e]&&(g=g.replace($[e],x[e]));var t=document.createElement("style");t.setAttribute("type","text/css"),t.id="remReplace",document.getElementsByTagName("head")[0].appendChild(t),t.styleSheet?t.styleSheet.cssText=g:t.appendChild(document.createTextNode(g))},m=function(t,i){try{var e=n.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP")||new ActiveXObject("Msxml2.XMLHTTP"):new XMLHttpRequest;e.open("GET",t,!0),e.onreadystatechange=function(){4===e.readyState&&i(e,t)},e.send(null)}catch(e){if(n.XDomainRequest){var a=new XDomainRequest;a.open("get",t),a.onload=function(){i(a,t)},a.onerror=function(){return!1},a.send()}}},v=function(e){return n.matchMedia||n.msMatchMedia||(e=e.replace(/@media[\s\S]*?\}\s*\}/g,"")),e};if((c=document.createElement("div")).style.cssText="font-size: 1rem;",!/rem/.test(c.style.fontSize)){var g="",_=function(){for(var e=document.getElementsByTagName("link"),t=[],i=0;i<e.length;i++)"stylesheet"===e[i].rel.toLowerCase()&&null===e[i].getAttribute("data-norem")&&t.push(e[i].href);return t}(),y=[],b=[],$=[],k=[],w=[],x=[],C="";t=document,i=t.documentElement,r=t.body||t.createElement("body"),s=!t.body,o=t.createElement("div"),l=r.style.fontSize,s&&i.appendChild(r),o.style.cssText="width:1em; position:absolute; visibility:hidden; padding: 0;",r.style.fontSize="1em",r.appendChild(o),e=o.offsetWidth,s?i.removeChild(r):(r.removeChild(o),r.style.fontSize=l),C=e,a()}}(window),function(e){"use strict";var t,i,a,n,r,s;e.matchMedia=e.matchMedia||(t=e.document,a=t.documentElement,n=a.firstElementChild||a.firstChild,r=t.createElement("body"),(s=t.createElement("div")).id="mq-test-1",s.style.cssText="position:absolute;top:-100em",r.style.background="none",r.appendChild(s),function(e){return s.innerHTML='&shy;<style media="'+e+'"> #mq-test-1 { width: 42px; }</style>',a.insertBefore(r,n),i=42===s.offsetWidth,a.removeChild(r),{matches:i,media:e}})}(this),function(g){"use strict";var f={};(g.respond=f).update=function(){};function e(e,t){var i=a();i&&(i.open("GET",e,!0),i.onreadystatechange=function(){4!==i.readyState||200!==i.status&&304!==i.status||t(i.responseText)},4!==i.readyState&&i.send(null))}function h(e){return e.replace(f.regex.minmaxwh,"").match(f.regex.other)}var r=[],a=function(){var t=!1;try{t=new g.XMLHttpRequest}catch(e){t=new g.ActiveXObject("Microsoft.XMLHTTP")}return function(){return t}}();if(f.ajax=e,f.queue=r,f.unsupportedmq=h,f.regex={media:/@media[^\{]+\{([^\{\}]*\{[^\}\{]*\})+/gi,keyframes:/@(?:\-(?:o|moz|webkit)\-)?keyframes[^\{]+\{(?:[^\{\}]*\{[^\}\{]*\})+[^\}]*\}/gi,comments:/\/\*[^*]*\*+([^/][^*]*\*+)*\//gi,urls:/(url\()['"]?([^\/\)'"][^:\)'"]+)['"]?(\))/g,findStyles:/@media *([^\{]+)\{([\S\s]+?)$/,only:/(only\s+)?([a-zA-Z]+)\s?/,minw:/\(\s*min\-width\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/,maxw:/\(\s*max\-width\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/,minmaxwh:/\(\s*m(in|ax)\-(height|width)\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/gi,other:/\([^\)]*\)/g},f.mediaQueriesSupported=g.matchMedia&&null!==g.matchMedia("only all")&&g.matchMedia("only all").matches,!f.mediaQueriesSupported){var _,y,b,$=g.document,k=$.documentElement,w=[],x=[],C=[],s={},S=$.getElementsByTagName("head")[0]||k,o=$.getElementsByTagName("base")[0],T=S.getElementsByTagName("link"),j=function(){var e,t=$.createElement("div"),i=$.body,a=k.style.fontSize,n=i&&i.style.fontSize,r=!1;return t.style.cssText="position:absolute;font-size:1em;width:1em",i||((i=r=$.createElement("body")).style.background="none"),k.style.fontSize="100%",i.style.fontSize="100%",i.appendChild(t),r&&k.insertBefore(i,k.firstChild),e=t.offsetWidth,r?k.removeChild(i):i.removeChild(t),k.style.fontSize=a,n&&(i.style.fontSize=n),e=b=parseFloat(e)},D=function(e){var t="clientWidth",i=k[t],a="CSS1Compat"===$.compatMode&&i||$.body[t]||i,n={},r=T[T.length-1],s=(new Date).getTime();if(e&&_&&s-_<30)return g.clearTimeout(y),void(y=g.setTimeout(D,30));for(var o in _=s,w)if(w.hasOwnProperty(o)){var l=w[o],c=l.minw,d=l.maxw,u=null===c,p=null===d;c=c&&parseFloat(c)*(-1<c.indexOf("em")?b||j():1),d=d&&parseFloat(d)*(-1<d.indexOf("em")?b||j():1),l.hasquery&&(u&&p||!(u||c<=a)||!(p||a<=d))||(n[l.media]||(n[l.media]=[]),n[l.media].push(x[l.rules]))}for(var f in C)C.hasOwnProperty(f)&&C[f]&&C[f].parentNode===S&&S.removeChild(C[f]);for(var h in C.length=0,n)if(n.hasOwnProperty(h)){var m=$.createElement("style"),v=n[h].join("\n");m.type="text/css",m.media=h,S.insertBefore(m,r.nextSibling),m.styleSheet?m.styleSheet.cssText=v:m.appendChild($.createTextNode(v)),C.push(m)}},l=function(e,t,i){function a(e){return e.replace(f.regex.urls,"$1"+t+"$2$3")}var n=e.replace(f.regex.comments,"").replace(f.regex.keyframes,"").match(f.regex.media),r=n&&n.length||0,s=!r&&i;(t=t.substring(0,t.lastIndexOf("/"))).length&&(t+="/"),s&&(r=1);for(var o=0;o<r;o++){var l,c,d,u;s?(l=i,x.push(a(e))):(l=n[o].match(f.regex.findStyles)&&RegExp.$1,x.push(RegExp.$2&&a(RegExp.$2))),u=(d=l.split(",")).length;for(var p=0;p<u;p++)c=d[p],h(c)||w.push({media:c.split("(")[0].match(f.regex.only)&&RegExp.$2||"all",rules:x.length-1,hasquery:-1<c.indexOf("("),minw:c.match(f.regex.minw)&&parseFloat(RegExp.$1)+(RegExp.$2||""),maxw:c.match(f.regex.maxw)&&parseFloat(RegExp.$1)+(RegExp.$2||"")})}D()},c=function(){if(r.length){var t=r.shift();e(t.href,function(e){l(e,t.href,t.media),s[t.href]=!0,g.setTimeout(function(){c()},0)})}},t=function(){for(var e=0;e<T.length;e++){var t=T[e],i=t.href,a=t.media,n=t.rel&&"stylesheet"===t.rel.toLowerCase();i&&n&&!s[i]&&(t.styleSheet&&t.styleSheet.rawCssText?(l(t.styleSheet.rawCssText,i,a),s[i]=!0):(/^([a-zA-Z:]*\/\/)/.test(i)||o)&&i.replace(RegExp.$1,"").split("/")[0]!==g.location.host||("//"===i.substring(0,2)&&(i=g.location.protocol+i),r.push({href:i,media:a})))}c()};t(),f.update=t,f.getEmValue=j,g.addEventListener?g.addEventListener("resize",i,!1):g.attachEvent&&g.attachEvent("onresize",i)}function i(){D(!0)}}(this),function(e,t){"function"==typeof define&&define.amd?define(["jquery"],t):t(e.jQuery)}(this,function(g){"use strict";var d={data:{index:0,name:"scrollbar"},macosx:/mac/i.test(navigator.platform),mobile:/android|webos|iphone|ipad|ipod|blackberry/i.test(navigator.userAgent),overlay:null,scroll:null,scrolls:[],webkit:/webkit/i.test(navigator.userAgent)&&!/edge\/\d+/i.test(navigator.userAgent)};d.scrolls.add=function(e){this.remove(e).push(e)};function e(e){var t;d.scroll||(d.overlay=!((t=r(!0)).height||t.width),d.scroll=r(),c(),g(window).resize(function(){var e=!1;if(d.scroll&&(d.scroll.height||d.scroll.width)){var t=r();t.height===d.scroll.height&&t.width===d.scroll.width||(d.scroll=t,e=!0)}c(e)})),this.container=e,this.namespace=".scrollbar_"+d.data.index++,this.options=g.extend({},i,window.jQueryScrollbarOptions||{}),this.scrollTo=null,this.scrollx={},this.scrolly={},e.data(d.data.name,this),d.scrolls.add(this)}var i={autoScrollSize:!0,autoUpdate:!0,debug:!(d.scrolls.remove=function(e){for(;0<=g.inArray(e,this);)this.splice(g.inArray(e,this),1);return this}),disableBodyScroll:!1,duration:200,ignoreMobile:!1,ignoreOverlay:!1,scrollStep:30,showArrows:!1,stepScrolling:!0,scrollx:null,scrolly:null,onDestroy:null,onInit:null,onScroll:null,onUpdate:null};e.prototype={destroy:function(){if(this.wrapper){this.container.removeData(d.data.name),d.scrolls.remove(this);var e=this.container.scrollLeft(),t=this.container.scrollTop();this.container.insertBefore(this.wrapper).css({height:"",margin:"","max-height":""}).removeClass("scroll-content scroll-scrollx_visible scroll-scrolly_visible").off(this.namespace).scrollLeft(e).scrollTop(t),this.scrollx.scroll.removeClass("scroll-scrollx_visible").find("div").andSelf().off(this.namespace),this.scrolly.scroll.removeClass("scroll-scrolly_visible").find("div").andSelf().off(this.namespace),this.wrapper.remove(),g(document).add("body").off(this.namespace),g.isFunction(this.options.onDestroy)&&this.options.onDestroy.apply(this,[this.container])}},init:function(e){var p=this,f=this.container,n=this.containerWrapper||f,h=this.namespace,m=g.extend(this.options,e||{}),v={x:this.scrollx,y:this.scrolly},i=this.wrapper,t={scrollLeft:f.scrollLeft(),scrollTop:f.scrollTop()};if(d.mobile&&m.ignoreMobile||d.overlay&&m.ignoreOverlay||d.macosx&&!d.webkit)return!1;if(i)n.css({height:"auto","margin-bottom":-1*d.scroll.height+"px","margin-right":-1*d.scroll.width+"px","max-height":""});else{if(this.wrapper=i=g("<div>").addClass("scroll-wrapper").addClass(f.attr("class")).css("position","absolute"==f.css("position")?"absolute":"fixed").insertBefore(f).append(f),f.is("textarea")&&(this.containerWrapper=n=g("<div>").insertBefore(f).append(f),i.addClass("scroll-textarea")),n.addClass("scroll-content").css({height:"auto","margin-bottom":-1*d.scroll.height+"px","margin-right":-1*d.scroll.width+"px","max-height":""}),f.on("scroll"+h,function(e){g.isFunction(m.onScroll)&&m.onScroll.call(p,{maxScroll:v.y.maxScrollOffset,scroll:f.scrollTop(),size:v.y.size,visible:v.y.visible},{maxScroll:v.x.maxScrollOffset,scroll:f.scrollLeft(),size:v.x.size,visible:v.x.visible}),v.x.isVisible&&v.x.scroll.bar.css("left",f.scrollLeft()*v.x.kx+"px"),v.y.isVisible&&v.y.scroll.bar.css("top",f.scrollTop()*v.y.kx+"px")}),i.on("scroll"+h,function(){i.scrollTop(0).scrollLeft(0)}),m.disableBodyScroll){var a=function(e){_(e)?v.y.isVisible&&v.y.mousewheel(e):v.x.isVisible&&v.x.mousewheel(e)};i.on("MozMousePixelScroll"+h,a),i.on("mousewheel"+h,a),d.mobile&&i.on("touchstart"+h,function(e){var t=e.originalEvent.touches&&e.originalEvent.touches[0]||e,i=t.pageX,a=t.pageY,n=f.scrollLeft(),r=f.scrollTop();g(document).on("touchmove"+h,function(e){var t=e.originalEvent.targetTouches&&e.originalEvent.targetTouches[0]||e;f.scrollLeft(n+i-t.pageX),f.scrollTop(r+a-t.pageY),e.preventDefault()}),g(document).on("touchend"+h,function(){g(document).off(h)})})}g.isFunction(m.onInit)&&m.onInit.apply(this,[f])}g.each(v,function(n,r){function s(){var e=f[c]();f[c](e+d),1==l&&u<=e+d&&(e=f[c]()),-1==l&&e+d<=u&&(e=f[c]()),f[c]()==e&&o&&o()}var o=null,l=1,c="x"===n?"scrollLeft":"scrollTop",d=m.scrollStep,u=0;r.scroll||(r.scroll=p._getScroll(m["scroll"+n]).addClass("scroll-"+n),m.showArrows&&r.scroll.addClass("scroll-element_arrows_visible"),r.mousewheel=function(e){if(!r.isVisible||"x"===n&&_(e))return!0;if("y"===n&&!_(e))return v.x.mousewheel(e),!0;var t=-1*e.originalEvent.wheelDelta||e.originalEvent.detail,i=r.size-r.visible-r.offset;return(0<t&&u<i||t<0&&0<u)&&((u+=t)<0&&(u=0),i<u&&(u=i),p.scrollTo=p.scrollTo||{},p.scrollTo[c]=u,setTimeout(function(){p.scrollTo&&(f.stop().animate(p.scrollTo,240,"linear",function(){u=f[c]()}),p.scrollTo=null)},1)),e.preventDefault(),!1},r.scroll.on("MozMousePixelScroll"+h,r.mousewheel).on("mousewheel"+h,r.mousewheel).on("mouseenter"+h,function(){u=f[c]()}),r.scroll.find(".scroll-arrow, .scroll-element_track").on("mousedown"+h,function(e){if(1!=e.which)return!0;l=1;var t={eventOffset:e["x"===n?"pageX":"pageY"],maxScrollValue:r.size-r.visible-r.offset,scrollbarOffset:r.scroll.bar.offset()["x"===n?"left":"top"],scrollbarSize:r.scroll.bar["x"===n?"outerWidth":"outerHeight"]()},i=0,a=0;return u=g(this).hasClass("scroll-arrow")?(l=g(this).hasClass("scroll-arrow_more")?1:-1,d=m.scrollStep*l,0<l?t.maxScrollValue:0):(l=t.scrollbarOffset+t.scrollbarSize<t.eventOffset?1:t.eventOffset<t.scrollbarOffset?-1:0,d=Math.round(.75*r.visible)*l,u=t.eventOffset-t.scrollbarOffset-(m.stepScrolling?1==l?t.scrollbarSize:0:Math.round(t.scrollbarSize/2)),f[c]()+u/r.kx),p.scrollTo=p.scrollTo||{},p.scrollTo[c]=m.stepScrolling?f[c]()+d:u,m.stepScrolling&&(o=function(){u=f[c](),clearInterval(a),clearTimeout(i),a=i=0},i=setTimeout(function(){a=setInterval(s,40)},m.duration+100)),setTimeout(function(){p.scrollTo&&(f.animate(p.scrollTo,m.duration),p.scrollTo=null)},1),p._handleMouseDown(o,e)}),r.scroll.bar.on("mousedown"+h,function(e){if(1!=e.which)return!0;var i=e["x"===n?"pageX":"pageY"],a=f[c]();return r.scroll.addClass("scroll-draggable"),g(document).on("mousemove"+h,function(e){var t=parseInt((e["x"===n?"pageX":"pageY"]-i)/r.kx,10);f[c](a+t)}),p._handleMouseDown(function(){r.scroll.removeClass("scroll-draggable"),u=f[c]()},e)}))}),g.each(v,function(e,t){var i="scroll-scroll"+e+"_visible",a="x"==e?v.y:v.x;t.scroll.removeClass(i),a.scroll.removeClass(i),n.removeClass(i)}),g.each(v,function(e,t){g.extend(t,"x"==e?{offset:parseInt(f.css("left"),10)||0,size:f.prop("scrollWidth"),visible:i.width()}:{offset:parseInt(f.css("top"),10)||0,size:f.prop("scrollHeight"),visible:i.height()})}),this._updateScroll("x",this.scrollx),this._updateScroll("y",this.scrolly),g.isFunction(m.onUpdate)&&m.onUpdate.apply(this,[f]),g.each(v,function(e,t){var i="x"===e?"left":"top",a="x"===e?"outerWidth":"outerHeight",n="x"===e?"width":"height",r=parseInt(f.css(i),10)||0,s=t.size,o=t.visible+r,l=t.scroll.size[a]()+(parseInt(t.scroll.size.css(i),10)||0);m.autoScrollSize&&(t.scrollbarSize=parseInt(l*o/s,10),t.scroll.bar.css(n,t.scrollbarSize+"px")),t.scrollbarSize=t.scroll.bar[a](),t.kx=(l-t.scrollbarSize)/(s-o)||1,t.maxScrollOffset=s-o}),f.scrollLeft(t.scrollLeft).scrollTop(t.scrollTop).trigger("scroll")},_getScroll:function(e){var t={advanced:['<div class="scroll-element">','<div class="scroll-element_corner"></div>','<div class="scroll-arrow scroll-arrow_less"></div>','<div class="scroll-arrow scroll-arrow_more"></div>','<div class="scroll-element_outer">','<div class="scroll-element_size"></div>','<div class="scroll-element_inner-wrapper">','<div class="scroll-element_inner scroll-element_track">','<div class="scroll-element_inner-bottom"></div>',"</div>","</div>",'<div class="scroll-bar">','<div class="scroll-bar_body">','<div class="scroll-bar_body-inner"></div>',"</div>",'<div class="scroll-bar_bottom"></div>','<div class="scroll-bar_center"></div>',"</div>","</div>","</div>"].join(""),simple:['<div class="scroll-element">','<div class="scroll-element_outer">','<div class="scroll-element_size"></div>','<div class="scroll-element_track"></div>','<div class="scroll-bar"></div>',"</div>","</div>"].join("")};return t[e]&&(e=t[e]),e="string"==typeof(e=e||t.simple)?g(e).appendTo(this.wrapper):g(e),g.extend(e,{bar:e.find(".scroll-bar"),size:e.find(".scroll-element_size"),track:e.find(".scroll-element_track")}),e},_handleMouseDown:function(e,t){var i=this.namespace;return g(document).on("blur"+i,function(){g(document).add("body").off(i),e&&e()}),g(document).on("dragstart"+i,function(e){return e.preventDefault(),!1}),g(document).on("mouseup"+i,function(){g(document).add("body").off(i),e&&e()}),g("body").on("selectstart"+i,function(e){return e.preventDefault(),!1}),t&&t.preventDefault(),!1},_updateScroll:function(e,t){var i=this.container,a=this.containerWrapper||i,n="scroll-scroll"+e+"_visible",r="x"===e?this.scrolly:this.scrollx,s=parseInt(this.container.css("x"===e?"left":"top"),10)||0,o=this.wrapper,l=t.size,c=t.visible+s;t.isVisible=1<l-c,t.isVisible?(t.scroll.addClass(n),r.scroll.addClass(n),a.addClass(n)):(t.scroll.removeClass(n),r.scroll.removeClass(n),a.removeClass(n)),"y"===e&&(i.is("textarea")||l<c?a.css({height:c+d.scroll.height+"px","max-height":"none"}):a.css({"max-height":c+d.scroll.height+"px"})),t.size==i.prop("scrollWidth")&&r.size==i.prop("scrollHeight")&&t.visible==o.width()&&r.visible==o.height()&&t.offset==(parseInt(i.css("left"),10)||0)&&r.offset==(parseInt(i.css("top"),10)||0)||(g.extend(this.scrollx,{offset:parseInt(i.css("left"),10)||0,size:i.prop("scrollWidth"),visible:o.width()}),g.extend(this.scrolly,{offset:parseInt(i.css("top"),10)||0,size:this.container.prop("scrollHeight"),visible:o.height()}),this._updateScroll("x"===e?"y":"x",r))}};var n=e;g.fn.scrollbar=function(i,a){return"string"!=typeof i&&(a=i,i="init"),void 0===a&&(a=[]),g.isArray(a)||(a=[a]),this.not("body, .scroll-wrapper").each(function(){var e=g(this),t=e.data(d.data.name);(t||"init"===i)&&(t=t||new n(e))[i]&&t[i].apply(t,a)}),this},g.fn.scrollbar.options=i;var l,a,c=(l=0,function(e){var t,i,a,n,r,s,o;for(t=0;t<d.scrolls.length;t++)i=(n=d.scrolls[t]).container,a=n.options,r=n.wrapper,s=n.scrollx,o=n.scrolly,(e||a.autoUpdate&&r&&r.is(":visible")&&(i.prop("scrollWidth")!=s.size||i.prop("scrollHeight")!=o.size||r.width()!=s.visible||r.height()!=o.visible))&&(n.init(),!a.debug||window.console&&console.log({scrollHeight:i.prop("scrollHeight")+":"+n.scrolly.size,scrollWidth:i.prop("scrollWidth")+":"+n.scrollx.size,visibleHeight:r.height()+":"+n.scrolly.visible,visibleWidth:r.width()+":"+n.scrollx.visible},!0));clearTimeout(l),l=setTimeout(c,300)});function r(e){if(d.webkit&&!e)return{height:0,width:0};if(!d.data.outer){var t={border:"none","box-sizing":"content-box",height:"200px",margin:"0",padding:"0",width:"200px"};d.data.inner=g("<div>").css(g.extend({},t)),d.data.outer=g("<div>").css(g.extend({left:"-1000px",overflow:"scroll",position:"absolute",top:"-1000px"},t)).append(d.data.inner).appendTo("body")}return d.data.outer.scrollLeft(1e3).scrollTop(1e3),{height:Math.ceil(d.data.outer.offset().top-d.data.inner.offset().top||0),width:Math.ceil(d.data.outer.offset().left-d.data.inner.offset().left||0)}}function _(e){var t=e.originalEvent;return!(t.axis&&t.axis===t.HORIZONTAL_AXIS||t.wheelDeltaX)}window.angular&&(a=window.angular).module("jQueryScrollbar",[]).provider("jQueryScrollbar",function(){var t=i;return{setOptions:function(e){a.extend(t,e)},$get:function(){return{options:a.copy(t)}}}}).directive("jqueryScrollbar",["jQueryScrollbar","$parse",function(n,r){return{restrict:"AC",link:function(e,t,i){var a=r(i.jqueryScrollbar)(e);t.scrollbar(a||n.options).on("$destroy",function(){t.scrollbar("destroy")})}}}])}),function(r,s,u){var h=r.requestAnimationFrame||r.webkitRequestAnimationFrame||r.mozRequestAnimationFrame||r.oRequestAnimationFrame||r.msRequestAnimationFrame||function(e){r.setTimeout(e,1e3/60)},m=function(){var a={},n=s.createElement("div").style,t=function(){for(var e=["t","webkitT","MozT","msT","OT"],t=0,i=e.length;t<i;t++)if(e[t]+"ransform"in n)return e[t].substr(0,e[t].length-1);return!1}();function e(e){return!1!==t&&(""===t?e:t+e.charAt(0).toUpperCase()+e.substr(1))}a.getTime=Date.now||function(){return(new Date).getTime()},a.extend=function(e,t){for(var i in t)e[i]=t[i]},a.addEvent=function(e,t,i,a){e.addEventListener(t,i,!!a)},a.removeEvent=function(e,t,i,a){e.removeEventListener(t,i,!!a)},a.prefixPointerEvent=function(e){return r.MSPointerEvent?"MSPointer"+e.charAt(7).toUpperCase()+e.substr(8):e},a.momentum=function(e,t,i,a,n,r){var s,o,l=e-t,c=u.abs(l)/i;return o=c/(r=void 0===r?6e-4:r),(s=e+c*c/(2*r)*(l<0?-1:1))<a?(s=n?a-n/2.5*(c/8):a,o=(l=u.abs(s-e))/c):0<s&&(s=n?n/2.5*(c/8):0,o=(l=u.abs(e)+s)/c),{destination:u.round(s),duration:o}};var i=e("transform");return a.extend(a,{hasTransform:!1!==i,hasPerspective:e("perspective")in n,hasTouch:"ontouchstart"in r,hasPointer:!(!r.PointerEvent&&!r.MSPointerEvent),hasTransition:e("transition")in n}),a.isBadAndroid=function(){var e=r.navigator.appVersion;if(!/Android/.test(e)||/Chrome\/\d/.test(e))return!1;var t=e.match(/Safari\/(\d+.\d)/);return!(t&&"object"==typeof t&&2<=t.length)||parseFloat(t[1])<535.19}(),a.extend(a.style={},{transform:i,transitionTimingFunction:e("transitionTimingFunction"),transitionDuration:e("transitionDuration"),transitionDelay:e("transitionDelay"),transformOrigin:e("transformOrigin")}),a.hasClass=function(e,t){return new RegExp("(^|\\s)"+t+"(\\s|$)").test(e.className)},a.addClass=function(e,t){if(!a.hasClass(e,t)){var i=e.className.split(" ");i.push(t),e.className=i.join(" ")}},a.removeClass=function(e,t){if(a.hasClass(e,t)){var i=new RegExp("(^|\\s)"+t+"(\\s|$)","g");e.className=e.className.replace(i," ")}},a.offset=function(e){for(var t=-e.offsetLeft,i=-e.offsetTop;e=e.offsetParent;)t-=e.offsetLeft,i-=e.offsetTop;return{left:t,top:i}},a.preventDefaultException=function(e,t){for(var i in t)if(t[i].test(e[i]))return!0;return!1},a.extend(a.eventType={},{touchstart:1,touchmove:1,touchend:1,mousedown:2,mousemove:2,mouseup:2,pointerdown:3,pointermove:3,pointerup:3,MSPointerDown:3,MSPointerMove:3,MSPointerUp:3}),a.extend(a.ease={},{quadratic:{style:"cubic-bezier(0.25, 0.46, 0.45, 0.94)",fn:function(e){return e*(2-e)}},circular:{style:"cubic-bezier(0.1, 0.57, 0.1, 1)",fn:function(e){return u.sqrt(1- --e*e)}},back:{style:"cubic-bezier(0.175, 0.885, 0.32, 1.275)",fn:function(e){return--e*e*(5*e+4)+1}},bounce:{style:"",fn:function(e){return(e/=1)<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}},elastic:{style:"",fn:function(e){return 0===e?0:1==e?1:.4*u.pow(2,-10*e)*u.sin((e-.055)*(2*u.PI)/.22)+1}}}),a.tap=function(e,t){var i=s.createEvent("Event");i.initEvent(t,!0,!0),i.pageX=e.pageX,i.pageY=e.pageY,e.target.dispatchEvent(i)},a.click=function(e){var t,i=e.target;/(SELECT|INPUT|TEXTAREA)/i.test(i.tagName)||((t=s.createEvent(r.MouseEvent?"MouseEvents":"Event")).initEvent("click",!0,!0),t.view=e.view||r,t.detail=1,t.screenX=i.screenX||0,t.screenY=i.screenY||0,t.clientX=i.clientX||0,t.clientY=i.clientY||0,t.ctrlKey=!!e.ctrlKey,t.altKey=!!e.altKey,t.shiftKey=!!e.shiftKey,t.metaKey=!!e.metaKey,t.button=0,t.relatedTarget=null,t._constructed=!0,i.dispatchEvent(t))},a}();function e(e,t){for(var i in this.wrapper="string"==typeof e?s.querySelector(e):e,this.scroller=this.wrapper.children[0],this.scrollerStyle=this.scroller.style,this.options={resizeScrollbars:!0,mouseWheelSpeed:20,snapThreshold:.334,disablePointer:!m.hasPointer,disableTouch:m.hasPointer||!m.hasTouch,disableMouse:m.hasPointer||m.hasTouch,startX:0,startY:0,scrollY:!0,directionLockThreshold:5,momentum:!0,bounce:!0,bounceTime:600,bounceEasing:"",preventDefault:!0,preventDefaultException:{tagName:/^(INPUT|TEXTAREA|BUTTON|SELECT|LABEL)$/},HWCompositing:!0,useTransition:!0,useTransform:!0,bindToWrapper:void 0===r.onmousedown},t)this.options[i]=t[i];this.translateZ=this.options.HWCompositing&&m.hasPerspective?" translateZ(0)":"",this.options.useTransition=m.hasTransition&&this.options.useTransition,this.options.useTransform=m.hasTransform&&this.options.useTransform,this.options.eventPassthrough=!0===this.options.eventPassthrough?"vertical":this.options.eventPassthrough,this.options.preventDefault=!this.options.eventPassthrough&&this.options.preventDefault,this.options.scrollY="vertical"!=this.options.eventPassthrough&&this.options.scrollY,this.options.scrollX="horizontal"!=this.options.eventPassthrough&&this.options.scrollX,this.options.freeScroll=this.options.freeScroll&&!this.options.eventPassthrough,this.options.directionLockThreshold=this.options.eventPassthrough?0:this.options.directionLockThreshold,this.options.bounceEasing="string"==typeof this.options.bounceEasing?m.ease[this.options.bounceEasing]||m.ease.circular:this.options.bounceEasing,this.options.resizePolling=void 0===this.options.resizePolling?60:this.options.resizePolling,!0===this.options.tap&&(this.options.tap="tap"),this.options.useTransition||this.options.useTransform||/relative|absolute/i.test(this.scrollerStyle.position)||(this.scrollerStyle.position="relative"),"scale"==this.options.shrinkScrollbars&&(this.options.useTransition=!1),this.options.invertWheelDirection=this.options.invertWheelDirection?-1:1,this.x=0,this.y=0,this.directionX=0,this.directionY=0,this._events={},this._init(),this.refresh(),this.scrollTo(this.options.startX,this.options.startY),this.enable()}function o(e,t,i){var a=s.createElement("div"),n=s.createElement("div");return!0===i&&(a.style.cssText="position:absolute;z-index:9999",n.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px"),n.className="iScrollIndicator","h"==e?(!0===i&&(a.style.cssText+=";height:7px;left:2px;right:2px;bottom:0",n.style.height="100%"),a.className="iScrollHorizontalScrollbar"):(!0===i&&(a.style.cssText+=";width:7px;bottom:2px;top:2px;right:1px",n.style.width="100%"),a.className="iScrollVerticalScrollbar"),a.style.cssText+=";overflow:hidden",t||(a.style.pointerEvents="none"),a.appendChild(n),a}function l(e,t){for(var i in this.wrapper="string"==typeof t.el?s.querySelector(t.el):t.el,this.wrapperStyle=this.wrapper.style,this.indicator=this.wrapper.children[0],this.indicatorStyle=this.indicator.style,this.scroller=e,this.options={listenX:!0,listenY:!0,interactive:!1,resize:!0,defaultScrollbars:!1,shrink:!1,fade:!1,speedRatioX:0,speedRatioY:0},t)this.options[i]=t[i];if(this.sizeRatioX=1,this.sizeRatioY=1,this.maxPosX=0,this.maxPosY=0,this.options.interactive&&(this.options.disableTouch||(m.addEvent(this.indicator,"touchstart",this),m.addEvent(r,"touchend",this)),this.options.disablePointer||(m.addEvent(this.indicator,m.prefixPointerEvent("pointerdown"),this),m.addEvent(r,m.prefixPointerEvent("pointerup"),this)),this.options.disableMouse||(m.addEvent(this.indicator,"mousedown",this),m.addEvent(r,"mouseup",this))),this.options.fade){this.wrapperStyle[m.style.transform]=this.scroller.translateZ;var a=m.style.transitionDuration;if(!a)return;this.wrapperStyle[a]=m.isBadAndroid?"0.0001ms":"0ms";var n=this;m.isBadAndroid&&h(function(){"0.0001ms"===n.wrapperStyle[a]&&(n.wrapperStyle[a]="0s")}),this.wrapperStyle.opacity="0"}}e.prototype={version:"5.2.0",_init:function(){this._initEvents(),(this.options.scrollbars||this.options.indicators)&&this._initIndicators(),this.options.mouseWheel&&this._initWheel(),this.options.snap&&this._initSnap(),this.options.keyBindings&&this._initKeys()},destroy:function(){this._initEvents(!0),clearTimeout(this.resizeTimeout),this.resizeTimeout=null,this._execEvent("destroy")},_transitionEnd:function(e){e.target==this.scroller&&this.isInTransition&&(this._transitionTime(),this.resetPosition(this.options.bounceTime)||(this.isInTransition=!1,this._execEvent("scrollEnd")))},_start:function(e){if(1!=m.eventType[e.type]&&0!==(e.which?e.button:e.button<2?0:4==e.button?1:2))return;if(this.enabled&&(!this.initiated||m.eventType[e.type]===this.initiated)){!this.options.preventDefault||m.isBadAndroid||m.preventDefaultException(e.target,this.options.preventDefaultException)||e.preventDefault();var t,i=e.touches?e.touches[0]:e;this.initiated=m.eventType[e.type],this.moved=!1,this.distX=0,this.distY=0,this.directionX=0,this.directionY=0,this.directionLocked=0,this.startTime=m.getTime(),this.options.useTransition&&this.isInTransition?(this._transitionTime(),this.isInTransition=!1,t=this.getComputedPosition(),this._translate(u.round(t.x),u.round(t.y)),this._execEvent("scrollEnd")):!this.options.useTransition&&this.isAnimating&&(this.isAnimating=!1,this._execEvent("scrollEnd")),this.startX=this.x,this.startY=this.y,this.absStartX=this.x,this.absStartY=this.y,this.pointX=i.pageX,this.pointY=i.pageY,this._execEvent("beforeScrollStart")}},_move:function(e){if(this.enabled&&m.eventType[e.type]===this.initiated){this.options.preventDefault&&e.preventDefault();var t,i,a,n,r=e.touches?e.touches[0]:e,s=r.pageX-this.pointX,o=r.pageY-this.pointY,l=m.getTime();if(this.pointX=r.pageX,this.pointY=r.pageY,this.distX+=s,this.distY+=o,a=u.abs(this.distX),n=u.abs(this.distY),!(300<l-this.endTime&&a<10&&n<10)){if(this.directionLocked||this.options.freeScroll||(a>n+this.options.directionLockThreshold?this.directionLocked="h":n>=a+this.options.directionLockThreshold?this.directionLocked="v":this.directionLocked="n"),"h"==this.directionLocked){if("vertical"==this.options.eventPassthrough)e.preventDefault();else if("horizontal"==this.options.eventPassthrough)return void(this.initiated=!1);o=0}else if("v"==this.directionLocked){if("horizontal"==this.options.eventPassthrough)e.preventDefault();else if("vertical"==this.options.eventPassthrough)return void(this.initiated=!1);s=0}s=this.hasHorizontalScroll?s:0,o=this.hasVerticalScroll?o:0,t=this.x+s,i=this.y+o,(0<t||t<this.maxScrollX)&&(t=this.options.bounce?this.x+s/3:0<t?0:this.maxScrollX),(0<i||i<this.maxScrollY)&&(i=this.options.bounce?this.y+o/3:0<i?0:this.maxScrollY),this.directionX=0<s?-1:s<0?1:0,this.directionY=0<o?-1:o<0?1:0,this.moved||this._execEvent("scrollStart"),this.moved=!0,this._translate(t,i),300<l-this.startTime&&(this.startTime=l,this.startX=this.x,this.startY=this.y)}}},_end:function(e){if(this.enabled&&m.eventType[e.type]===this.initiated){this.options.preventDefault&&!m.preventDefaultException(e.target,this.options.preventDefaultException)&&e.preventDefault();e.changedTouches&&e.changedTouches[0];var t,i,a=m.getTime()-this.startTime,n=u.round(this.x),r=u.round(this.y),s=u.abs(n-this.startX),o=u.abs(r-this.startY),l=0,c="";if(this.isInTransition=0,this.initiated=0,this.endTime=m.getTime(),!this.resetPosition(this.options.bounceTime)){if(this.scrollTo(n,r),!this.moved)return this.options.tap&&m.tap(e,this.options.tap),this.options.click&&m.click(e),void this._execEvent("scrollCancel");if(this._events.flick&&a<200&&s<100&&o<100)this._execEvent("flick");else{if(this.options.momentum&&a<300&&(t=this.hasHorizontalScroll?m.momentum(this.x,this.startX,a,this.maxScrollX,this.options.bounce?this.wrapperWidth:0,this.options.deceleration):{destination:n,duration:0},i=this.hasVerticalScroll?m.momentum(this.y,this.startY,a,this.maxScrollY,this.options.bounce?this.wrapperHeight:0,this.options.deceleration):{destination:r,duration:0},n=t.destination,r=i.destination,l=u.max(t.duration,i.duration),this.isInTransition=1),this.options.snap){var d=this._nearestSnap(n,r);this.currentPage=d,l=this.options.snapSpeed||u.max(u.max(u.min(u.abs(n-d.x),1e3),u.min(u.abs(r-d.y),1e3)),300),n=d.x,r=d.y,this.directionX=0,this.directionY=0,c=this.options.bounceEasing}if(n!=this.x||r!=this.y)return(0<n||n<this.maxScrollX||0<r||r<this.maxScrollY)&&(c=m.ease.quadratic),void this.scrollTo(n,r,l,c);this._execEvent("scrollEnd")}}}},_resize:function(){var e=this;clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout(function(){e.refresh()},this.options.resizePolling)},resetPosition:function(e){var t=this.x,i=this.y;return e=e||0,!this.hasHorizontalScroll||0<this.x?t=0:this.x<this.maxScrollX&&(t=this.maxScrollX),!this.hasVerticalScroll||0<this.y?i=0:this.y<this.maxScrollY&&(i=this.maxScrollY),(t!=this.x||i!=this.y)&&(this.scrollTo(t,i,e,this.options.bounceEasing),!0)},disable:function(){this.enabled=!1},enable:function(){this.enabled=!0},refresh:function(){this.wrapper.offsetHeight;this.wrapperWidth=this.wrapper.clientWidth,this.wrapperHeight=this.wrapper.clientHeight,this.scrollerWidth=this.scroller.offsetWidth,this.scrollerHeight=this.scroller.offsetHeight,this.maxScrollX=this.wrapperWidth-this.scrollerWidth,this.maxScrollY=this.wrapperHeight-this.scrollerHeight,this.hasHorizontalScroll=this.options.scrollX&&this.maxScrollX<0,this.hasVerticalScroll=this.options.scrollY&&this.maxScrollY<0,this.hasHorizontalScroll||(this.maxScrollX=0,this.scrollerWidth=this.wrapperWidth),this.hasVerticalScroll||(this.maxScrollY=0,this.scrollerHeight=this.wrapperHeight),this.endTime=0,this.directionX=0,this.directionY=0,this.wrapperOffset=m.offset(this.wrapper),this._execEvent("refresh"),this.resetPosition()},on:function(e,t){this._events[e]||(this._events[e]=[]),this._events[e].push(t)},off:function(e,t){if(this._events[e]){var i=this._events[e].indexOf(t);-1<i&&this._events[e].splice(i,1)}},_execEvent:function(e){if(this._events[e]){var t=0,i=this._events[e].length;if(i)for(;t<i;t++)this._events[e][t].apply(this,[].slice.call(arguments,1))}},scrollBy:function(e,t,i,a){e=this.x+e,t=this.y+t,i=i||0,this.scrollTo(e,t,i,a)},scrollTo:function(e,t,i,a){a=a||m.ease.circular,this.isInTransition=this.options.useTransition&&0<i;var n=this.options.useTransition&&a.style;!i||n?(n&&(this._transitionTimingFunction(a.style),this._transitionTime(i)),this._translate(e,t)):this._animate(e,t,i,a.fn)},scrollToElement:function(e,t,i,a,n){if(e=e.nodeType?e:this.scroller.querySelector(e)){var r=m.offset(e);r.left-=this.wrapperOffset.left,r.top-=this.wrapperOffset.top,!0===i&&(i=u.round(e.offsetWidth/2-this.wrapper.offsetWidth/2)),!0===a&&(a=u.round(e.offsetHeight/2-this.wrapper.offsetHeight/2)),r.left-=i||0,r.top-=a||0,r.left=0<r.left?0:r.left<this.maxScrollX?this.maxScrollX:r.left,r.top=0<r.top?0:r.top<this.maxScrollY?this.maxScrollY:r.top,t=null==t||"auto"===t?u.max(u.abs(this.x-r.left),u.abs(this.y-r.top)):t,this.scrollTo(r.left,r.top,t,n)}},_transitionTime:function(e){if(this.options.useTransition){e=e||0;var t=m.style.transitionDuration;if(t){if(this.scrollerStyle[t]=e+"ms",!e&&m.isBadAndroid){this.scrollerStyle[t]="0.0001ms";var i=this;h(function(){"0.0001ms"===i.scrollerStyle[t]&&(i.scrollerStyle[t]="0s")})}if(this.indicators)for(var a=this.indicators.length;a--;)this.indicators[a].transitionTime(e)}}},_transitionTimingFunction:function(e){if(this.scrollerStyle[m.style.transitionTimingFunction]=e,this.indicators)for(var t=this.indicators.length;t--;)this.indicators[t].transitionTimingFunction(e)},_translate:function(e,t){if(this.options.useTransform?this.scrollerStyle[m.style.transform]="translate("+e+"px,"+t+"px)"+this.translateZ:(e=u.round(e),t=u.round(t),this.scrollerStyle.left=e+"px",this.scrollerStyle.top=t+"px"),this.x=e,this.y=t,this.indicators)for(var i=this.indicators.length;i--;)this.indicators[i].updatePosition()},_initEvents:function(e){var t=e?m.removeEvent:m.addEvent,i=this.options.bindToWrapper?this.wrapper:r;t(r,"orientationchange",this),t(r,"resize",this),this.options.click&&t(this.wrapper,"click",this,!0),this.options.disableMouse||(t(this.wrapper,"mousedown",this),t(i,"mousemove",this),t(i,"mousecancel",this),t(i,"mouseup",this)),m.hasPointer&&!this.options.disablePointer&&(t(this.wrapper,m.prefixPointerEvent("pointerdown"),this),t(i,m.prefixPointerEvent("pointermove"),this),t(i,m.prefixPointerEvent("pointercancel"),this),t(i,m.prefixPointerEvent("pointerup"),this)),m.hasTouch&&!this.options.disableTouch&&(t(this.wrapper,"touchstart",this),t(i,"touchmove",this),t(i,"touchcancel",this),t(i,"touchend",this)),t(this.scroller,"transitionend",this),t(this.scroller,"webkitTransitionEnd",this),t(this.scroller,"oTransitionEnd",this),t(this.scroller,"MSTransitionEnd",this)},getComputedPosition:function(){var e,t,i=r.getComputedStyle(this.scroller,null);return t=this.options.useTransform?(e=+((i=i[m.style.transform].split(")")[0].split(", "))[12]||i[4]),+(i[13]||i[5])):(e=+i.left.replace(/[^-\d.]/g,""),+i.top.replace(/[^-\d.]/g,"")),{x:e,y:t}},_initIndicators:function(){var e,t=this.options.interactiveScrollbars,i="string"!=typeof this.options.scrollbars,a=[],n=this;this.indicators=[],this.options.scrollbars&&(this.options.scrollY&&(e={el:o("v",t,this.options.scrollbars),interactive:t,defaultScrollbars:!0,customStyle:i,resize:this.options.resizeScrollbars,shrink:this.options.shrinkScrollbars,fade:this.options.fadeScrollbars,listenX:!1},this.wrapper.appendChild(e.el),a.push(e)),this.options.scrollX&&(e={el:o("h",t,this.options.scrollbars),interactive:t,defaultScrollbars:!0,customStyle:i,resize:this.options.resizeScrollbars,shrink:this.options.shrinkScrollbars,fade:this.options.fadeScrollbars,listenY:!1},this.wrapper.appendChild(e.el),a.push(e))),this.options.indicators&&(a=a.concat(this.options.indicators));for(var r=a.length;r--;)this.indicators.push(new l(this,a[r]));function s(e){if(n.indicators)for(var t=n.indicators.length;t--;)e.call(n.indicators[t])}this.options.fadeScrollbars&&(this.on("scrollEnd",function(){s(function(){this.fade()})}),this.on("scrollCancel",function(){s(function(){this.fade()})}),this.on("scrollStart",function(){s(function(){this.fade(1)})}),this.on("beforeScrollStart",function(){s(function(){this.fade(1,!0)})})),this.on("refresh",function(){s(function(){this.refresh()})}),this.on("destroy",function(){s(function(){this.destroy()}),delete this.indicators})},_initWheel:function(){m.addEvent(this.wrapper,"wheel",this),m.addEvent(this.wrapper,"mousewheel",this),m.addEvent(this.wrapper,"DOMMouseScroll",this),this.on("destroy",function(){clearTimeout(this.wheelTimeout),this.wheelTimeout=null,m.removeEvent(this.wrapper,"wheel",this),m.removeEvent(this.wrapper,"mousewheel",this),m.removeEvent(this.wrapper,"DOMMouseScroll",this)})},_wheel:function(e){if(this.enabled){var t,i,a,n,r=this;if(void 0===this.wheelTimeout&&r._execEvent("scrollStart"),clearTimeout(this.wheelTimeout),this.wheelTimeout=setTimeout(function(){r.options.snap||r._execEvent("scrollEnd"),r.wheelTimeout=void 0},400),"deltaX"in e)i=1===e.deltaMode?(t=-e.deltaX*this.options.mouseWheelSpeed,-e.deltaY*this.options.mouseWheelSpeed):(t=-e.deltaX,-e.deltaY);else if("wheelDeltaX"in e)t=e.wheelDeltaX/120*this.options.mouseWheelSpeed,i=e.wheelDeltaY/120*this.options.mouseWheelSpeed;else if("wheelDelta"in e)t=i=e.wheelDelta/120*this.options.mouseWheelSpeed;else{if(!("detail"in e))return;t=i=-e.detail/3*this.options.mouseWheelSpeed}if(t*=this.options.invertWheelDirection,i*=this.options.invertWheelDirection,this.hasVerticalScroll||(t=i,i=0),this.options.snap)return a=this.currentPage.pageX,n=this.currentPage.pageY,0<t?a--:t<0&&a++,0<i?n--:i<0&&n++,void this.goToPage(a,n);a=this.x+u.round(this.hasHorizontalScroll?t:0),n=this.y+u.round(this.hasVerticalScroll?i:0),this.directionX=0<t?-1:t<0?1:0,this.directionY=0<i?-1:i<0?1:0,0<a?a=0:a<this.maxScrollX&&(a=this.maxScrollX),0<n?n=0:n<this.maxScrollY&&(n=this.maxScrollY),this.scrollTo(a,n,0)}},_initSnap:function(){this.currentPage={},"string"==typeof this.options.snap&&(this.options.snap=this.scroller.querySelectorAll(this.options.snap)),this.on("refresh",function(){var e,t,i,a,n,r,s=0,o=0,l=0,c=this.options.snapStepX||this.wrapperWidth,d=this.options.snapStepY||this.wrapperHeight;if(this.pages=[],this.wrapperWidth&&this.wrapperHeight&&this.scrollerWidth&&this.scrollerHeight){if(!0===this.options.snap)for(i=u.round(c/2),a=u.round(d/2);l>-this.scrollerWidth;){for(this.pages[s]=[],n=e=0;n>-this.scrollerHeight;)this.pages[s][e]={x:u.max(l,this.maxScrollX),y:u.max(n,this.maxScrollY),width:c,height:d,cx:l-i,cy:n-a},n-=d,e++;l-=c,s++}else for(e=(r=this.options.snap).length,t=-1;s<e;s++)(0===s||r[s].offsetLeft<=r[s-1].offsetLeft)&&(o=0,t++),this.pages[o]||(this.pages[o]=[]),l=u.max(-r[s].offsetLeft,this.maxScrollX),n=u.max(-r[s].offsetTop,this.maxScrollY),i=l-u.round(r[s].offsetWidth/2),a=n-u.round(r[s].offsetHeight/2),this.pages[o][t]={x:l,y:n,width:r[s].offsetWidth,height:r[s].offsetHeight,cx:i,cy:a},l>this.maxScrollX&&o++;this.goToPage(this.currentPage.pageX||0,this.currentPage.pageY||0,0),this.options.snapThreshold%1==0?(this.snapThresholdX=this.options.snapThreshold,this.snapThresholdY=this.options.snapThreshold):(this.snapThresholdX=u.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width*this.options.snapThreshold),this.snapThresholdY=u.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height*this.options.snapThreshold))}}),this.on("flick",function(){var e=this.options.snapSpeed||u.max(u.max(u.min(u.abs(this.x-this.startX),1e3),u.min(u.abs(this.y-this.startY),1e3)),300);this.goToPage(this.currentPage.pageX+this.directionX,this.currentPage.pageY+this.directionY,e)})},_nearestSnap:function(e,t){if(!this.pages.length)return{x:0,y:0,pageX:0,pageY:0};var i=0,a=this.pages.length,n=0;if(u.abs(e-this.absStartX)<this.snapThresholdX&&u.abs(t-this.absStartY)<this.snapThresholdY)return this.currentPage;for(0<e?e=0:e<this.maxScrollX&&(e=this.maxScrollX),0<t?t=0:t<this.maxScrollY&&(t=this.maxScrollY);i<a;i++)if(e>=this.pages[i][0].cx){e=this.pages[i][0].x;break}for(a=this.pages[i].length;n<a;n++)if(t>=this.pages[0][n].cy){t=this.pages[0][n].y;break}return i==this.currentPage.pageX&&((i+=this.directionX)<0?i=0:i>=this.pages.length&&(i=this.pages.length-1),e=this.pages[i][0].x),n==this.currentPage.pageY&&((n+=this.directionY)<0?n=0:n>=this.pages[0].length&&(n=this.pages[0].length-1),t=this.pages[0][n].y),{x:e,y:t,pageX:i,pageY:n}},goToPage:function(e,t,i,a){a=a||this.options.bounceEasing,e>=this.pages.length?e=this.pages.length-1:e<0&&(e=0),t>=this.pages[e].length?t=this.pages[e].length-1:t<0&&(t=0);var n=this.pages[e][t].x,r=this.pages[e][t].y;i=void 0===i?this.options.snapSpeed||u.max(u.max(u.min(u.abs(n-this.x),1e3),u.min(u.abs(r-this.y),1e3)),300):i,this.currentPage={x:n,y:r,pageX:e,pageY:t},this.scrollTo(n,r,i,a)},next:function(e,t){var i=this.currentPage.pageX,a=this.currentPage.pageY;++i>=this.pages.length&&this.hasVerticalScroll&&(i=0,a++),this.goToPage(i,a,e,t)},prev:function(e,t){var i=this.currentPage.pageX,a=this.currentPage.pageY;--i<0&&this.hasVerticalScroll&&(i=0,a--),this.goToPage(i,a,e,t)},_initKeys:function(e){var t,i={pageUp:33,pageDown:34,end:35,home:36,left:37,up:38,right:39,down:40};if("object"==typeof this.options.keyBindings)for(t in this.options.keyBindings)"string"==typeof this.options.keyBindings[t]&&(this.options.keyBindings[t]=this.options.keyBindings[t].toUpperCase().charCodeAt(0));else this.options.keyBindings={};for(t in i)this.options.keyBindings[t]=this.options.keyBindings[t]||i[t];m.addEvent(r,"keydown",this),this.on("destroy",function(){m.removeEvent(r,"keydown",this)})},_key:function(e){if(this.enabled){var t,i=this.options.snap,a=i?this.currentPage.pageX:this.x,n=i?this.currentPage.pageY:this.y,r=m.getTime(),s=this.keyTime||0;switch(this.options.useTransition&&this.isInTransition&&(t=this.getComputedPosition(),this._translate(u.round(t.x),u.round(t.y)),this.isInTransition=!1),this.keyAcceleration=r-s<200?u.min(this.keyAcceleration+.25,50):0,e.keyCode){case this.options.keyBindings.pageUp:this.hasHorizontalScroll&&!this.hasVerticalScroll?a+=i?1:this.wrapperWidth:n+=i?1:this.wrapperHeight;break;case this.options.keyBindings.pageDown:this.hasHorizontalScroll&&!this.hasVerticalScroll?a-=i?1:this.wrapperWidth:n-=i?1:this.wrapperHeight;break;case this.options.keyBindings.end:a=i?this.pages.length-1:this.maxScrollX,n=i?this.pages[0].length-1:this.maxScrollY;break;case this.options.keyBindings.home:n=a=0;break;case this.options.keyBindings.left:a+=i?-1:5+this.keyAcceleration>>0;break;case this.options.keyBindings.up:n+=i?1:5+this.keyAcceleration>>0;break;case this.options.keyBindings.right:a-=i?-1:5+this.keyAcceleration>>0;break;case this.options.keyBindings.down:n-=i?1:5+this.keyAcceleration>>0;break;default:return}i?this.goToPage(a,n):(0<a?(a=0,this.keyAcceleration=0):a<this.maxScrollX&&(a=this.maxScrollX,this.keyAcceleration=0),0<n?(n=0,this.keyAcceleration=0):n<this.maxScrollY&&(n=this.maxScrollY,this.keyAcceleration=0),this.scrollTo(a,n,0),this.keyTime=r)}},_animate:function(r,s,o,l){var c=this,d=this.x,u=this.y,p=m.getTime(),f=p+o;this.isAnimating=!0,function e(){var t,i,a,n=m.getTime();if(f<=n)return c.isAnimating=!1,c._translate(r,s),void(c.resetPosition(c.options.bounceTime)||c._execEvent("scrollEnd"));a=l(n=(n-p)/o),t=(r-d)*a+d,i=(s-u)*a+u,c._translate(t,i),c.isAnimating&&h(e)}()},handleEvent:function(e){switch(e.type){case"touchstart":case"pointerdown":case"MSPointerDown":case"mousedown":this._start(e);break;case"touchmove":case"pointermove":case"MSPointerMove":case"mousemove":this._move(e);break;case"touchend":case"pointerup":case"MSPointerUp":case"mouseup":case"touchcancel":case"pointercancel":case"MSPointerCancel":case"mousecancel":this._end(e);break;case"orientationchange":case"resize":this._resize();break;case"transitionend":case"webkitTransitionEnd":case"oTransitionEnd":case"MSTransitionEnd":this._transitionEnd(e);break;case"wheel":case"DOMMouseScroll":case"mousewheel":this._wheel(e);break;case"keydown":this._key(e);break;case"click":this.enabled&&!e._constructed&&(e.preventDefault(),e.stopPropagation())}}},l.prototype={handleEvent:function(e){switch(e.type){case"touchstart":case"pointerdown":case"MSPointerDown":case"mousedown":this._start(e);break;case"touchmove":case"pointermove":case"MSPointerMove":case"mousemove":this._move(e);break;case"touchend":case"pointerup":case"MSPointerUp":case"mouseup":case"touchcancel":case"pointercancel":case"MSPointerCancel":case"mousecancel":this._end(e)}},destroy:function(){this.options.fadeScrollbars&&(clearTimeout(this.fadeTimeout),this.fadeTimeout=null),this.options.interactive&&(m.removeEvent(this.indicator,"touchstart",this),m.removeEvent(this.indicator,m.prefixPointerEvent("pointerdown"),this),m.removeEvent(this.indicator,"mousedown",this),m.removeEvent(r,"touchmove",this),m.removeEvent(r,m.prefixPointerEvent("pointermove"),this),m.removeEvent(r,"mousemove",this),m.removeEvent(r,"touchend",this),m.removeEvent(r,m.prefixPointerEvent("pointerup"),this),m.removeEvent(r,"mouseup",this)),this.options.defaultScrollbars&&this.wrapper.parentNode.removeChild(this.wrapper)},_start:function(e){var t=e.touches?e.touches[0]:e;e.preventDefault(),e.stopPropagation(),this.transitionTime(),this.initiated=!0,this.moved=!1,this.lastPointX=t.pageX,this.lastPointY=t.pageY,this.startTime=m.getTime(),this.options.disableTouch||m.addEvent(r,"touchmove",this),this.options.disablePointer||m.addEvent(r,m.prefixPointerEvent("pointermove"),this),this.options.disableMouse||m.addEvent(r,"mousemove",this),this.scroller._execEvent("beforeScrollStart")},_move:function(e){var t,i,a,n,r=e.touches?e.touches[0]:e;m.getTime();this.moved||this.scroller._execEvent("scrollStart"),this.moved=!0,t=r.pageX-this.lastPointX,this.lastPointX=r.pageX,i=r.pageY-this.lastPointY,this.lastPointY=r.pageY,a=this.x+t,n=this.y+i,this._pos(a,n),e.preventDefault(),e.stopPropagation()},_end:function(e){if(this.initiated){if(this.initiated=!1,e.preventDefault(),e.stopPropagation(),m.removeEvent(r,"touchmove",this),m.removeEvent(r,m.prefixPointerEvent("pointermove"),this),m.removeEvent(r,"mousemove",this),this.scroller.options.snap){var t=this.scroller._nearestSnap(this.scroller.x,this.scroller.y),i=this.options.snapSpeed||u.max(u.max(u.min(u.abs(this.scroller.x-t.x),1e3),u.min(u.abs(this.scroller.y-t.y),1e3)),300);this.scroller.x==t.x&&this.scroller.y==t.y||(this.scroller.directionX=0,this.scroller.directionY=0,this.scroller.currentPage=t,this.scroller.scrollTo(t.x,t.y,i,this.scroller.options.bounceEasing))}this.moved&&this.scroller._execEvent("scrollEnd")}},transitionTime:function(e){e=e||0;var t=m.style.transitionDuration;if(t&&(this.indicatorStyle[t]=e+"ms",!e&&m.isBadAndroid)){this.indicatorStyle[t]="0.0001ms";var i=this;h(function(){"0.0001ms"===i.indicatorStyle[t]&&(i.indicatorStyle[t]="0s")})}},transitionTimingFunction:function(e){this.indicatorStyle[m.style.transitionTimingFunction]=e},refresh:function(){this.transitionTime(),this.options.listenX&&!this.options.listenY?this.indicatorStyle.display=this.scroller.hasHorizontalScroll?"block":"none":this.options.listenY&&!this.options.listenX?this.indicatorStyle.display=this.scroller.hasVerticalScroll?"block":"none":this.indicatorStyle.display=this.scroller.hasHorizontalScroll||this.scroller.hasVerticalScroll?"block":"none",this.scroller.hasHorizontalScroll&&this.scroller.hasVerticalScroll?(m.addClass(this.wrapper,"iScrollBothScrollbars"),m.removeClass(this.wrapper,"iScrollLoneScrollbar"),this.options.defaultScrollbars&&this.options.customStyle&&(this.options.listenX?this.wrapper.style.right="8px":this.wrapper.style.bottom="8px")):(m.removeClass(this.wrapper,"iScrollBothScrollbars"),m.addClass(this.wrapper,"iScrollLoneScrollbar"),this.options.defaultScrollbars&&this.options.customStyle&&(this.options.listenX?this.wrapper.style.right="2px":this.wrapper.style.bottom="2px"));this.wrapper.offsetHeight;this.options.listenX&&(this.wrapperWidth=this.wrapper.clientWidth,this.options.resize?(this.indicatorWidth=u.max(u.round(this.wrapperWidth*this.wrapperWidth/(this.scroller.scrollerWidth||this.wrapperWidth||1)),8),this.indicatorStyle.width=this.indicatorWidth+"px"):this.indicatorWidth=this.indicator.clientWidth,this.maxPosX=this.wrapperWidth-this.indicatorWidth,"clip"==this.options.shrink?(this.minBoundaryX=8-this.indicatorWidth,this.maxBoundaryX=this.wrapperWidth-8):(this.minBoundaryX=0,this.maxBoundaryX=this.maxPosX),this.sizeRatioX=this.options.speedRatioX||this.scroller.maxScrollX&&this.maxPosX/this.scroller.maxScrollX),this.options.listenY&&(this.wrapperHeight=this.wrapper.clientHeight,this.options.resize?(this.indicatorHeight=u.max(u.round(this.wrapperHeight*this.wrapperHeight/(this.scroller.scrollerHeight||this.wrapperHeight||1)),8),this.indicatorStyle.height=this.indicatorHeight+"px"):this.indicatorHeight=this.indicator.clientHeight,this.maxPosY=this.wrapperHeight-this.indicatorHeight,"clip"==this.options.shrink?(this.minBoundaryY=8-this.indicatorHeight,this.maxBoundaryY=this.wrapperHeight-8):(this.minBoundaryY=0,this.maxBoundaryY=this.maxPosY),this.maxPosY=this.wrapperHeight-this.indicatorHeight,this.sizeRatioY=this.options.speedRatioY||this.scroller.maxScrollY&&this.maxPosY/this.scroller.maxScrollY),this.updatePosition()},updatePosition:function(){var e=this.options.listenX&&u.round(this.sizeRatioX*this.scroller.x)||0,t=this.options.listenY&&u.round(this.sizeRatioY*this.scroller.y)||0;this.options.ignoreBoundaries||(e<this.minBoundaryX?("scale"==this.options.shrink&&(this.width=u.max(this.indicatorWidth+e,8),this.indicatorStyle.width=this.width+"px"),e=this.minBoundaryX):e>this.maxBoundaryX?e="scale"==this.options.shrink?(this.width=u.max(this.indicatorWidth-(e-this.maxPosX),8),this.indicatorStyle.width=this.width+"px",this.maxPosX+this.indicatorWidth-this.width):this.maxBoundaryX:"scale"==this.options.shrink&&this.width!=this.indicatorWidth&&(this.width=this.indicatorWidth,this.indicatorStyle.width=this.width+"px"),t<this.minBoundaryY?("scale"==this.options.shrink&&(this.height=u.max(this.indicatorHeight+3*t,8),this.indicatorStyle.height=this.height+"px"),t=this.minBoundaryY):t>this.maxBoundaryY?t="scale"==this.options.shrink?(this.height=u.max(this.indicatorHeight-3*(t-this.maxPosY),8),this.indicatorStyle.height=this.height+"px",this.maxPosY+this.indicatorHeight-this.height):this.maxBoundaryY:"scale"==this.options.shrink&&this.height!=this.indicatorHeight&&(this.height=this.indicatorHeight,this.indicatorStyle.height=this.height+"px")),this.x=e,this.y=t,this.scroller.options.useTransform?this.indicatorStyle[m.style.transform]="translate("+e+"px,"+t+"px)"+this.scroller.translateZ:(this.indicatorStyle.left=e+"px",this.indicatorStyle.top=t+"px")},_pos:function(e,t){e<0?e=0:e>this.maxPosX&&(e=this.maxPosX),t<0?t=0:t>this.maxPosY&&(t=this.maxPosY),e=this.options.listenX?u.round(e/this.sizeRatioX):this.scroller.x,t=this.options.listenY?u.round(t/this.sizeRatioY):this.scroller.y,this.scroller.scrollTo(e,t)},fade:function(e,t){if(!t||this.visible){clearTimeout(this.fadeTimeout),this.fadeTimeout=null;var i=e?250:500,a=e?0:300;e=e?"1":"0",this.wrapperStyle[m.style.transitionDuration]=i+"ms",this.fadeTimeout=setTimeout(function(e){this.wrapperStyle.opacity=e,this.visible=+e}.bind(this,e),a)}}},e.utils=m,"undefined"!=typeof module&&module.exports?module.exports=e:"function"==typeof define&&define.amd?define(function(){return e}):r.IScroll=e}(window,document,Math),function(o,f){o.fp_scrolloverflow=function(){var i="fp-scrollable",r="."+i,c=".fp-section",a=c+".active",d=".fp-tableCell";function u(e){var t=fp_utils.closest(e,c);return null!=t?parseInt(getComputedStyle(t)["padding-bottom"])+parseInt(getComputedStyle(t)["padding-top"]):0}function n(){var l=this;function i(){var t;fp_utils.hasClass(f.body,"fp-responsive")?(t=l.options.scrollOverflowHandler,a(function(e){fp_utils.hasClass(fp_utils.closest(e,c),"fp-auto-height-responsive")&&t.remove(e)})):a(e)}function e(e){if(!fp_utils.hasClass(e,"fp-noscroll")){fp_utils.css(e,{overflow:"hidden"});var t,i=l.options.scrollOverflowHandler,a=i.wrapContent(),n=fp_utils.closest(e,c),r=i.scrollable(e),s=u(n);null!=r?t=i.scrollHeight(e):(t=e.scrollHeight-s,l.options.verticalCentered&&(t=p(d,e)[0].scrollHeight-s));var o=fp_utils.getWindowHeight()-s;o<t?null!=r?i.update(e,o):(l.options.verticalCentered?(fp_utils.wrapInner(p(d,e)[0],a.scroller),fp_utils.wrapInner(p(d,e)[0],a.scrollable)):(fp_utils.wrapInner(e,a.scroller),fp_utils.wrapInner(e,a.scrollable)),i.create(e,o,l.iscrollOptions)):i.remove(e),fp_utils.css(e,{overflow:""})}}function a(i){p(c).forEach(function(e){var t=p(".fp-slide",e);t.length?t.forEach(function(e){i(e)}):i(e)})}l.options=null,l.init=function(e,t){return l.options=e,l.iscrollOptions=t,"complete"===f.readyState&&(i(),fullpage_api.shared.afterRenderActions()),o.addEventListener("load",function(){i(),fullpage_api.shared.afterRenderActions()}),l},l.createScrollBarForAll=i}IScroll.prototype.wheelOn=function(){this.wrapper.addEventListener("wheel",this),this.wrapper.addEventListener("mousewheel",this),this.wrapper.addEventListener("DOMMouseScroll",this)},IScroll.prototype.wheelOff=function(){this.wrapper.removeEventListener("wheel",this),this.wrapper.removeEventListener("mousewheel",this),this.wrapper.removeEventListener("DOMMouseScroll",this)};var p=null,s={refreshId:null,iScrollInstances:[],iscrollOptions:{scrollbars:!0,mouseWheel:!0,hideScrollbars:!1,fadeScrollbars:!1,disableMouse:!0,interactiveScrollbars:!0},init:function(e){p=fp_utils.$;var t="ontouchstart"in o||0<navigator.msMaxTouchPoints||navigator.maxTouchPoints;return s.iscrollOptions.click=t,s.iscrollOptions=fp_utils.deepExtend(s.iscrollOptions,e.scrollOverflowOptions),(new n).init(e,s.iscrollOptions)},toggleWheel:function(i){p(r,p(a)[0]).forEach(function(e){var t=e.fp_iscrollInstance;null!=t&&(i?t.wheelOn():t.wheelOff())})},onLeave:function(){s.toggleWheel(!1)},beforeLeave:function(){s.onLeave()},afterLoad:function(){s.toggleWheel(!0)},create:function(i,a,n){p(r,i).forEach(function(e){fp_utils.css(e,{height:a+"px"});var t=e.fp_iscrollInstance;null!=t&&s.iScrollInstances.forEach(function(e){e.destroy()}),t=new IScroll(e,n),s.iScrollInstances.push(t),fp_utils.hasClass(fp_utils.closest(i,c),"active")||t.wheelOff(),e.fp_iscrollInstance=t})},isScrolled:function(e,t){var i=t.fp_iscrollInstance;return!i||("top"===e?0<=i.y&&!fp_utils.getScrollTop(t):"bottom"===e?0-i.y+fp_utils.getScrollTop(t)+1+t.offsetHeight>=t.scrollHeight:void 0)},scrollable:function(e){return p(".fp-slides",e).length?p(r,p(".fp-slide.active",e)[0])[0]:p(r,e)[0]},scrollHeight:function(e){return p(".fp-scroller",p(r,e)[0])[0].scrollHeight},remove:function(e){if(null!=e){var t=p(r,e)[0];if(null!=t){var i=t.fp_iscrollInstance;null!=i&&i.destroy(),t.fp_iscrollInstance=null,p(".fp-scroller",e)[0].outerHTML=p(".fp-scroller",e)[0].innerHTML,p(r,e)[0].outerHTML=p(r,e)[0].innerHTML}}},update:function(e,t){clearTimeout(s.refreshId),s.refreshId=setTimeout(function(){s.iScrollInstances.forEach(function(e){e.refresh(),fullpage_api.silentMoveTo(fp_utils.index(p(a)[0])+1)})},150),fp_utils.css(p(r,e)[0],{height:t+"px"}),fp_utils.css(p(r,e)[0].parentNode,{height:t+u(e)+"px"})},wrapContent:function(){var e=f.createElement("div");e.className=i;var t=f.createElement("div");return t.className="fp-scroller",{scrollable:e,scroller:t}}};return{iscrollHandler:s}}()}(window,document),$(function(){$("body").on("change keyup input click",".js-password-acc",password_acc),$("body").on("change keyup input click",".js-type-soft-view",view_type),$("body").on("change keyup input click",".price_xvg_,.count_xvg_",itogprice_xvg),$("body").on("change keyup input click",".js-del-items-basket-view",del_acc_material),$("body").on("change keyup input click",".js-add-acc-save",save_acc),$("body").on("change keyup input click",".js-edit-acc-more",edit_more_acc),$("body").on("change keyup input click",".tabs_006U",{key:"006U"},tabs_acc),$("body").on("change keyup input click",".js-reject-acc",RejectFoA),$("body").on("change keyup input click",".js-forward-acc",ForwardFoA),$("body").on("change keyup input click",".js-sign-a1",SingFoA),$("body").on("change keyup input click",".js-sign-end",SingFoEnd),$("body").on("change keyup input click",".js-sign-pay",SingFoPay),$("body").on("change",".js-id-kto-ajax",kto_fns)});var tabs_acc=function(e){var t=$(this).attr("id");(0!=t?$(this).parents(".mm_w-preorders").addClass("active-trips-menu"):($(this).parents(".mm_w-preorders").removeClass("active-trips-menu"),$(this).parents(".mm_w-preorders").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")),$(this).is(".active"))?($(this).parents(".mm_w-preorders").removeClass("active-trips-menu"),$(this).parents(".mm_w-preorders").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")):0!=t&&($(this).parents(".mm_w-preorders").next().empty().append('<div class="b_loading_small" style="position:relative; left: calc(50% - 30px); "><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(this).parents(".mm_w-preorders").next().slideDown("slow"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key+"[id="+t+"]").addClass("active"),AjaxClient("acc","tabs_info","GET","url="+window.location.href+"&id_tabs="+$(this).attr("id")+"&id="+$(this).parents(".preorders_block_global").attr("id_pre"),"AfterTabsInfoAcc",$(this).attr("id")+","+$(this).parents(".preorders_block_global").attr("id_pre"),0,1))};function AfterTabsInfoAcc(e,t){null!=t&&("string"==typeof t?t=t.split(","):t[0]=t),"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".preorders_block_global[id_pre="+t[1]+"]").find(".px_bg_trips").empty().append(e.query),NumberBlockFile(),ToolTip(),3!=t[0]&&4!=t[0]||($(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli)))}function edit_more_acc(){var e=$(this).parents("[id_pre]").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_edit_acc_more.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function save_acc(){var i=0;$(".js-save-form-acc").find(".gloab").each(function(e,t){""==$(this).val()||"0"==$(this).val()?($(this).parents(".input_2021").addClass("required_in_2021"),$(this).parents(".list_2021").addClass("required_in_2021"),i++):($(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".list_2021").removeClass("required_in_2021"))}),0==i?$(".js-save-form-acc").submit():alert_message("error","Не все поля заполнены")}function del_acc_material(e){1<$(".js-acc-block").length&&$.arcticmodal({type:"ajax",url:"forms/form_dell_material_acc.php?id="+$(this).attr("id_rel"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),e.stopPropagation()}var itogprice_xvg=function(){var e=$(this).closest(".box-modal"),t=$(".js-acc-block");e.find(".js-add-acc-block-x").show();var o=0;t.each(function(e,t){$(this).find(".count_xvg_").parents(".input_2021").removeClass("redaas"),$(this).find(".price_xvg_").parents(".input_2021").removeClass("redaas");var i=parseFloat($(this).find(".count_xvg_").val()),a=parseFloat($(this).find(".count_xvg_").attr("max")),n=parseFloat(ctrim($(this).find(".price_xvg_").val())),r=parseFloat(ctrim($(this).find(".price_xvg_").attr("max")));a<i&&$(this).find(".count_xvg_").parents(".input_2021").addClass("redaas"),r<n&&$(this).find(".price_xvg_").parents(".input_2021").addClass("redaas");var s=(i*n).toFixed(2);0!=s&&""!=s&&$.isNumeric(s)?($(this).find(".all_price_count_xvg span").empty().append($.number(s,2,"."," ")),o=(parseFloat(o)+parseFloat(s)).toFixed(2)):$(this).find(".all_price_count_xvg span").empty().append("0")}),$(".all_summa_xvg").find("span").empty().append($.number(o,2,"."," ")),0<o?$(".all_xvg").slideDown("slow"):$(".all_xvg").slideUp("slow")};function password_acc(){var e=$(this).parents(".password_acc").find("input");e.val()!=$(this).attr("id")&&(e.val($(this).attr("id")),$(this).parents(".password_acc").find(".choice-radio i").removeClass("active_task_cb"),$(this).parents(".password_acc").find(".input-choice-click-pass").removeClass("active_pass"),$(this).find(".choice-radio i").addClass("active_task_cb"),$(this).addClass("active_pass"))}function view_type(){1==$(".js-type-soft-view1").val()?($(".js-options-supply-1").slideDown("slow"),$(".js-options-supply-0").slideUp("slow")):($(".js-options-supply-0").slideDown("slow"),$(".js-options-supply-1").slideUp("slow"))}var delay1=function(){var i=0;return function(e,t){clearTimeout(i),i=setTimeout(e,t)}}(),delays=function(){var i=0;return function(e,t){clearTimeout(i),i=setTimeout(e,t)}}();function FileDragHover(e){e.stopPropagation(),e.preventDefault(),$(this).addClass("draghover")}function FileDragHover1(e){e.stopPropagation(),e.preventDefault(),$(this).removeClass("draghover")}function FileSelectHandler(e){FileDragHover(e),void 0===window.FileReader&&alert_message("error","Перетаскивание не поддерживается браузером");for(var t,i=e.originalEvent.dataTransfer.files,a=0;t=i[a];a++){var n=$(this).find(".js-upload-file").attr("type_block"),r=$(this).find(".js-upload-file").attr("type_load"),s=$(this).find(".js-upload-file").attr("id_object"),o=$("[name=myfile]").parents("form");o.attr("type_load",r),o.attr("type_block",n),o.attr("id_object",s);var l=r,c=n,d=(s=s,$('div[type_block="'+c+'"]').parents(".js-image-gl")),u=d.find(".li-image").length+1;if(t){var p="";0!=d.find(".list-image-icons").length&&(p='<span class="type-img"></span>'),d.find(".list-image").append('<div number_li="'+u+'" class="li-image"><span class="name-img"><a>'+t.name+"</a></span>"+p+'<span class="del-img js-dell-image"></span><span class="size-img">'+(t.size/1024/1024).toFixed(2)+' МБ</span><div class="progress-img"><div class="p-img" style="width: 0%;"></div></div></div>'),d.find(".list-image").show(),d.find(".js-upload-file").hide().addClass("eshe-load-file"),d.find("[number_li="+u+"] .p-img").show(),uploadS(t,l,s,u,c)}return!1}}function ParseFile(e){alert("<p>File information: <strong>"+e.name+"</strong> type: <strong>"+e.type+"</strong> size: <strong>"+e.size+"</strong> bytes</p>")}$(document).ready(function(){$("body").on("click",".js-upload-file",UploadInvoice),$("body").on("dragover",".js-image-gl",FileDragHover),$("body").on("dragleave",".js-image-gl",FileDragHover1),$("body").on("drop",".js-image-gl",FileSelectHandler),$("body").on("change",".js-file-load",UploadScanSChange),$("body").on("change keyup input click",".js-image-gl .js-dell-image",DellImageBlock),NumberBlockFile()});var UploadInvoice=function(){var e=$(this).attr("type_block"),t=$(this).attr("type_load"),i=$(this).attr("id_object"),a=$("[name=myfile]").parents("form");a.attr("type_load",t),a.attr("type_block",e),a.attr("id_object",i),$("[name=myfile]").trigger("click")};function NumberBlockFile(){var i=1;$(".js-upload-file").each(function(e,t){$(this).attr("type_block",i),i++}),0==$(".form_up").length&&$("body").append('<form class="form_up"><input class="js-file-load" type="file" name="myfile"></form>')}var UploadScanSChange=function(){var e=$(this).parents("form").attr("type_load"),t=$(this).parents("form").attr("type_block"),i=$(this).parents("form").attr("id_object"),a=$('div[type_block="'+t+'"]').parents(".js-image-gl"),n=a.find(".li-image").length+1;if(file=this.files[0],file){var r="";0!=a.find(".list-image-icons").length&&(r='<span class="type-img"></span>'),a.find(".list-image").append('<div number_li="'+n+'" class="li-image"><span class="name-img"><a>'+this.files[0].name+"</a></span>"+r+'<span class="del-img js-dell-image"></span><span class="size-img">'+(this.files[0].size/1024/1024).toFixed(2)+' МБ</span><div class="progress-img"><div class="p-img" style="width: 0%;"></div></div></div>'),a.find(".list-image").show(),a.find(".js-upload-file").hide().addClass("eshe-load-file"),a.find("[number_li="+n+"] .p-img").show(),uploadS(file,e,i,n,t)}return!1};function DellImageBlock(){var e=$(this).parents(".li-image"),t=$(this).parents(".list-image");DellFile($(this).attr("id")),$(this).parents(".js-image-gl").find("input").val(DellValString("dell",",",$(this).parents(".js-image-gl").find("input").val(),$(this).attr("id"))),e.slideUp("slow",function(){$(this).remove(),0==t.find(".li-image").length&&(t.slideUp("slow"),t.parents(".js-image-gl").find(".js-upload-file").removeClass("eshe-load-file"));var i=1;t.find(".li-image").each(function(e,t){$(this).attr("number_li",i),i++})})}function uploadS(e,t,i,a,n){var r=$("div[type_block="+n+"]").parents(".js-image-gl"),s=new XMLHttpRequest;s.onload=s.onerror=function(){if(200==this.status){r.find(".js-upload-file").show(),r.find("[number_li="+a+"] .p-img").width(0).hide(),r.find("[number_li="+a+"]").addClass("yes-load"),alert_message("ok","Файл загружен");var e=JSON.parse(this.responseText);r.find("[number_li="+a+"] .del-img").attr("id",e.echo),0!=r.find("[number_li="+a+"] .type-img").length&&r.find("[number_li="+a+"] .type-img").empty().append(e.type),r.find("[number_li="+a+"] .name-img a").attr("href",e.link),name_sql_image=e.echo;var t=r.find("input");""==t.val()?t.val(name_sql_image):t.val(t.val()+","+name_sql_image)}else r.find(".js-upload-file").show(),r.find("[number_li="+a+"] .p-img").width(0).hide(),r.find("[number_li="+a+"]").addClass("no-load"),alert_message("error","Файл не загружен. Неверный формат"),setTimeout(function(){r.find("[number_li="+a+"]").slideUp("slow",function(){var e=$(this).parents(".list-image");$(this).remove(),0==e.find(".li-image").length&&(e.slideUp("slow"),r.find(".js-upload-file").removeClass("eshe-load-file"))})},3e3)},s.upload.onprogress=function(e){var t=Math.round(100*e.loaded/e.total);r.find("[number_li="+a+"] .p-img").width(t)},s.open("POST","Ajax/file/upload.php",!0);var o=new FormData;o.append("thefile",e),o.append("type",t),o.append("object",i),s.send(o)}function DellFile(e){""!=e&&AjaxClient("file","dell","GET","id="+e,"AfterZero",0,0)}function AfterZero(e,t){}function DellValString(e,t,i,a){var n="";if("dell"==e)for(var r=i.split(t),s=0,o=0;o<r.length;o++)r[o]!=a&&""!=r[o]&&(n=0==s?r[o]:n+t+r[o],s++);else n=""!=jQuery.trim(i)?i+t+a:a;return n}function DellGroup(){var e=$(this).parents(".js-group");e.slideUp("slow",function(){e.remove()})}function AddGroup(){var e=$(this).parents(".js-group"),t="";e.is(".group-right")&&(t="group-right");var i=e.html();e.after('<div class="js-group '+t+' contact-group line-group">'+i+"</div>");var a=e.next();a.find(".active_in_2018").removeClass("active_in_2018"),a.find(".required_in_2018").removeClass("required_in_2018"),0==a.find(".js-dell-group").length&&a.find(".js-add-group").after('<div data-tooltip="Удалить" class="dell-group js-dell-group"><div></div></div>'),ToolTip(),a.find("input").val(""),a.find("textarea").val(""),a.find(".js-resize-block").each(function(e,t){2==$(this).find("textarea").length&&($(this).find("textarea").first().remove(),$(this).find("textarea").removeAttr("style"),$(this).find("textarea").autoResize({extraSpace:10}))}),a.find(".list_2018").removeClass("active_in_2018").removeClass("active1_in_2018"),a.find(".list_2018 input").val(""),a.find(".list_2018 .sel_active").removeClass("sel_active"),a.find(".slct").attr("data_src","").empty(),Zindex(),SelectUpdate()}function SelectUpdate(){$(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli)}function form_doc_rate(){$(this).parents(".plus_comm_vot").find(".form-rate-ok1").is(".show-form-rate1")||0!=$(this).parents(".plus_comm_vot").find(".form-rate-ok1").length&&($(".form-rate-ok1").removeClass("show-form-rate1"),$(this).parents(".plus_comm_vot").find(".form-rate-ok1").addClass("show-form-rate1"),$(this).parents(".plus_comm_vot").find(".form-rate-ok1 .tyyo1").focus())}function ok_rate_form_chat_left(e){var t=$(this).parents(".form-rate-ok1").find(".tyyo1").val();""!=jQuery.trim(t)?($(this).parents(".form-rate-ok1").removeClass("show-form-rate1"),$(this).parents("td").find(".zame_kk").addClass("yes-note"),$(this).parents("td").find(".commun").empty().append(t),$(this).parents("td").find(".commun_hide").val(1)):($(this).parents(".form-rate-ok1").removeClass("show-form-rate1"),$(this).parents("td").find(".zame_kk").removeClass("yes-note"),$(this).parents("td").find(".commun").empty(),$(this).parents("td").find(".commun_hide").val(0)),e.stopPropagation()}function add_docs_2021(){$.arcticmodal({type:"ajax",url:"forms/form_add_docs_2021.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function RejectFoD(){if(!$(this).is(".gray-bb")){var e=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_docs_reject.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}}function ForwardFoD(){if(!$(this).is(".gray-bb")){var e=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_docs_forward.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}}function SingFoD(){if(!$(this).is(".gray-bb")){var e=$(this);if(!e.hasClass("gray-bb"))if(1==e.find("input").val()){var t=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_docs_remark.php?id="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}else $("#js-form-next-sign").submit()}}$(function(){$("body").on("change keyup input click",".js-add-group",AddGroup),$("body").on("change keyup input click",".js-dell-group",DellGroup)}),$(function(){$("body").on("change keyup input click",".js-zame-tours",form_doc_rate),$("body").on("change keyup input click",".js-ok-rate-chat-left",ok_rate_form_chat_left)}),$(function(){$("body").on("change keyup input click",".js-password-docs",password_docs),$("body").on("change keyup input click",".js-add-docs",add_docs_2021),$("body").on("change keyup input click",".js-add-docs-save",save_docs),$("body").on("change keyup input click",".js-edit-docs-more",edit_more_docs),$("body").on("change keyup input click",".tabs_007U",{key:"007U"},tabs_docs),$("body").on("change keyup input click",".js-reject-docs",RejectFoD),$("body").on("change keyup input click",".js-forward-docs",ForwardFoD),$("body").on("change keyup input click",".js-sign-a1",SingFoD)});var tabs_docs=function(e){var t=$(this).attr("id");(0!=t?$(this).parents(".mm_w-preorders").addClass("active-trips-menu"):($(this).parents(".mm_w-preorders").removeClass("active-trips-menu"),$(this).parents(".mm_w-preorders").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")),$(this).is(".active"))?($(this).parents(".mm_w-preorders").removeClass("active-trips-menu"),$(this).parents(".mm_w-preorders").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")):0!=t&&($(this).parents(".mm_w-preorders").next().empty().append('<div class="b_loading_small" style="position:relative; left: calc(50% - 30px); "><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(this).parents(".mm_w-preorders").next().slideDown("slow"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key+"[id="+t+"]").addClass("active"),AjaxClient("docs","tabs_info","GET","url="+window.location.href+"&id_tabs="+$(this).attr("id")+"&id="+$(this).parents(".preorders_block_global").attr("id_pre"),"AfterTabsInfodocs",$(this).attr("id")+","+$(this).parents(".preorders_block_global").attr("id_pre"),0,1))};function AfterTabsInfodocs(e,t){null!=t&&("string"==typeof t?t=t.split(","):t[0]=t),"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".preorders_block_global[id_pre="+t[1]+"]").find(".px_bg_trips").empty().append(e.query),NumberBlockFile(),ToolTip(),3!=t[0]&&4!=t[0]||($(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli)))}function edit_more_docs(){var e=$(this).parents("[id_pre]").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_edit_docs_more.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function save_docs(){var i=0;$(".js-save-form-docs").find(".gloab").each(function(e,t){""==$(this).val()||"0"==$(this).val()?($(this).parents(".input_2021").addClass("required_in_2021"),$(this).parents(".list_2021").addClass("required_in_2021"),i++):($(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".list_2021").removeClass("required_in_2021"))}),0==i?$(".js-save-form-docs").submit():alert_message("error","Не все поля заполнены")}function password_docs(){var e=$(this).parents(".password_docs").find("input");e.val()!=$(this).attr("id")&&(e.val($(this).attr("id")),$(this).parents(".password_docs").find(".choice-radio i").removeClass("active_task_cb"),$(this).parents(".password_docs").find(".input-choice-click-pass").removeClass("active_pass"),$(this).find(".choice-radio i").addClass("active_task_cb"),$(this).addClass("active_pass"),view_type())}function save_naryad(){var s=0;$(".messa:visible").find(".text_finery_message_").removeClass("error_formi"),$(".messa:visible").find(".text_finery_message_").each(function(e,t){""==$(this).val()&&(s=1,$(this).addClass("error_formi"))}),$(".work__s").find(".price_finery_").removeClass("error_formi"),$(".work__s").find(".count_finery_").removeClass("error_formi"),$(".mat").find(".price_finery_mater_").removeClass("error_formi"),$(".mat").find(".count_finery_mater_").removeClass("error_formi"),$(".messa:visible").each(function(e,t){var i=$(this).attr("id_mes"),a=i.split("_");a.length,i=a[0];var n=$(".work__s[rel_id="+i+"]").find(".count_finery_").val(),r=$(".work__s[rel_id="+i+"]").find(".price_finery_").val();$(".work__s[rel_id="+i+"]").find(".price_finery_").removeClass("error_formi"),$(".work__s[rel_id="+i+"]").find(".count_finery_").removeClass("error_formi"),0!=n&&""!=n&&$.isNumeric(n)||($(".work__s[rel_id="+i+"]").find(".count_finery_").addClass("error_formi"),s=1),0!=r&&""!=r&&$.isNumeric(r)||($(".work__s[rel_id="+i+"]").find(".price_finery_").addClass("error_formi"),s=1),$(".mat[rel_w="+i+"]").each(function(e,t){var i=$(this).find(".count_finery_mater_").val();$(this).find(".price_finery_mater_").val();$(this).find(".price_finery_mater_").removeClass("error_formi"),$(this).find(".count_finery_mater_").removeClass("error_formi"),""!=i&&$.isNumeric(i)||($(this).find(".count_finery_mater_").addClass("error_formi"),s=1)})}),1==s?alert_message("error","Не все поля заполнены"):$("#lalala_add_form").submit()}$(function(){$("body").on("change keyup input click",".js-add_nar",save_naryad)}),window.search_min=1,window.search_deley=800,window.search_class=".loll_soply";var delay1=function(){var i=0;return function(e,t){clearTimeout(i),i=setTimeout(e,t)}}(),tabs_app=function(e){var t=$(this).attr("id");(0!=t?$(this).parents(".mm_w-preorders").addClass("active-trips-menu"):($(this).parents(".mm_w-preorders").removeClass("active-trips-menu"),$(this).parents(".mm_w-preorders").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")),$(this).is(".active"))?($(this).parents(".mm_w-preorders").removeClass("active-trips-menu"),$(this).parents(".mm_w-preorders").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")):0!=t&&($(this).parents(".mm_w-preorders").next().empty().append('<div class="b_loading_small" style="position:relative; left: calc(50% - 30px); "><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(this).parents(".mm_w-preorders").next().slideDown("slow"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key+"[id="+t+"]").addClass("active"),AjaxClient("app","tabs_info","GET","url="+window.location.href+"&id_tabs="+$(this).attr("id")+"&id="+$(this).parents(".preorders_block_global").attr("id_pre"),"AfterTabsInfoApp",$(this).attr("id")+","+$(this).parents(".preorders_block_global").attr("id_pre"),0,1))};function ctrim(e){return e=e.replace(/\s/g,"")}var validate11=function(){$(this).val($(this).val().replace(/[^\d.]*/g,"").replace(/([.])[.]+/g,"$1").replace(/^[^\d]*(\d+([.]\d{0,5})?).*$/g,"$1"))};function UploadInvoice_old(){var e=$(this).attr("id_upload");$("[name=myfiles"+e+"]").trigger("click")}function UploadReportsChange_old(){var e=$(this).parents("form").attr("id_sc");return file=this.files[0],file&&uploadRR_old(file,e),!1}function uploadRR_old(e,i){var t=new XMLHttpRequest;t.onload=t.onerror=function(){200==this.status?($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide(),$(".scap_load_"+i).after(),alert_message("ok","ваш профиль обновлен"),autoReloadHak()):($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide())},t.upload.onprogress=function(e){$("[id_upload="+i+"]").hide(),$(".scap_load_"+i).show();var t=Math.round(100*e.loaded/e.total);$(".scap_load_"+i).find(".scap_load__").width(t+"%")},t.open("POST","users/upload.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",i),t.send(a)}function save_setting(){var i=0;$(".js-form-gloab .gloab").each(function(e,t){""==$(this).val()?($(this).parents(".input_2021").addClass("required_in_2021"),$(this).parents(".list_2021").addClass("required_in_2021"),i++):($(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".list_2021").removeClass("required_in_2021"))}),0==i?($(".js-form-gloab  .js-save-setting").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$("#lalala_add_form").submit()):alert_message("error","Не все поля заполнены")}function Eye(){$(this).is(".ais-open")?($(this).removeClass("ais-open"),$(this).parents(".input_2021").find(".input_new_2021").attr("type","password")):($(this).addClass("ais-open"),$(this).parents(".input_2021").find(".input_new_2021").attr("type","text"))}function count_task(){""!=$(".hidden-count-task").text()&&($(".menu-09-count").empty().append($(".hidden-count-task").text()),$(".menu-09-count").show())}function removeParam(e,t){var i=t.split("?"),a=i[0],n=[],r=-1!==t.indexOf("?")?i[1]:"";if(""!==r){for(var s=(n=r.split("&")).length-1;0<=s;--s)n[s].split("=")[0]===e&&n.splice(s,1);a=a+"?"+n.join("&")}return"?"==a.toString().slice(-1)&&(a=a.slice(0,-1)),a}function ForwardFo(){if(!$(this).is(".gray-bb")){var e=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_app_forward.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}}function RejectFo(){if(!$(this).is(".gray-bb")){var e=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_app_reject.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}}function SingFo(){if(!$(this).is(".gray-bb")){var e=$(this);if(!e.hasClass("gray-bb"))if(1==e.find("input").val()){var t=$(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_app_remark.php?id="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}else $("#js-form-next-sign").submit()}}function MemoButType(e){var t=e.parents(".save_button");1==e.val()?t.addClass("yellow-bb"):t.removeClass("yellow-bb"),t.find(".js-son").hide(),t.find("[son="+e.val()+"]").show()}function input_2021(){$(".input_new_2021").each(function(e,t){""!=$.trim($(this).val())&&$(this).parents(".input_2021").addClass("active_in_2021")})}function CheckboxGroup(e){var t=$(this).find("input").first().val(),i=$(this).parents(".js-group-c"),a=0;$(this).find("i").is(".active_task_cb")?($(this).find("i").removeClass("active_task_cb"),$(this).find("input").last().val(0),a=1):($(this).find("i").addClass("active_task_cb"),$(this).find("input").last().val(1));var n="";if(i.find(".js-checkbox-group").each(function(e,t){$(this).find("i").is(".active_task_cb")&&(n=""==n?$(this).find("input").first().val():n+","+$(this).find("input").first().val())}),i.is(".js-tolko-one")&&(i.find("i").removeClass("active_task_cb"),i.find(".js-checkbox-group").each(function(e,t){$(this).find("input").last().val(0)}),0==a&&($(this).find("i").addClass("active_task_cb"),$(this).find("input").last().val(1))),i.is(".js-one-all-select")){var r=i.find(".js-checkbox-group").first();if(""==n)return void r.trigger("click");if($(this).find("i").is(".active_task_cb")&&0==t&&""!=n&&"0"!=n&&(n=r.find("a").attr("rel"),i.find("i").removeClass("active_task_cb"),i.find(".js-checkbox-group").each(function(e,t){$(this).find("input").last().val(0)}),r.find("i").addClass("active_task_cb"),r.find("input").last().val(1)),0!=t){var s=i.find(".js-checkbox-group").length,o=i.find(".active_task_cb").length;parseInt(o+1)==s&&(i.find("i").removeClass("active_task_cb"),i.find(".js-checkbox-group").each(function(e,t){$(this).find("input").last().val(0)}),r.find("i").addClass("active_task_cb"),r.find("input").last().val(1))}if(""!=n&&"0"!=n&&r.find("i").is(".active_task_cb"))return void r.trigger("click")}MemoButType($(this).find("input")),e.stopPropagation()}function animation_teps_supply(){$(".teps_supply").each(function(e,t){$(this).animate({width:$(this).attr("rel_w")+"%"},2e3,function(){})})}function AutoResizeT(){$(".js-autoResize").each(function(e,t){$(this).autoResize({extraSpace:10})})}function KeyUpInput2021(){$(this).is(".gloab")&&(""!=$(this).val()&&0!=$(this).val()&&$(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".input_2021").removeClass("error_2021"))}function KeyUpInput(){$(this).is(".gloab")&&(""!=$(this).val()&&0!=$(this).val()&&$(this).parents(".input_2018").removeClass("required_in_2018"),$(this).parents(".input_2018").removeClass("error_2018"))}function ToolTipInput(){$(".help-icon").mousemove(function(e){if(0==(t=$(this).parents(".input_2021")).length)var t=$(this).parents(".js-helps");0==t.find(".toolhelp").length&&t.prepend('<div class="toolhelp"><span></span></div>');var i=t.find(".toolhelp"),a=t.find(".toolhelp span");$data_tooltip=$(this).attr("help"),a.text($data_tooltip);$(this).offset();e.pageX-250<=$(window).width()/2?(i.css({top:"0px",right:-(i.outerWidth()+40)}),setTimeout(function(){i.fadeIn(500)},400)):i.hide()}).mouseout(function(){if(0==(e=$(this).parents(".input_2021").find(".toolhelp")).length)var e=$(this).parents(".js-helps").find(".toolhelp");e.remove()})}function initializeFormsJs(){try{forms_js_load()}catch(e){$.getScript(window.src_forms,function(e,t,i){console.log("yes load script")})}}function LoadFFo(){console.log("проверка полной загрузки"),1==window.yesform&&(clearInterval(TimerScript),ScriptForms())}function autoReloadHak(){var e=self.location;location.href=e}function BodyScrool(){1==$(".arcticmodal-container").length&&($("body").css("margin-right","0px"),$("body").css("overflow","auto"))}function dell_invoice(){var e=$(this).attr("id_rel");$("[invoice_material="+e+"]").hide(),$.arcticmodal({type:"ajax",url:"forms/form_dell_invoice.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function UpdateImageInvoiceAkt(e,t){AjaxClient("invoices","update_akt","GET","url="+window.location.href+"&id="+e+"&type="+t,"AfterUpdateAkt",t,0)}function ErrorMax(){var e=parseFloat($(this).attr("max"));$(this).removeClass("redaas_invcoice");var t=parseFloat($(this).val());""!=t&&e<t&&"0"!=t&&$(this).addClass("redaas_invcoice")}function BrakError(){var e=$(this).parents("[invoice_group]").attr("invoice_group");$("[invoices_messa="+e+"]").find(".count_defect_in_").removeClass("redaas_invcoice");var t=parseFloat($("[invoice_material="+e+"]").find(".count_in_").val()),i=parseFloat($("[invoices_messa="+e+"]").find(".count_defect_in_").val());""!=i&&t<i&&""!=t&&$("[invoices_messa="+e+"]").find(".count_defect_in_").addClass("redaas_invcoice")}function countErrorMax(){$(".count_in_").each(function(e,t){var i=parseFloat($(this).attr("max"));$(this).removeClass("redaas_invcoice");var a=parseFloat($(this).val());""!=a&&i<a&&"0"!=a&&$(this).addClass("redaas_invcoice")})}function search_posta_li2(){$(".contractor_add").hide(),$(".select-mania-theme-orange1").show(),$(".new_contractor_").val(0)}function plus_postt(){$(".contractor_add").show(),$(".contractor__").hide(),$(".new_contractor_").val(1)}function yoop_click(){var e=$(this).parents(".yoop_");e.is(".hide_yoop")?e.removeClass("hide_yoop"):e.addClass("hide_yoop")}function search_posta_li(){$(".loll_drop").css("transform","scaleY(0)"),$(".post_p").val($(this).find("a").attr("rel")),$(this).parents(".loll_div").removeClass("required_in_2018"),$("[name=number_soply]").val($(this).find("a").text().toUpperCase()),$("[name=number_soply]").attr("val_old",$(this).find("a").text().toUpperCase()),$(".b-loading-message").empty().hide()}function search_posta1(){1<=$.trim($(this).val().length)&&$(".loll_drop").css("transform","scaleY(1)")}function search_posta(){if(null==$(this).attr("readonly")){1<=$.trim($(this).val().length)?$(this).parents(".loll_div").find(".loll_dell").show():$(this).parents(".loll_div").find(".loll_dell").hide();$(this);delay1(function(e){$.trim($(window.search_class).val().length)>=window.search_min&&($(".b-loading-message").empty().hide(),$(".b-loading").show(),$(this).parents(".loll_div").find(".loll_drop").css("transform","scaleY(0)"),AjaxClient("supply","search_contractor","GET","url="+window.location.href+"&query="+$(window.search_class).val()+"&active="+$(".post_p").val(),"Aftersearch_posta",1,0))},window.search_deley,$(this))}}function Aftersearch_posta(e,t){"reg"==e.status&&($(".b-loading").hide(),WindowLogin()),"yes"==e.status&&($(".loll_drop").empty().append(e.echo).css("transform","scaleY(1)"),$(".b-loading").hide()),"ok"==e.status&&($(".b-loading").hide(),$(".b-loading-message").empty().append("ничего не найдено").show())}function InputFocusNew2021(){$(this).val(),$(this).prev("label");var e=$(this).parents(".input_2021");e.is(".active_in_2021")||e.addClass("active_in_2021"),e.is(".active1_in_2021")||e.addClass("active1_in_2021"),0!=e.find(".cal_2021").length&&$(".date___2019").show()}function InputBlurNew2021(){var e=$(this).val(),t=($(this).prev("label"),$(this).parents(".input_2021"));t.removeClass("active1_in_2021"),""==e&&t.removeClass("active_in_2021"),$(this).is(".date2021_mask")?!$(this).is(".required")||""!=e&&"дд.мм.гггг"!=e||t.is(".required_in_2021")?$(this).is(".required")&&""!=e&&"дд.мм.гггг"!=e&&t.removeClass("required_in_2021"):t.addClass("required_in_2021"):$(this).is(".required")&&""==e&&!t.is(".required_in_2021")?t.addClass("required_in_2021"):$(this).is(".required")&&""!=e&&t.removeClass("required_in_2021")}function InputFocusNew(){$(this).val(),$(this).prev("label");var e=$(this).parents(".input_2018");e.is(".active_in_2018")||e.addClass("active_in_2018"),e.is(".active1_in_2018")||e.addClass("active1_in_2018"),0!=e.find(".cal_2018").length&&$(".date___2019").show()}function InputBlurNew(){var e=$(this).val(),t=($(this).prev("label"),$(this).parents(".input_2018"));t.removeClass("active1_in_2018"),""==e&&(t.removeClass("active_in_2018"),$(this).is(".gloab")?t.addClass("required_in_2018"):t.removeClass("required_in_2018"))}function DellImageInvoice(){var e=$(this).attr("for");AjaxClient("invoices","del_img","GET","url="+window.location.href+"&id="+e,"AfterDellImageInvoice",e,0)}function UpdateContractorInvoice(){var e=$(this).val();$.isNumeric(e)&&0!=e&&$(".add_material_invoice").attr("col",e)}function DellImageSupply(){var e=$(this).attr("for");AjaxClient("supply","del_img","GET","url="+window.location.href+"&id="+e,"AfterDellImageSupply",e,0)}function UpdateImageSupply(e){AjaxClient("supply","update_img","GET","url="+window.location.href+"&id="+e,"AfterUpdateImageSupply",e,0)}function UpdateImageInvoice(e){AjaxClient("invoices","update_img","GET","url="+window.location.href+"&id="+e,"AfterUpdateImageInvoice",e,0)}function UpdateWalletStatus(e){$(".billl[rel_id="+e+"]").find(".status_wallet_ada").empty(),$(".billl[rel_id="+e+"]").find(".button_ada_wall").empty().append('<div class="loader_inter"><div></div><div></div><div></div><div></div></div>'),AjaxClient("bill","bill_status","GET","url="+window.location.href+"&id="+e,"AfterWalletSTx",e,0)}function message_load(){if($(".history_message").is(":visible")){$(".history_message").hide();var e=$(".content_block").attr("id_content");AjaxClient("message","load_message","GET","url="+window.location.href+"&id="+e+"&n_st="+$(".content_block").attr("n")+"&s="+$(".history_message").attr("s_m"),"AfterMESS",e,0)}}function xvg_yes(){$(".content_block").attr("iu");var e=$(this).attr("rel_bill");$.arcticmodal({type:"ajax",url:"forms/form_yes_bill.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function booker_yes(){$(".content_block").attr("iu");var e=$(this).attr("rel_booker");$.arcticmodal({type:"ajax",url:"forms/form_booker_yes.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function xvg_yes1(){var e=$(this).attr("rel_bill");$.arcticmodal({type:"ajax",url:"forms/form_edit_stock.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function xvg_no1(){$(".content_block").attr("iu");var e=$(this).attr("rel_bill");$.arcticmodal({type:"ajax",url:"forms/form_dell_stock.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function xvg_no(){$(".content_block").attr("iu");var e=$(this).attr("rel_bill");$.arcticmodal({type:"ajax",url:"forms/form_no_bill.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function vall_supply(){var e=$(this).val();$("[rel_status="+$(this).attr("rel")+"]").hide(),AjaxClient("supply","status_work","GET","url="+window.location.href+"&id="+$(this).attr("rel")+"&val="+e,"Aftervall_supply",$(this).attr("rel"),0)}function option_mat1(){var e=$(this).val(),t=$(this).parents("[rel_id]").attr("rel_id");1==e&&$.arcticmodal({type:"ajax",url:"forms/form_edit_yes_bill.php?id="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),2==e&&$.arcticmodal({type:"ajax",url:"forms/form_dell_yes_bill.php?id="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function option_mat(){var e=$(this).val(),t=$(this).parents("[supply_id]").attr("supply_id");1==e&&$.arcticmodal({type:"ajax",url:"forms/form_soply_sklad_2021.php?id="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function UpdateCostFinery(e){var t=parseFloat($(".mat[rel_mat="+e+"]").find(".аmater_").val()),i=parseFloat($(".mat[rel_mat="+e+"]").find(".count_finery_mater_").attr("my")),a=parseFloat($(".mat[rel_mat="+e+"]").find("[id_stock_m]").attr("id_stock_m"));if(""!=t&&0!=t&&""!=a&&0!=a&&""!=i&&0!=i&&t<=i){$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").val("");$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").parents(".mat").attr("rel_w"),$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").parents(".mat").attr("rel_mat");var n=parseFloat($(".mat[rel_mat="+e+"]").find(".price_finery_mater_").attr("max")),r=(parseFloat($(".mat[rel_mat="+e+"]").find(".price_finery_mater_").attr("my")),$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").val());if($(".mat[rel_mat="+e+"]").find(".price_finery_mater_").removeClass("redaas"),0!=r&&""!=r&&$.isNumeric(r)&&(parseFloat(r)==n||isNaN(n)||$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").addClass("redaas")),serv_mess_m($(".mat[rel_mat="+e+"]").find(".price_finery_mater_")),summ_finery1(e),0!=$("[name=id_naa]").length)var s="url="+window.location.href+"&id="+a+"&count="+t+"&fin="+$("[name=id_naa]").val();else s="url="+window.location.href+"&id="+a+"&count="+t;AjaxClient("finery","update_cost","GET",s,"AfterUpdateCostFinery",e,0)}else{0==$("[name=status_naryad]").length&&$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").val("");$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").parents(".mat").attr("rel_w"),$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").parents(".mat").attr("rel_mat"),n=parseFloat($(".mat[rel_mat="+e+"]").find(".price_finery_mater_").attr("max")),parseFloat($(".mat[rel_mat="+e+"]").find(".price_finery_mater_").attr("my")),r=$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").val();$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").removeClass("redaas"),0!=r&&""!=r&&$.isNumeric(r)&&(parseFloat(r)==n||isNaN(n)||$(".mat[rel_mat="+e+"]").find(".price_finery_mater_").addClass("redaas")),serv_mess_m($(".mat[rel_mat="+e+"]").find(".price_finery_mater_")),summ_finery1(e)}}function xvg_bill(){var e=$(this).attr("rel_score");jQuery.scrollTo(".billl[rel_id="+e+"]",1e3,{offset:-120})}function scroll_to_bottom(e){var t=$("body").height();$("html,body").animate({scrollTop:t},e)}function inWindow(e){var i=$(window).scrollTop(),a=$(window).height(),t=$(e),n=[];return t.each(function(){var e=$(this),t=e.offset();i<=t.top&&e.height()+t.top<i+a&&n.push(this)}),$(n)}function windowSize(){sl_message_width()}function trim_number(e){return e=e.replace(/\s+/g,"")}function Dialog(e){if(0==$(e.target).closest(".del_dialog").length){var t=$(this).attr("rel_diagol");$(this).attr("href","/message/dialog/"+t+"/"),$(this).trigger("Click")}}function animation_teps(){$(".teps").each(function(e,t){$(this).animate({width:$(this).attr("rel_w")+"%"},2e3,function(){})})}function sl_message_width(){setTimeout(function(){if($(".smeta1").length){var e=$(".smeta1").find(".jk4").outerWidth(),t=$(".smeta1").find(".jk44").outerWidth(),i=$(".smeta1").find(".jk6").outerWidth(),a=$(".smeta1").width()-e-t-i-20;$(".smeta1").find(".mess_slu").width(a),$(".smeta1").find(".hs").width(e+t)}},1e3)}function maskk(e){e.val(e.val().replace(/[^\d.]*/g,"").replace(/([.])[.]+/g,"$1").replace(/^[^\d]*(\d+([.]\d{0,5})?).*$/g,"$1")),(0<$("[name=save_zayy]").length?savedefault_zay:savedefault)(e)}function maskk_max(e){var a=0;if(0<(n=parseFloat(e.val()))){var t=(r=e.parents(".mat")).find(".my_material").attr("id_stock_m"),i=r.find(".my_material").attr("count");$("[id_stock_m="+t+"]").each(function(e,t){var i=parseFloat($(this).parents(".mat").find(".count_finery_mater_").val());""!=i&&0<i&&(a+=parseFloat(i))}),n+(a-=n)>parseFloat(i)&&e.val(e.val().slice(0,-1))}var n;a=0;if(0<(n=parseFloat(e.val()))){var r;t=(r=e.parents(".mat")).find(".my_material").attr("id_stock_m"),i=r.find(".my_material").attr("count");$("[id_stock_m="+t+"]").each(function(e,t){var i=parseFloat($(this).parents(".mat").find(".count_finery_mater_").val());""!=i&&0<i&&(a+=parseFloat(i))}),n+(a-=n)>parseFloat(i)&&e.val("")}}function maskk1(e){e.val(e.val().replace(/[^\d]*/g,"").replace(/([])[]+/g,"$1").replace(/^[^\d]*(\d+([]\d{0,5})?).*$/g,"$1")),(0<$("[name=save_zayy]").length?savedefault_zay:savedefault)(e)}var ChangeSupply=function(){var e=$(this).parents(".suppp_tr"),t=e.attr("rel_id");e.is(".active_supplyx")?(e.removeClass("active_supplyx"),$("[supply_stock="+t+"]").hide()):(e.addClass("active_supplyx"),$("[supply_stock="+t+"]").show())},slide_skkk=function(){$(this).is(".slide_onon")?($(this).find(".sklad_plus_uss").slideUp("slow"),$(this).removeClass("slide_onon")):($(this).find(".sklad_plus_uss").slideDown("slow"),$(this).addClass("slide_onon"))},menuclick=function(){var e=$(this).next(".menu_supply").find(".drops");e.is(".active_menu_s")?(e.removeClass("active_menu_s"),e.css("transform","scaleY(0)")):(e.addClass("active_menu_s"),e.css("transform","scaleY(1)"))},label_show_load=function(){$(".label_s").each(function(e,t){$(this).prev("label").length&&(""==$(this).val()?$(this).prev("label").hide():$(this).prev("label").show())})},label_show=function(){$(this).prev("label").length&&(""==$(this).val()?$(this).prev("label").hide():$(this).prev("label").show())};function MydblclickXX(){var a=0;if(null==$(this).attr("readonly")){var e=$(this).attr("max"),t=$(this).parents(".mat"),i=t.find(".my_material").attr("id_stock_m"),n=t.find(".my_material").attr("count");$("[id_stock_m="+i+"]").each(function(e,t){var i=parseFloat($(this).parents(".mat").find(".count_finery_mater_").val());""!=i&&0<i&&!isNaN(i)&&(a+=parseFloat(i))}),parseFloat(e+a)<=parseFloat(n)&&($(this).val($(this).attr("max")).change(),(0<$("[name=save_zayy]").length?savedefault_zay:savedefault)($(this)))}}function Mydblclick(){null==$(this).attr("readonly")&&($(this).val($(this).attr("max")).change(),(0<$("[name=save_zayy]").length?savedefault_zay:savedefault)($(this)))}function serv_mess(e){$(".work__s[id_trr="+e+"]").attr("rel_id");var t=parseFloat($("#count_work_"+e).val()),i=parseFloat($("#price_work_"+e).val()),a=parseFloat($("#count_work_"+e).attr("max")),n=parseFloat($("#price_work_"+e).attr("max")),r=0,s=0;s=a<t?(r=1,a):t,n<i&&(r=1),$(".work__s[id_trr="+e+"]").find(".exceed").empty();var o=0;if($(".exceed").length){o=1;var l=(s*n-t*i).toFixed(2);0<l&&(o=0)}1==r?($(".work__s[id_trr="+e+"]").next().find(".messa").stop(!0).slideDown("slow",function(){$(this).css("height","")}),1==o&&$(".work__s[id_trr="+e+"]").find(".exceed").empty().append("+"+$.number(Math.abs(l),2,"."," "))):$(".work__s[id_trr="+e+"]").next().find(".messa").stop(!0).slideUp("slow")}function serv_mess_m(e){var t=e.parents(".mat").attr("rel_mat"),i=parseFloat($(".mat[rel_mat="+t+"]").find(".count_finery_mater_").val()),a=parseFloat($(".mat[rel_mat="+t+"]").find(".price_finery_mater_").val()),n=parseFloat($(".mat[rel_mat="+t+"]").find(".count_finery_mater_").attr("max")),r=parseFloat($(".mat[rel_mat="+t+"]").find(".count_finery_mater_").attr("my")),s=parseFloat($(".mat[rel_mat="+t+"]").find(".price_finery_mater_").attr("max")),o=0,l=0;""==i&&0!=i||(l=i!=n&&!isNaN(n)||0==i?(o=1,n):i,0==$("[name=status_naryad]").length&&r<i&&(o=2)),$(".mat[rel_mat="+t+"]").find(".exceed").empty();var c=0;if($(".exceed").length){c=1;var d=(l*s-i*a).toFixed(2);0<d&&(c=0)}1==o?($(".mat[rel_mat="+t+"]").next().find(".messa").stop(!0).slideDown("slow"),$(".mat[rel_mat="+t+"]").next().next().find(".messa_my").stop(!0).slideUp("slow"),1==c&&$(".mat[rel_mat="+t+"]").find(".exceed").empty().append("+"+$.number(Math.abs(d),2,"."," "))):($(".mat[rel_mat="+t+"]").next().find(".messa").stop(!0).slideUp("slow"),2==o?($(".mat[rel_mat="+t+"]").next().next().find(".messa_my").stop(!0).slideDown("slow"),$(".js-ut_nar").hide(),$(".js-pod_nar").hide(),$(".js-add_nar").show()):$(".mat[rel_mat="+t+"]").next().next().find(".messa_my").stop(!0).slideUp("slow"))}function serv_mess_m_app(e){var t=e.parents(".mat_zz").attr("rel_mat_zz"),i=$(".mat_zz[rel_mat_zz="+t+"]").find(".count_app_mater_").val(),a=parseFloat($(".mat_zz[rel_mat_zz="+t+"]").find(".count_app_mater_").attr("max")),n=0;a<i&&(n=1),1==n?$(".mat_zz[rel_mat_zz="+t+"]").next().next().find(".messa").stop(!0).slideDown("slow"):$(".mat_zz[rel_mat_zz="+t+"]").next().next().find(".messa").stop(!0).slideUp("slow")}function summ_finery1(e){var t=parseFloat($(".mat[rel_mat="+e+"]").find(".count_finery_mater_").val()),i=parseFloat($(".mat[rel_mat="+e+"]").find(".price_finery_mater_").val()),a=$(".mat[rel_mat="+e+"]").find(".summa_finery_mater_"),n=(t*i).toFixed(2);0!=n&&""!=n&&$.isNumeric(n)?a.empty().append($.number(n,2,"."," ")):a.empty(),UpdateItog()}function summ_finery(e){var t=$(".work__s[id_trr="+e+"]").attr("rel_id"),s=parseFloat($("#count_work_"+e).val()),o=parseFloat($("#count_work_"+e).attr("all")),i=parseFloat($("#price_work_"+e).val()),a=$("#summa_finery_"+e),n=(s*i).toFixed(2);0!=n&&""!=n&&$.isNumeric(n)?a.empty().append($.number(n,2,"."," ")):a.empty(),0!=s&&""!=s&&$.isNumeric(s)?$(".mat[rel_w="+t+"]").each(function(e,t){var i=parseFloat($(this).find(".count_finery_mater_").attr("all")),a=parseFloat($(this).find(".count_finery_mater_").attr("ost")),n=(i*s/o).toFixed(3),r=1;a<n&&(count_est=n,n=a.toFixed(3),r=0),1==r?($(this).find(".count_finery_mater_").attr("placeholder","MAX - "+n),$(this).find(".count_finery_mater_").attr("max",n),$(this).find(".hidden_max_count").val(n),$(this).find(".count_finery_mater_").prev("label").empty().append("MAX ("+n+")")):($(this).find(".count_finery_mater_").attr("placeholder","MAX - "+n+" EST - "+count_est),$(this).find(".count_finery_mater_").attr("max",n),$(this).find(".hidden_max_count").val(n),$(this).find(".count_finery_mater_").prev("label").empty().append("MAX ("+n+") EST ("+count_est+")")),$(this).find(".count_finery_mater_").change()}):$(".mat[rel_w="+t+"]").each(function(e,t){$(this).find(".count_finery_mater_").attr("placeholder",""),$(this).find(".count_finery_mater_").attr("max",""),$(this).find(".count_finery_mater_").prev("label").empty(),$(this).find(".count_finery_mater_").change(),$(this).find(".hidden_max_count").val("")}),UpdateItog()}function del_dialog(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_dialog.php?id="+$(this).attr("for"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function DellZayvaMaterial(){return $(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_material_zayava.php?id="+$(this).attr("id_rel")+"&n="+$(this).attr("naryd"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function DellZayvaMaterial1(){return $(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_material_zayava1.php?id="+$(this).attr("id_rel")+"&n="+$(this).attr("zayu"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function DellNarydWork(){return $(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_no_ajax.php?id="+$(this).attr("id_rel")+"&n="+$(this).attr("naryd"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function DellZayZay(){return $(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_zay_zay.php?id="+$(this).attr("id_rel"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function DellNaryd(){return $(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_nariad.php?id="+$(this).attr("id_rel"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function DellNarydWork1(){return $(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_work_is_nariad.php?id="+$(this).attr("id_rel")+"&n="+$(this).attr("naryd"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function password_butt(){var e=$(this).parents(".password_turs").find("input");e.val()!=$(this).attr("id")&&(e.val($(this).attr("id")),$(this).parents(".password_turs").find(".choice-radio i").removeClass("active_task_cb"),$(this).parents(".password_turs").find(".input-choice-click-pass").removeClass("active_pass"),$(this).find(".choice-radio i").addClass("active_task_cb"),$(this).addClass("active_pass"))}function BasketUpdate_Z(e){var t=$.cookie(window.b_cm+"_"+e).split(".").length;$(".basket_order").empty().append(t),$(".count_workssss").val(t)}function BasketUpdate(e){var t=$.cookie(window.b_co+"_"+e).split(".").length;$(".basket_order").empty().append(t),$(".count_workssss").val(t)}function updatecash(e){AjaxClient("cashbox","update_cash","GET","url="+window.location.href+"&id="+e,"AfterUCASH",e,0)}function UpdateItog(){var a=0,n=0;$(".work__s").find(".summ_price").each(function(e,t){if(""!=$(this).text()){var i=parseFloat(trim_number($(this).text()));""!=i&&0!=i&&(a+=i)}}),$(".mat[rel_w]").find(".summa_finery_mater_").each(function(e,t){if(""!=$(this).text()){var i=parseFloat(trim_number($(this).text()));""!=i&&0!=i&&(n+=i)}});var r=0;$(".previ").hide(),$(".exceed").each(function(e,t){if(""!=$(this).text()){var i=parseFloat(trim_number($(this).text()));""!=i&&0!=i&&(r+=i)}}),0!=r&&($(".previ").find(".itogsumall1").empty().append("+"+$.number(r,2,"."," ")),$(".previ").show()),$(".itogsummat").empty().append($.number(n.toFixed(2),2,"."," ")),$(".itogsumwork").empty().append($.number(a.toFixed(2),2,"."," "))}function HistoryN1(){var e=$(this).parents(".edit_panel11_mat").find(".history_act_mat");e.is(":visible")?e.slideUp("slow"):e.slideDown("slow")}function HistoryN(){var e=$(this).attr("for");$(this).is(".shows")?($(this).removeClass("shows"),$(".histtory[rel_h="+e+"]").hide()):$(".histtory[rel_h="+e+"]").length?($(this).addClass("shows"),$(".histtory[rel_h="+e+"]").show()):($(".loader_history[fo="+e+"]").show(),$(this).addClass("shows"),AjaxClient("prime","history_works","GET","url="+window.location.href+"&id="+e,"AfterHIST",e,0))}function AfterHIST(e,t){var i;"reg"==e.status&&((i=$(".loader_history[fo="+t+"]")).hide(),WindowLogin());"ok"==e.status&&((i=$(".loader_history[fo="+t+"]")).hide(),i.after(e.echo))}function MmyHandlerApp(){maskk($(this));$(this).parents(".mat_zz").attr("rel_w");var e=$(this).parents(".mat_zz").attr("mat_zz"),t=$("[id_loader="+e+"]"),i=parseFloat($(this).attr("max")),a=$(this).val();if($(this).removeClass("redaas"),0!=a&&""!=a&&$.isNumeric(a)){parseFloat(a)>i&&$(this).addClass("redaas");var n=Math.round(parseFloat(t.attr("rel_w"))+a*(100-parseFloat(t.attr("rel_w")))/i);100<n&&(n=100),t.stop(!0).animate({width:n+"%"},2e3)}else t.stop(!0).animate({width:t.attr("rel_w")+"%"},2e3);serv_mess_m_app($(this))}function MmyHandlerXX(){var e=$(this).parents(".mat").attr("rel_mat"),t=$(".mat[rel_mat="+e+"]").find(".count_finery_mater_").val(),i=$(".mat[rel_mat="+e+"]").find(".count_finery_mater_").attr("old_count");""!=t&&0!=t?i!=t&&($(".mat[rel_mat="+e+"]").find(".count_finery_mater_").attr("old_count",t),UpdateCostFinery(e)):($(".mat[rel_mat="+e+"]").find(".price_finery_mater_").val("").removeClass("redaas"),i!=t&&$(".mat[rel_mat="+e+"]").find(".count_finery_mater_").attr("old_count",t))}function MmyHandler(){maskk($(this)),maskk_max($(this));$(this).parents(".mat").attr("rel_w");var e=$(this).parents(".mat").attr("rel_mat"),t=parseFloat($(this).attr("max")),i=parseFloat($(this).attr("my")),a=1;$(".yes_signedd_jops").length&&(a=0);var n=$(this).val();$(this).removeClass("redaas"),0!=n&&""!=n&&$.isNumeric(n)&&(parseFloat(n)==t||isNaN(t)||$(this).addClass("redaas"),1==a&&parseFloat(n)>i&&$(this).addClass("redaas")),serv_mess_m($(this)),summ_finery1(e)}function myHandler(){maskk($(this));var e=$(this).parents(".work__s").attr("rel_id"),t=$(this).parents(".work__s").attr("id_trr"),i=$("[id_loader="+e+"]"),a=parseFloat($(this).attr("max")),n=parseFloat($(this).val());if($(this).removeClass("redaas"),0!=n&&""!=n&&$.isNumeric(n)){parseFloat(n)>a&&$(this).addClass("redaas");var r=Math.round(parseFloat(i.attr("rel_w"))+n*(100-parseFloat(i.attr("rel_w")))/a);100<r&&(r=100),i.stop(!0).animate({width:r+"%"},2e3)}else i.stop(!0).animate({width:i.attr("rel_w")+"%"},2e3);serv_mess(t),summ_finery(t)}function myHandler1(){maskk($(this));$(this).parents(".work__s").attr("rel_id");var e=$(this).parents(".work__s").attr("id_trr"),t=parseFloat($(this).attr("max")),i=$(this).val();$(this).removeClass("redaas"),0!=i&&""!=i&&$.isNumeric(i)&&parseFloat(i)>t&&$(this).addClass("redaas"),serv_mess(e),summ_finery(e)}function initializeTimer(){var e=(1e3*(new Date/1e3+1800)-new Date)/1e3;if(0<e){var t=e/60,i=t/60;t=60*(i-Math.floor(i)),i=Math.floor(i),e=Math.floor(60*(t-Math.floor(t))),t=Math.floor(t),setTimePage(i,t,e),timerId=setInterval(function(){0==e?0==t?0==i?showMessage(timerId):(i--,e=t=59):(t--,e=59):e--,setTimePage(i,t,e)},1e3)}}function setTimePage(e,t,i){t<10&&(t="0"+t),i<10&&(i="0"+i),$(".clock_table").empty().append(t+":"+i),t<5&&$(".clock_table").show()}function showMessage(e){clearInterval(e),$.arcticmodal("close")}function WindowLogin(){$(document).unbind("mousemove.time keydown.time scroll.time"),clearInterval(timerId),$.arcticmodal("close"),$.arcticmodal({type:"ajax",url:"forms/login_new.php?url="+window.location.href,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),idleState=!0}function autoReloadHak(){var e=self.location;location.href=e}function TimeHak(){var e=$.cookie("tsl");null!=e&&1==e&&autoReloadHak()}function TimeSystem(){isNaN(localStorage.getItem("tss"))||idTimeStampe!=localStorage.getItem("tss")&&(idTimeStampe=localStorage.getItem("tss"),clearTimeout(idleTimer),idleState=!1,idleTimer=setTimeout(timesss,idleWait))}function NotificationSystem(){$(".users_rule").is("[not]")&&AjaxClient("notification","even","GET","tk="+$(".users_rule").attr("not"),"AfterNofi",nprogress=1,0)}function NotifSystem(){"undefined"==typeof NotifVar&&($(document).bind("mousemove.notif keydown.notif scroll.notif",function(){clearTimeout(idleTimerx),1==idleStatex&&(idleWait_yes=idleWait_start,clearInterval(timerSx),timerSx=setInterval(NotificationSystem,idleWait_yes),NotificationSystem()),idleStatex=!1,idleWait_yes=idleWait_start,idleTimerx=setTimeout(timesssx,idleWait_stop)}),timerSx=setInterval(NotificationSystem,idleWait_yes),$("body").trigger("mousemove"))}function timesssx(){idleWait_yes=idleWait_end,idleStatex=!0,clearInterval(timerSx),timerSx=setInterval(NotificationSystem,idleWait_yes)}function updateloginhak(){timerH=setInterval(TimeHak,15e3)}function ExitSystem(){"undefined"==typeof LoginVar&&(timerS=setInterval(TimeSystem,1e3),$(document).bind("mousemove.time keydown.time scroll.time",function(){clearTimeout(idleTimer),localStorage.setItem("tss",$.now()),idleState,idleState=!1,idleTimer=setTimeout(timesss,idleWait)}),$("body").trigger("mousemove"))}function timesss(){clearInterval(timerS),setTimeout(function(){autoReloadHak()},6e4),$(document).unbind("mousemove.time keydown.time scroll.time"),$.cookie("tsl",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$.arcticmodal({type:"ajax",url:"forms/login_new.php?url="+window.location.href,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),idleState=!0}function BasketMaterial(){var e=$(".content_block").attr("dom");if($(".add_v_zay").length)var t=$.cookie(window.b_co+"_"+e);else t=$.cookie(window.b_cm+"_"+e);if($(".add_v_zay").length)if(null==t)$(".js-count-mat-update-app").slideUp("slow"),$(".js-update-mat-app").hide();else{$(".js-update-mat-app").show();var i=t.split(".").length;$(".js-count-mat-update-app").empty().append(i),$(".js-count-mat-update-app").slideDown("slow"),$("#nprogress").show(),$("#nprogress .bar").animate({width:"100%"},200,function(){$("#nprogress").hide(),$("#nprogress .bar").width("0")})}else if(null==t)$(".material_end").remove(),$(".material_inv").remove();else{$("div").is(".material_end")||$(".add_mmm").after('<div class="material_end" data-tooltip="Оформить заявку на материалы"><a href="app/add/'+e+'/">d<i></i></a></div>'),$("div").is(".material_inv")||$(".add_iii").after('<div class="material_inv" data-tooltip="Оформить накладную"><a href="invoices/add/'+e+'/">H<i></i></a></div>');i=t.split(".").length;$(".material_end i").empty().append(i),$(".material_inv i").empty().append(i),$(".material_end i").animate({scale:"1.5"},200,function(){$(".material_end i").animate({scale:"1"},200)}),$(".material_inv i").animate({scale:"1.5"},200,function(){$(".material_inv i").animate({scale:"1"},200)}),$("#nprogress").show(),$("#nprogress .bar").animate({width:"100%"},200,function(){$("#nprogress").hide(),$("#nprogress .bar").width("0")})}}function BasketFinery(){var e=$(".content_block").attr("dom"),t=$.cookie(window.b_co+"_"+e);if($(".add_v_naryad").length||$(".add_v_zay").length)if(null==t)$(".js-count-mat-update-app").slideUp("slow"),$(".js-add_nar").hide();else{$(".js-add_nar").show();var i=t.split(".").length;$(".js-count-mat-update-app").empty().append(i),$(".js-count-mat-update-app").slideDown("slow"),$("#nprogress").show(),$("#nprogress .bar").animate({width:"100%"},200,function(){$("#nprogress").hide(),$("#nprogress .bar").width("0")})}else if(null==t)$(".naryd_end").remove();else{$("div").is(".naryd_end")||$(".add_nnn").after('<div class="naryd_end" data-tooltip="Оформить наряд"><a href="finery/add/'+e+'/">4<i></i></a></div>');i=t.split(".").length;$(".naryd_end i").empty().append(i),$(".naryd_end i").animate({scale:"1.5"},200,function(){$(".naryd_end i").animate({scale:"1"},200)}),$("#nprogress").show(),$("#nprogress .bar").animate({width:"100%"},200,function(){$("#nprogress").hide(),$("#nprogress .bar").width("0")})}var a=$(".block_i");$(".block_i").find(".count_basket_razdel").empty(),a.each(function(e,t){var i=$(this).find(".checher").length;0!=i&&$(this).find(".count_basket_razdel").empty().append(i)})}function compareNumbers(e,t){return e-t}function CookieList(e,t,i,a){var n=$.cookie(e);if(null==n)$.cookie(e,t,{expires:60,path:"/",domain:window.is_session,secure:!1,samesite:"lax"});else if("del"==i){for(var r=n.split("."),s="",o=0,l=0;l<r.length;l++)r[l]!=t&&""!=r[l]&&(s=0==o?r[l]:s+"."+r[l],o++);""==s?$.cookie(e,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}):$.cookie(e,s,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"})}else if(void 0===a)$.cookie(e,n+"."+t,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"});else if("sort"==a){var c=(n+"."+t).split(".");c=c.sort(compareNumbers),$.cookie(e,c.join("."),{path:"/",domain:window.is_session,secure:!1,samesite:"lax"})}}function ToolTip(){$("[data-tooltip]").mousemove(function(e){$("div").is("#tooltip")||$("body").append('<div id="tooltip"></div>'),$data_tooltip=$(this).attr("data-tooltip"),$("#tooltip").text($data_tooltip);$(this).offset();e.pageX>=$(window).width()/2?$("#tooltip").css({top:e.pageY+5,left:e.pageX-$("#tooltip").outerWidth()-5}).show():$("#tooltip").css({top:e.pageY+5,left:e.pageX+5}).show()}).mouseout(function(){$("#tooltip").remove()})}var close_all_razdel=function(){var e=$(".content_block").attr("id_content");$(".block_i .i__").parent().parent().removeClass("active"),$.cookie("l_"+e,null,{path:"/"}),$(".block_i .i__").empty().append("+")},minlen=3,paddingtop=30,scrollspeed=200,keyint=2e3,term="",n=0,search_step=0,time_keyup=0,time_search=0,dosearch=function(){window.search_step=0,term=$(".search_seb").find("input").val(),$("var.highlight").each(function(){$(this).after($(this).html()).remove()});var e;""!=term&&$(".s_j").each(function(){$(this).html($(this).html().replace(new RegExp(term,"ig"),'<var class="highlight">$&</var>'))}),e=$("var.highlight").length,window.n_search_prime=e,$(".result_s").show(),$(".result_s").find(".se_prev").hide(),0==e?($(".result_s").find("div").empty().append("Найдено: 0"),$(".result_s").find(".se_next").hide()):($(".result_s").find("div").empty().append('Найдено: <span class="s_ss">'+e+"</span>"),$(".result_s").find(".se_next").show()),1<e&&(window.irr=1,$("var.highlight").each(function(e){$(this).attr("nss",window.irr),window.irr++}))},search_p=function(){dosearch()},error_anim=function(){setTimeout(function(){alert($(this).attr("id")),$(this).removeClass("error_formi")},2e3)},search_prev=function(){if(window.search_step--,0<=window.search_step){if($("[nss="+window.search_step+"]").parents(".block_i").length)if(!$("[nss="+window.search_step+"]").parents(".block_i").is(".active"))$("[nss="+window.search_step+"]").parents(".block_i").find(".i__").parent().parent().addClass("active"),CookieList("l_"+$(".content_block").attr("id_content"),$("[nss="+window.search_step+"]").parents(".block_i").find(".i__").parent().parent().attr("rel"),"add"),$("[nss="+window.search_step+"]").parents(".block_i").find(".i__").empty().append("-");jQuery.scrollTo("[nss="+window.search_step+"]",1e3,{offset:-200})}window.search_step<window.n_search_prime&&$(".result_s").find(".se_next").show(),1==window.search_step&&($(".result_s").find(".se_prev").hide(),$(".result_s").find(".se_next").show())},search_next=function(){if(window.search_step++,window.search_step<=window.n_search_prime){if($("[nss="+window.search_step+"]").parents(".block_i").length)if(!$("[nss="+window.search_step+"]").parents(".block_i").is(".active"))$("[nss="+window.search_step+"]").parents(".block_i").find(".i__").parent().parent().addClass("active"),CookieList("l_"+$(".content_block").attr("id_content"),$("[nss="+window.search_step+"]").parents(".block_i").find(".i__").parent().parent().attr("rel"),"add"),$("[nss="+window.search_step+"]").parents(".block_i").find(".i__").empty().append("-");jQuery.scrollTo("[nss="+window.search_step+"]",1e3,{offset:-200})}window.search_step==window.n_search_prime&&$(".result_s").find(".se_next").hide(),0!=window.search_step?$(".result_s").find(".se_prev").show():$(".result_s").find(".se_prev").hide()},search_prime=function(){$(".icon1").hide(),$(".search_seb").show(),$(".search_seb").width("400px"),$(".search_seb").find("input").focus(),window.show_search=1,""!=$(".search_seb").find("input").val()&&dosearch()},send_meee=function(){$("#otziv_area").val();if($(".otziv_mess").removeClass("error_formi"),""==$("#otziv_area").val())$(".otziv_mess").addClass("error_formi");else{var e=$(".content_block").attr("id_content");AjaxClient("message","send_message_global","GET","url="+window.location.href+"&id="+e+"&text="+$("#otziv_area").val(),"AfterSendMM",e,0),$("#otziv_area").val("")}},beznal_upload=function(){$(this).attr("id_bez");$.isNumeric($(this).attr("id_bez"))&&$.arcticmodal({type:"ajax",url:"forms/form_bez_dialog.php?id="+$(this).attr("id_bez"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})},SendMessage=function(){var e=$(this).attr("sm");$("[iu]").attr("iu")!=e&&$.arcticmodal({type:"ajax",url:"forms/form_message.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})},UploadScan=function(){var e=$(this).attr("id_upload");$("[name=myfile"+e+"]").trigger("click")};function log(e){$("#log").empty().append(e)}function upload(e,i){var t=new XMLHttpRequest;t.onload=t.onerror=function(){200==this.status?($("[id_upload="+i+"]").remove(),$(".scap_load_"+i).remove(),updatecash(i)):($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide())},t.upload.onprogress=function(e){$("[id_upload="+i+"]").hide(),$(".scap_load_"+i).show();var t=Math.round(100*e.loaded/e.total);$(".scap_load_"+i).find(".scap_load__").width(t)},t.open("POST","implementer/upload.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",i),t.send(a)}var UploadScanChange=function(){var e=$(this).parents("form").attr("id_sc");return file=this.files[0],file&&upload(file,e),!1},option_imlementer=function(){var e=$(".content_block").attr("id_content");$.arcticmodal({type:"ajax",url:"forms/form_option_implementer.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})},add_imlementer=function(){$.arcticmodal({type:"ajax",url:"forms/form_add_implementer.php?id=1",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})},option_imlementer1=function(){var e=$(this).attr("for");$.arcticmodal({type:"ajax",url:"forms/form_option_implementer.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})},pay_imlementer_avans=function(){var e=$(this).attr("id_avans");$.arcticmodal({type:"ajax",url:"forms/form_pay_implementer_avans.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})},pay_imlementer=function(){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_pay_implementer.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})},hist_mu_prime=function(){var e=$(this).parents("[rel_id]").attr("rel_id");$.arcticmodal({type:"ajax",url:"forms/form_history_realiz_work.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})},house_options=function(){return $(".content_block").is("[dom]")&&$.isNumeric($(".content_block").attr("dom"))&&$.arcticmodal({type:"ajax",url:"forms/form_object_options.php?id="+$(".content_block").attr("dom"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1},summ_view=function(){$(".summ_blogi").is(":visible")?($(".summ_blogi").hide(),$(".top_bl").find("h2").removeClass("margin_sum "),$(this).removeAttr("on"),CookieList("it_","on","del")):($(".summ_blogi").show(),$(".top_bl").find("h2").addClass("margin_sum "),$(this).attr("on","show"),CookieList("it_","on","add"))},take_invoice=function(){$("#lalala_pod_form").submit()},sign_naryad=function(){$("#lalala_pod_form").submit()},seal_naryad=function(){$("#lalala_seal_form").submit()},disband_naryad=function(){$("#lalala_disband_form").submit()},shoot_naryad=function(){$("#lalala_shoot_form").submit()},decision_mess_app=function(){var e=-1;$(this).parents(".edit_123").is(".ready")||($(".pod_zay").hide(),$(".add_zay").show(),$(this).parents(".edit_123").find("i").removeClass("active"),$(this).is(".yes")&&(e=1),$(this).is(".no")&&(e=0),$(this).addClass("active"),$(this).parents(".messa").find(".decision_mes").val(e))},decision_mess=function(){var e=-1;$(this).parents(".edit_122").is(".ready")||($(".js-pod_nar").hide(),$(".js-add_nar").show(),$(this).parents(".edit_122").find("i").removeClass("active"),$(this).is(".yes")&&(e=1),$(this).is(".no")&&(e=0),$(this).addClass("active"),$(this).parents(".messa").find(".decision_mes").val(e))},save_zayava=function(){var n=0;$(".messa:visible").find(".text_zayva_message_").removeClass("error_formi"),$(".messa:visible").find(".text_zayva_message_").each(function(e,t){""==$(this).val()&&(n=1,$(this).addClass("error_formi"))}),$(".mat_zz").find(".count_app_mater_").removeClass("error_formi"),$(".mat_zz").find(".calendar_zay").removeClass("error_formi"),$(".messa:visible").each(function(e,t){var i=$(this).attr("id_mes"),a=$(".mat_zz[mat_zz="+i+"]").find(".count_app_mater_").val();$(".mat_zz[mat_zz="+i+"]").find(".count_app_mater_").removeClass("error_formi"),0!=a&&""!=a&&$.isNumeric(a)||($(".mat_zz[mat_zz="+i+"]").find(".count_app_mater_").addClass("error_formi"),n=1)}),$(".js-add-app-material .gloab").each(function(e,t){""==$(this).val()?($(this).parents(".input_2018").addClass("required_in_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),n++):($(this).parents(".input_2018").removeClass("required_in_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"))}),0!=n?alert_message("error","Не все поля заполнены для сохранения"):$("#lalala_add_form").submit()},edit_m_button_click=function(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_edit_material_2021.php?id="+$(this).attr("for"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1},del_m_button_click=function(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_material.php?id="+$(this).attr("for"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1},add_m_button_click=function(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_add_material_2021.php?id="+$(this).attr("for"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1},DellNotif=function(){$(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&(AjaxClient("notification","del_notif","GET","url="+window.location.href+"&id="+$(this).attr("id_rel"),"AfterDellNot",$(this).attr("id_rel"),0),$("[rel_noti="+$(this).is("[id_rel]")+"]").hide());return!1},DellPay=function(){return $(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_pay.php?id="+$(this).attr("id_rel"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1},DellCash=function(){return $(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&$.arcticmodal({type:"ajax",url:"forms/form_disband_cash.php?id="+$(this).attr("id_rel"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1},del_button_click=function(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_work.php?id="+$(this).attr("for"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1},edit_button_click=function(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_edit_work_2021.php?id="+$(this).attr("for"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1},block_i_i=function(){var e=$(".content_block").attr("id_content");$(this).parent().parent().is(".active")?($(this).parent().parent().removeClass("active"),CookieList("l_"+e,$(this).parent().parent().attr("rel"),"del"),$(this).empty().append("+")):($(this).parent().parent().addClass("active"),CookieList("l_"+e,$(this).parent().parent().attr("rel"),"add"),$(this).empty().append("-"))},MaterialSelectAll=function(){$("[rel_id]").each(function(e,t){var i=$(this).nextUntil(".loader_tr").length,a=0;$(this).nextUntil(".loader_tr").each(function(e,t){$(this).is(".chechers")&&a++}),a==i?$(this).find(".addd_icon_mateo").addClass("activ_matt"):$(this).find(".addd_icon_mateo").removeClass("activ_matt")})},basket_all_material=function(e){var t=e.parents(".material").prevAll("[rel_id]:first").nextUntil(".loader_tr").length,i=0;e.parents(".material").prevAll("[rel_id]:first").nextUntil(".loader_tr").each(function(e,t){$(this).is(".chechers")&&i++}),i==t?e.parents(".material").prevAll("[rel_id]:first").find(".addd_icon_mateo").addClass("activ_matt"):e.parents(".material").prevAll("[rel_id]:first").find(".addd_icon_mateo").removeClass("activ_matt")},add_material_click=function(){$(this).is(".activ_matt")?($(this).removeClass("activ_matt"),$(this).parents("[rel_id]").nextUntil(".loader_tr").each(function(e,t){$(this).find(".nm_nm").trigger("click")})):($(this).addClass("activ_matt"),$(this).parents("[rel_id]").nextUntil(".loader_tr").each(function(e,t){$(this).is(".chechers")||$(this).find(".nm_nm").trigger("click")}),$(this).addClass("activ_matt"))},nm_div=function(){var e=$(".content_block").attr("dom");$(".add_v_zay").length?$(this).parents("[rel_ma]").is(".chechers")?($(this).parent().parent().removeClass("chechers"),CookieList(window.b_co+"_"+e,$(this).parents("[rel_ma]").attr("rel_ma"),"del","sort")):($(this).parent().parent().addClass("chechers"),CookieList(window.b_co+"_"+e,$(this).parents("[rel_ma]").attr("rel_ma"),"add","sort")):$(this).parents("[rel_ma]").is(".chechers")?($(this).parent().parent().removeClass("chechers"),CookieList(window.b_cm+"_"+e,$(this).parents("[rel_ma]").attr("rel_ma"),"del","sort")):($(this).parent().parent().addClass("chechers"),CookieList(window.b_cm+"_"+e,$(this).parents("[rel_ma]").attr("rel_ma"),"add","sort")),BasketMaterial(),basket_all_material($(this)),ToolTip()},close_prime_dom=function(){$(".content_block").attr("dom");$.cookie("pr_",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$(".close_prime_dom_a")[0].click()},st_div=function(){var e=$(".content_block").attr("dom");$(this).parents("[rel_id]").is(".checher")?($(this).parent().parent().removeClass("checher"),CookieList(window.b_co+"_"+e,$(this).parents("[rel_id]").attr("rel_id"),"del")):($(this).parent().parent().addClass("checher"),CookieList(window.b_co+"_"+e,$(this).parents("[rel_id]").attr("rel_id"),"add")),BasketFinery(),ToolTip()},del_sebe=function(){return $(".content_block").is("[dom]")&&$.isNumeric($(".content_block").attr("dom"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_sebe.php?id="+$(".content_block").attr("dom"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1},update_block=function(){$(".block_i .i__").unbind("click"),$(".block_i .i__").bind("click",block_i_i),$(".edit_icon_block").unbind("click"),$(".edit_icon_block").bind("click",edit_button_block),$(".del_icon_block").unbind("click"),$(".del_icon_block").bind("click",del_button_block),$(".add_icon_block").unbind("click"),$(".add_icon_block").bind("click",add_button_rabota),$(".st_div").unbind("click"),$(".st_div").bind("click",st_div),$(".nm_nm").unbind("click"),$(".nm_nm").bind("click",nm_div),$(".edit_icon").unbind("click"),$(".edit_icon").bind("click",edit_button_click),$(".UGRAFE").unbind("click"),$(".UGRAFE").bind("click",edit_grafik_click),$(".del_icon").unbind("click"),$(".del_icon").bind("click",del_button_click),$(".addd_icon").unbind("click"),$(".addd_icon").bind("click",add_m_button_click),$(".addd_icon_mateo").unbind("click"),$(".addd_icon_mateo").bind("click",add_material_click),$(".edit_icon_m").unbind("click"),$(".edit_icon_m").bind("click",edit_m_button_click),$(".del_icon_m").unbind("click"),$(".del_icon_m").bind("click",del_m_button_click)},savedefault=function(e){if($("#save").length){var t=e.attr("defaultv");e.val()!=t&&$("#save").attr("save","1"),1==$("#save").attr("save")&&($(".js-add_nar").show(),$(".js-pod_nar").hide())}};window.SliceMM=function(){var e=$(".burger_ok"),t=$(".mobile-nav");e.is(".active")?(e.removeClass("active"),t.removeClass("act"),$("body").removeClass("menu-open")):(e.addClass("active"),t.addClass("act"),$("body").addClass("menu-open"))};var savedefault_zay=function(e){if($("#save").length){var t=e.attr("defaultv");e.val()!=t&&$("#save").attr("save","1"),1==$("#save").attr("save")&&($(".add_zay").show(),$(".pod_zay").hide())}};function AfterUpdateCostFinery(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").val(e.cost);$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").parents(".mat").attr("rel_w"),$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").parents(".mat").attr("rel_mat");var i=parseFloat($(".mat[rel_mat="+t+"]").find(".price_finery_mater_").attr("max")),a=parseFloat($(".mat[rel_mat="+t+"]").find(".price_finery_mater_").attr("my")),n=$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").val();$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").removeClass("redaas"),0!=n&&""!=n&&$.isNumeric(n)&&(parseFloat(n)>i&&!isNaN(i)||parseFloat(n)>a)&&$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").addClass("redaas"),serv_mess_m($(".mat[rel_mat="+t+"]").find(".price_finery_mater_")),summ_finery1(t)}if("error"==e.status){$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").val("");$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").parents(".mat").attr("rel_w"),$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").parents(".mat").attr("rel_mat"),i=parseFloat($(".mat[rel_mat="+t+"]").find(".price_finery_mater_").attr("max")),a=parseFloat($(".mat[rel_mat="+t+"]").find(".price_finery_mater_").attr("my")),n=$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").val();$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").removeClass("redaas"),0!=n&&""!=n&&$.isNumeric(n)&&(parseFloat(n)!=i&&!isNaN(i)||parseFloat(n)>a)&&$(".mat[rel_mat="+t+"]").find(".price_finery_mater_").addClass("redaas"),serv_mess_m($(".mat[rel_mat="+t+"]").find(".price_finery_mater_")),summ_finery1(t)}}function AfterSendMM(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&(0==$(".sego_mess").length&&$(".padding_mess").append('<div class="dialog_clear"></div><div class="message_date"><div><span class="sego_mess">сегодня</span></div></div>'),$(".padding_mess").append('<div class="dialog_clear"></div>'+e.echo),scroll_to_bottom(2e3),$("#otziv_area").val(""))}function AfterUpdateAkt(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&(0==t?$("[invoices_messa="+e.id+"]").find(".img_akt ul").empty().append(e.echo):$("[invoices_messa="+e.id+"]").find(".img_akt1 ul").empty().append(e.echo))}function Afterupdate_status(e,t){if("ok"==e.status)for(var i=t.split("."),a=0;a<i.length;a++)$("[supply_id="+i[a]+"]").find(".statusis").empty().append(e.basket[a]),$("[supply_id="+i[a]+"]").find(".mkr_").empty()}function Aftervall_supply(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($("[rel_status="+t+"]").after(e.status_echo).remove(),UpdateStatusADA($("[rel_status="+t+"]").parents("[supply_stock]").attr("supply_stock").split("_")[0]));e.status}function AfterChangeCity(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".menu2_prime").remove(),$(".menu3_prime").remove(),$(".menu1_prime").after(e.echo),$(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli),$("#kvartal").unbind("change"),$("#kvartal").bind("change",changekvartal)),"error"==e.status&&($(".menu2_prime").show(),$(".menu3_prime").show())}function AfterNofi(e,t){if(nprogress=0,"update"==e.status){var i=0,a="";0!=$(".message_block").length&&(i=$(".message_block").attr("id_content"),a=$("[dmes_e]:last").attr("dmes_e")),AjaxClient("notification","notification","GET",e="tk="+e.token+"&id_dialog="+i+"&date="+a,"AfterNotification","1",0)}}function AfterDellMaterialInvoice(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($("[invoice_material="+t+"]").remove(),$("[invoices_messa="+t+"]").next().remove(),$("[invoices_messa="+t+"]").remove(),itog_invoice())}function AfterDellImageInvoice(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".img_invoice").find("[sop="+t+"]").remove(),0==$(".img_invoice").find("li").length&&$(".img_invoice").hide())}function AfterDellImageSupply(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".img_ssoply").find("[sop="+t+"]").remove(),0==$(".img_ssoply").find("li").length&&$(".img_ssoply").hide())}function AfterUpdateImageInvoice(e,t){nprogress=0,"reg"==e.status?WindowLogin():"ok"==e.status&&($(".img_invoice").find("ul").empty().append(e.echo),$(".img_invoice").show(),ToolTip())}function AfterUpdateImageSupply(e,t){nprogress=0,"reg"==e.status?WindowLogin():"ok"==e.status&&($(".img_ssoply").find("ul").empty().append(e.echo),$(".img_ssoply").show(),ToolTip())}function AfterDellNot(e,t){if(nprogress=0,"reg"==e.status)WindowLogin();else if("ok"==e.status){if($("[rel_noti="+t+"]").remove(),$(".noti_block").is(":visible")){var i=parseInt(trim_number($(".noti_block").find(".noti_coc").text()));""!=i&&0!=i&&(0==--i&&($(".noti_block").remove(),$(".view__not").hide(),$(".not_li").find("i").hide()),$(".noti_block").find(".noti_coc").empty().append(i),$(".not_li").find("i").empty().append(i))}}else $("[rel_noti="+t+"]").show()}function AfterTabsInfoApp(e,t){null!=t&&("string"==typeof t?t=t.split(","):t[0]=t),"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".preorders_block_global[id_pre="+t[1]+"]").find(".px_bg_trips").empty().append(e.query),NumberBlockFile(),ToolTip(),3!=t[0]&&4!=t[0]||($(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli)))}function AfterVVN(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".noti_block").find(".scro").empty().append(e.echo),$(".noti_block").find(".noti_coc").empty().append(e.not),$(".noti_block").find(".noti_co").show(),$(".noti_block").on("click",".del_notif",DellNotif))}function AfterNotification(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){if($(".users_rule").attr("not",e.tk),0==e.not)$(".not_li").find("i").empty(),$(".not_li").find("i").hide(),$(".view__not").hide();else if($(".not_li").find("i").empty().append(e.not),$(".not_li").find("i").show(),$(".view__not").show(),$("#chatAudio")[0].play(),$(".view__not").length)if($(".noti_block").is(":visible"))$(".noti_block").find(".scro").empty().append('<div class="loader_inter"><div></div><div></div><div></div><div></div></div>'),AjaxClient("notification","view_notification","GET",e="","AfterVVN",1,0);else $(".menu1").append('<div class="noti_block"><div class="title_noti"><ul class="t_ul"><li>Новое уведомление</li><li><i class="noti_co" style="display:none;"><span class="noti_coc"></span></i></li></ul></div><div class="scro">'+e.echo+"</div></div>"),setTimeout(function(){$(".noti_block").remove()},5e3);0==e.echo_m?($(".mess_li").find("i").empty(),$(".mess_li").hide()):($(".mess_li").find("i").empty().append(e.echo_m),$(".mess_li").find("i").show(),$("#chatAudio")[0].play(),0!=$(".message_block").length&&(0==$(".sego_mess").length&&$(".padding_mess").append('<div class="dialog_clear"></div><div class="message_date"><div><span class="sego_mess">сегодня</span></div></div>'),$(".padding_mess").append('<div class="dialog_clear"></div>'+e.echo_dialog),scroll_to_bottom(2e3)))}}function AfterMESS(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){$(".content_block").attr("n",e.n_st),$(".history_message").attr("s_m",e.poo);var i=document.body,a=i.scrollHeight;$(".padding_mess").prepend(e.echo),window.scrollTo(0,i.scrollHeight-a+i.scrollTop),1==e.eshe?($(".padding_mess").prepend($(".history_message")),$(".history_message").show()):$(".history_message").remove()}"error"==e.status&&$(".history_message").remove()}function AfterUCASH(e,t){$("[cl_pay="+t+"]").empty().append(e.echo),$("[or_pay="+t+"]").empty().append('<div class="font-rank rasp_pay" data-tooltip="Распровести" id_rel="'+t+'"><span class="font-rank-inner">x</span></div>'),$(".pay_summ2").remove(),$(".pay_summ3").remove(),$(".pay_summ4").remove(),$(".j_cash").after(e.echo2),ToolTip()}function AfterWalletSTx(e,t){$(".billl[rel_id="+t+"]").find(".loader_inter").remove(),"reg"==e.status&&($(".b-loading").hide(),WindowLogin()),"ok"==e.status&&($(".billl[rel_id="+t+"]").find(".status_wallet_ada").empty().append(e.echo),$(".billl[rel_id="+t+"]").find(".button_ada_wall").empty().append(e.button))}function AfterChangeKvartal(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".menu3_prime").remove(),$(".menu2_prime").after(e.echo),$(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli)),"error"==e.status&&$(".menu3_prime").show()}$(function(){$(window).on("resize",windowSize),$(".loader_ada").remove(),$(".loader_ada1").remove(),BasketFinery(),BasketMaterial(),MaterialSelectAll(),jQuery(".scrollbar-inner").scrollbar(),ToolTip(),sl_message_width(),$(".label_s").bind("change keyup input click",label_show),$("body").on("change keyup input click",".js-password-butt",password_butt),$("body").on("change keyup input click",".js-checkbox-group",CheckboxGroup),$("body").on("change keyup input click",".js-type-soft-view1",MemoButType),$("body").on("change keyup input click",".tabs_005U",{key:"005U"},tabs_app),$("body").on("change keyup input click",".js-sign-a",SingFo),$("body").on("change keyup input click",".js-reject-app",RejectFo),$("body").on("change keyup input click",".js-forward-app",ForwardFo),$("body").on("click",".burger_ok",SliceMM),$(".menu_x").clone().appendTo(".mobile-nav span"),$("body").on("keyup",".loll_soply",search_posta),$("body").on("click",".loll_soply",search_posta1),$("body").on("change keyup input click",".loll_drop li",search_posta_li),$("body").on("change keyup input click",".label_exitt",search_posta_li2),$("body").on("change keyup input click",".loll_plus",plus_postt),$(".suppp_tr").on("change keyup input click",".yoop_click",yoop_click),$(".save_button2").bind("change keyup input click",send_meee),$(".content").on("click",".send_mess",SendMessage),$(".help_user").on("click",".send_mess",SendMessage),$("body").on("change keyup input click",".menu_click",menuclick),$(".js-close_prime_dom\t").on("click",close_prime_dom),$(".pay_imp").on("click",".beznal_upload",beznal_upload),$(".div_dialog").on("click",".dialog_a",function(e){if(0==$(e.target).closest(".del_dialog").length){var t=$(this).attr("rel_diagol");$(this).attr("href","/message/dialog/"+t+"/"),$(this).trigger("Click")}});$(".count_mask").bind("change keyup input click",validate11),$(".block_invoice_20188").on("change keyup input click",".del_invoice",dell_invoice),$(".messa_form_a").on("change",".invoice_file_photo",function(){var e=$(this).parents("form").attr("id_a");return file=this.files[0],file&&function(e,t){var i=new XMLHttpRequest;i.onload=i.onerror=function(){200==this.status?($("[id_upload_a1="+t+"]").next().find(".b_loading_circle_wrapper_small").hide(),$("[id_upload_a1="+t+"]").show(),UpdateImageInvoiceAkt(t,1)):($("[id_upload_a1="+t+"]").next().find(".b_loading_circle_wrapper_small").hide(),$("[id_upload_a1="+t+"]").show())},i.upload.onprogress=function(e){$("[id_upload_a1="+t+"]").hide(),$("[id_upload_a1="+t+"]").next().find(".b_loading_circle_wrapper_small").show()},i.open("POST","invoices/upload_photo.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",t),i.send(a)}(file,e),!1}),$(".messa_form_a").on("change",".invoice_file_akt",function(){var e=$(this).parents("form").attr("id_a");return file=this.files[0],file&&function(e,t){var i=new XMLHttpRequest;i.onload=i.onerror=function(){200==this.status?($("[id_upload_a="+t+"]").next().find(".b_loading_circle_wrapper_small").hide(),$("[id_upload_a="+t+"]").show(),UpdateImageInvoiceAkt(t,0)):($("[id_upload_a="+t+"]").next().find(".b_loading_circle_wrapper_small").hide(),$("[id_upload_a="+t+"]").show())},i.upload.onprogress=function(e){$("[id_upload_a="+t+"]").hide(),$("[id_upload_a="+t+"]").next().find(".b_loading_circle_wrapper_small").show()},i.open("POST","invoices/upload_akt.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",t),i.send(a)}(file,e),!1}),$(".invoice_block").on("click",".add_akt_defect",function(){var e=$(this).attr("id_upload_a");$("[name=myfileakt"+e+"]").trigger("click")}),$(".invoice_block").on("click",".add_akt_defect1",function(){var e=$(this).attr("id_upload_a1");$("[name=myfilephoto"+e+"]").trigger("click")}),$(".invoice_block").on("change keyup input click",".count_defect_in_,.text_zayva_message_,.del_invoice_akt",function(){$(this).parents("[invoices_messa]").find(".print_invoice_akt").hide()}),$("body").on("click",".ais",Eye),$("body").on("change keyup input click",".js-save-setting",save_setting),$(".invoice_block").on("change keyup input click",".count_defect_in_,.count_in_",BrakError),$(".invoice_block").on("change keyup input click",".count_in_",ErrorMax),$(".invoice_block").on("change","#ispol_invoice",UpdateContractorInvoice),$(".img_invoice_div").on("click",".del_image_invoice",DellImageInvoice),$(".img_invoice_div").on("click",".invoice_upload",function(){var e=$(this).attr("id_upload");$("[name=myfile"+e+"]").trigger("click")}),$(".img_invoice_div").on("change",".sc_sc_loo12",function(){var e=$(this).parents("form").attr("id_sc");return file=this.files[0],file&&function(e,i){var t=new XMLHttpRequest;t.onload=t.onerror=function(){200==this.status?($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide(),UpdateImageInvoice(i)):($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide())},t.upload.onprogress=function(e){$("[id_upload="+i+"]").hide(),$(".scap_load_"+i).show();var t=Math.round(100*e.loaded/e.total);$(".scap_load_"+i).find(".scap_load__").width(t)},t.open("POST","invoices/upload.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",i),t.send(a)}(file,e),!1}),$(".l_photo").on("change keyup input click",".invoice_upload",UploadInvoice_old),$(".content").on("change",".sc_sc_loos2",UploadReportsChange_old),$("body").on("click",".soply_upload",function(){var e=$(this).attr("id_upload");$("[name=myfile"+e+"]").trigger("click")}),$("body").on("change",".sc_sc_loo11",function(){var e=$(this).parents("form").attr("id_sc");return file=this.files[0],file&&function(e,i){var t=new XMLHttpRequest;t.onload=t.onerror=function(){200==this.status?($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide(),UpdateImageSupply(i)):($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide())},t.upload.onprogress=function(e){$("[id_upload="+i+"]").hide(),$(".scap_load_"+i).show();var t=Math.round(100*e.loaded/e.total);$(".scap_load_"+i).find(".scap_load__").width(t)},t.open("POST","supply/upload.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",i),t.send(a)}(file,e),!1}),$(".bill_table").on("change keyup input click",".xvg_bill_score",xvg_bill),$(".bill_table").on("change keyup input click",".xvg_no",xvg_no),$(".bill_table").on("change keyup input click",".xvg_yes",xvg_yes),$(".stock_table_list").on("change keyup input click",".xvg_no1",xvg_no1),$(".stock_table_list").on("change keyup input click",".xvg_yes1",xvg_yes1),$(".booker_table").on("change keyup input click",".booker_yes",booker_yes),$(".pay_imp").on("click",".naryd_upload",UploadScan),$(".pay_imp").on("change",".sc_sc_loo",UploadScanChange),$(".pay_imp").on("click",".rasp_pay",DellCash),$(".pay_imp").on("click",".del_pay",DellPay),jQuery(document).on("focus click",".input_new_2018",InputFocusNew),jQuery(document).on("blur",".input_new_2018",InputBlurNew),jQuery(document).on("keyup",".input_new_2018",KeyUpInput),jQuery(document).on("focus click",".input_new_2021",InputFocusNew2021),jQuery(document).on("blur",".input_new_2021",InputBlurNew2021),jQuery(document).on("focus click",".input_new_2021",InputFocusNew2021),jQuery(document).on("blur",".input_new_2021",InputBlurNew2021),jQuery(document).on("keyup",".input_new_2021",KeyUpInput2021),$(".suppp_tr").on("click",".supply_tr_o",ChangeSupply),$(".notif_imp").on("click",".del_notif",DellNotif),$(".notif_div_2018").on("click",".del_notif",DellNotif),$(".mat_zz").on("click",".del_material_zayva",DellZayvaMaterial),$(".mat_zz").on("click",".del_material_zayva1",DellZayvaMaterial1),$(".work__s").on("click",".del_naryd_work",DellNarydWork),$(".work__s").on("click",".del_naryd_work1",DellNarydWork1),$(".smeta2").on("click",".del_naryd",DellNaryd),$(".smeta2").on("click",".del_zay_zay",DellZayZay),$(".work__s").on("click",".history_icon",HistoryN),$(".mattx").on("click",".history_icon",HistoryN1),$(".mat_zz").on("change keyup input click",".count_app_mater_",MmyHandlerApp),$(".mat").on("change keyup input click",".count_finery_mater_",MmyHandler),$(".mat").on("change keyup input click",".count_finery_mater_",MmyHandlerXX),$(".work__s").on("change keyup input click",".count_finery_",myHandler),$(".work__s").on("change keyup input click",".price_finery_",myHandler1),$(".work__s").on("dblclick",".count_finery_,.price_finery_",Mydblclick),$(".mat").on("dblclick",".count_finery_mater_",Mydblclick),setTimeout(function(){$(".workx").on("change keyup input click",".count_finery_,.price_finery_,.text_finery_message_",function(){if(null==$(this).attr("readonly")){var e=$(this).parents("[work]").attr("work");$("[work="+e+"]").find(".edit_12").remove(),$("[work="+e+"]").find(".edit_122").find("i").removeClass("active"),$("[work="+e+"]").find(".decision_mes").val("-1")}}),$(".mattx").on("change keyup input click",".count_finery_mater_,.price_finery_mater_,.text_finery_message_",function(){if(null==$(this).attr("readonly")){var e=$(this),t=e.parents("[work]").attr("work"),i=e.parents("[rel_matx]").attr("rel_matx");$("[id_mes="+t+"_"+i+"]").find(".edit_12").remove(),$("[id_mes="+t+"_"+i+"]").find(".edit_122").find("i").removeClass("active"),$("[id_mes="+t+"_"+i+"]").find(".decision_mes").val("-1")}}),$(".my_n").on("change keyup input click.naryd",".count_finery_mater_,.price_finery_mater_,.text_finery_message_,.count_finery_,.price_finery_,.slct_box,#date_table,#date_table1",function(){$(".js-pod_nar").hide(),$(".js-add_nar").show()}),$(".my_nn").on("change keyup input click",".count_app_mater_,.calendar_zay,.text_zayva_message_",function(){if(null==$(this).attr("readonly")||null==$(this).attr("disabled")&&$(this).is(".calendar_zay")){var e=$(this).parents("[mat_zz]").attr("mat_zz");$("[mat_zz="+e+"]").find(".edit_12").remove(),$("[mat_zz="+e+"]").find(".edit_123").find("i").removeClass("active"),$("[mat_zz="+e+"]").find(".decision_mes").val("-1")}}),$(".my_nn").on("change keyup input click",".count_app_mater_,.calendar_zay,.text_zayva_message_,.js-zame-tours",function(){(null==$(this).attr("readonly")||null==$(this).attr("disabled")&&$(this).is(".calendar_zay"))&&($(".pod_zay").hide(),$(".add_zay").show())}),$(".js-acc-view").on("change keyup input click",".count_xvg_,.price_xvg_",function(){(null==$(this).attr("readonly")||null==$(this).attr("disabled")&&$(this).is(".calendar_zay"))&&($(".pod_zay").hide(),$(".add_zay").show())}),$(".zay_2020").on("change keyup input click",".del_material_zayva1,.zayva_del_naf",function(){(null==$(this).attr("readonly")||null==$(this).attr("disabled")&&$(this).is(".calendar_zay"))&&($(".pod_zay").hide(),$(".add_zay").show())})},2e3),$(".mat_zz").on("dblclick",".count_app_mater_",Mydblclick),idleTimer=null,timerS=null,timerH=null,idleState=!1,idleWait=18e5,idTimeStampe=0,ExitSystem(),window.is_session="eico.atsun.ru",idleTimerx=null,timerSx=null,idleStatex=!1,idleWait_start=3e4,idleWait_stop=3e5,idleWait_end=12e4,idleWait_yes=idleWait_start,idTimeStampex=0,NotifSystem(),$('<audio id="chatAudio"><source src="notify.ogg" type="audio/ogg"><source src="notify.mp3" type="audio/mpeg"><source src="notify.wav" type="audio/wav"></audio>').appendTo("body"),nprogress=0,setInterval(function(){$this=inWindow(".Effectbbo"),0!=inWindow(".Effectbbo").length&&setTimeout(function(){$this.removeClass("yes_bbs1")},5e3)},1e3),update_block(),$(".menu1").on("click",".count_numb_score",save_soply),$(".mkr_").on("change",".option_mat",option_mat),$(".button_ada_wall").on("change",".option_mat1",option_mat1),$(".statusis").on("change",".vall_supply",vall_supply),$(".menu_top,.smeta2").on("click",".drops li",function(){var e=$(this).parent().attr("data_src"),t=$(this).find("a").attr("rel"),i=$(this).find("a").attr("rel");$(this).parent().is(".no_active")?$(this).parent().parent().find("input").val(i).change():e!=t&&($(this).parent().find("li").removeClass("sel_active_sss"),$(this).addClass("sel_active_sss"),$(this).parent().attr("data_src",i),$(this).parent().parent().find("input").val(i).change())}),animation_teps(),$(".skladd_nei").bind("click",slide_skkk),$(".pay_baks,.js-pay_baks_top").bind("click",pay_imlementer),$(".pay_avans,.js-pay_avans_top").bind("click",pay_imlementer_avans),$(".imp_option").bind("click",option_imlementer),$(".edit_implem").bind("click",option_imlementer1),$(".add__ispoln").bind("click",add_imlementer),$(".del_dialog").bind("click",del_dialog),$(".edit_122").find("i").bind("click",decision_mess),$(".edit_123").find("i").bind("click",decision_mess_app),$(".js-add-app").bind("click",save_zayava),$(".js-pod_pro").bind("click",sign_naryad),$(".transfer_invoicess").bind("click",take_invoice),$(".sogl_pro").bind("click",sign_naryad),$(".js-ut_nar").bind("click",seal_naryad),$(".js-rasp_nar").bind("click",disband_naryad),$(".shoot").bind("click",shoot_naryad),$("#lalala_add_form").on("change keyup input click",".error_formi",function(){$this=$(this),setTimeout(function(){$this.removeClass("error_formi")},2e3)}),$(".del__seb").bind("click",del_sebe),$(".icon17").bind("click",summ_view),$(".icon3").bind("click",search_prime),window.show_search=0,$("body").click(function(e){0==$(e.target).closest(".search_seb").length&&0==$(e.target).closest(".icon3").length&&1==window.show_search&&($(".icon1-xxx").show(),$(".search_seb").hide(),$(".search_seb").width("60px"),window.show_search=0,$("var.highlight").each(function(){$(this).after($(this).html()).remove()})),0==$(e.target).closest(".noti_block").length&&0==$(e.target).closest(".view__not").length&&$(".noti_block").is(":visible")&&($(".noti_block").remove(),$(".view__not").hide(),$(".not_li").find("i").hide()),0==$(e.target).closest(".history_act_mat").length&&0==$(e.target).closest(".edit_panel11_mat").length&&$(".history_act_mat").is(":visible")&&$(".history_act_mat").hide()}),$(".result_s").find(".se_next").bind("click",search_next),$(".result_s").find(".se_prev").bind("click",search_prev),$(".search_seb").find("i").bind("click",search_p),$("#search_text").keypress(function(e){13==e.keyCode&&dosearch()}),$("#otziv_area").keypress(function(e){13==e.keyCode&&send_meee()}),$("#search_text").keyup(function(){var e=new Date;time_keyup=e.getTime(),$("#search_text").val()!=term&&($("#search_text").val().length>=minlen?setTimeout(function(){var e=new Date;time_search=e.getTime(),keyint<=time_search-time_keyup&&dosearch()},keyint):$(".result_s").hide())}),$(".menu1").on("click",".naryd_end i",function(){$(this).prev("a")[0].click()}),$(".menu1").on("click",".material_end i",function(){$(this).prev("a")[0].click()}),$(".text_finery_message_").bind("change keyup input click",function(){savedefault($(this))}),$(".text_zayva_message_").bind("change keyup input click",function(){savedefault_zay($(this))}),$(".icon2").bind("click",house_options),$(".hist_mu").bind("click",hist_mu_prime),$(".close_all_r").bind("click",close_all_razdel),$(".cal_223").bind("click",function(){$(this).prev(".calendar_t").trigger("focus")}),$("#email_formi").keyup(function(){""!=$("#email_formi").val()||$("#email_formi").addClass("error_formi")}),$("#password_formi,#email_formi").keypress(function(e){13==e.keyCode&&$("#yes1").trigger("click")}),$("#password_formi").keyup(function(){""==$("#password_formi").val()||0==$("#password_formi").val()?$("#password_formi").addClass("error_formi"):$("#password_formi").removeClass("error_formi")}),$("#yes1").on("click",function(){var e=$("#email_formi").val(),t=[0,0];$("#email_formi").removeClass("error_formi"),$("#password_formi").removeClass("error_formi"),""!=e||($("#email_formi").addClass("error_formi"),t[0]=1),""!=$("#password_formi").val()&&0!=$("#password_formi").val()||($("#password_formi").addClass("error_formi"),t[1]=1),0==t[0]&&0==t[1]&&$("#pod_form").submit()}),$(".menu1").on("click",".menu3_prime li",function(){$(this).children("a")[0].click()}),$(".hide_left,.mobile").on("click",function(){var e=0;$(".iss").is(".big,.small")&&(e=1),0==e?$(".left_menu").is(":visible")?($(".iss").addClass("small"),$.cookie("iss","s",{expires:60,path:"/"})):($(".iss").addClass("big"),$.cookie("iss","b",{expires:60,path:"/"})):$(".iss").is(".big")?($(".iss").removeClass("big"),$(".iss").addClass("small"),$.cookie("iss","s",{expires:60,path:"/"})):($(".iss").removeClass("small"),$(".iss").addClass("big"),$.cookie("iss","b",{expires:60,path:"/"})),sl_message_width()}),$(document).mouseup(function(e){var t=$(".select_box");0===t.has(e.target).length&&($(".drop_box").css("transform","scaleY(0)"),$(".slct_box").removeClass("active"));var i=$(".menu_supply");0===t.has(e.target).length&&(i.find(".drops").css("transform","scaleY(0)"),i.find(".drops").removeClass("active_menu_s"));var a=$(".loll_drop");0===a.has(e.target).length&&(a.css("transform","scaleY(0)"),""==$(".post_p").val()?($(".loll_div").addClass("required_in_2018"),$(".b-loading-message").empty().append("нет связи с поставщиком").show()):($("[name=number_soply]").val($("[name=number_soply]").attr("val_old")),$(".loll_drop").empty(),$(".b-loading-message").hide()));var n=$(".form-rate-ok1");0===n.has(e.target).length&&n.removeClass("show-form-rate1")}),window.slctclick_box1=function(){if(null==$(this).parents(".select_box").find("input").attr("readonly")){$(this).is(".active")?($(this).removeClass("active"),$(this).next().css("transform","scaleY(0)")):($(this).addClass("active"),$(this).next().css("transform","scaleY(1)"));var i=$(this).attr("data_src");$(".slct_box").each(function(e,t){$(this).attr("data_src");$(this).attr("data_src")!=i&&($(this).removeClass("active"),$(this).next().css("transform","scaleY(0)"))})}},$("body").on("click",".slct_box",slctclick_box1),window.dropli_box1=function(){var e=$(this).parent().parent().find(".slct_box").attr("data_src"),t=$(this).find("a").attr("rel"),i=$(this).find("a").text(),a=$(this).find("a").attr("rel");e!=t?($(this).parent().find("li").removeClass("sel_active"),$(this).addClass("sel_active"),$(this).parent().parent().find(".slct_box").removeClass("active").empty().append(i),$(this).parent().parent().find(".slct_box").attr("data_src",a),$(this).parent().parent().find(".drop_box").css("transform","scaleY(0)"),$(this).parent().parent().find("input").val(a).change(),savedefault($(this).parent().parent().find("input"))):($(this).parent().parent().find(".drop_box").css("transform","scaleY(0)"),$(this).parent().parent().find(".slct_box").removeClass("active"))},$("body").on("click",".drop_box li",dropli_box1),$(document).mouseup(function(e){var t=$(".select"),i=$(".js-drop-search"),a=$(".js-open-search");0!==t.has(e.target).length||i.is(e.target)||a.is(e.target)||($(".drop").css("transform","scaleY(0)"),$(".drop-radio").css("transform","scaleY(0)"),$(".slct").removeClass("active"),$(".drop").parents(".input-search-list").find("i").removeClass("open-search-active"),$(".drop-radio").parents(".input-search-list").find("i").removeClass("open-search-active"))}),window.slctclick=function(){if(null==$(this).parents(".select").find("input").attr("readonly")){$(this).is(".active")?($(this).removeClass("active"),$(this).next().css("transform","scaleY(0)"),$(this).parents(".list_2021").removeClass("active1_in_2018x")):($(this).addClass("active"),$(this).next().css("transform","scaleY(1)"),$(this).parents(".list_2021").addClass("active1_in_2018x"));$(this).attr("list_number");return $(".slct").not(this).each(function(e,t){$(this).attr("data_src");$(this).removeClass("active"),$(this).next().css("transform","scaleY(0)"),$(this).parents(".list_2021").removeClass("active1_in_2018x")}),$(".drop-search").each(function(e,t){$(this).parents(".input-search-list").find("i").removeClass("open-search-active"),$(this).css("transform","scaleY(0)")}),!1}},$(".slct").bind("click.sys",slctclick),window.dropli=function(){var e=$(this).parent().parent().find(".slct").attr("data_src"),t=$(this).find("a").attr("rel"),i=$(this).find("a").text(),a=$(this).find("a").attr("rel");e!=t?($(this).parent().find("li").removeClass("sel_active"),$(this).addClass("sel_active"),$(this).parent().parent().find(".slct").removeClass("active").empty().append(i),$(this).parent().parent().find(".slct").attr("data_src",a),$(this).parents(".list_2021").addClass("active_in_2018x"),$(this).parent().parent().find(".drop").css("transform","scaleY(0)"),$(this).parent().parent().find("input").val(a).change()):($(this).parent().parent().find(".drop").css("transform","scaleY(0)"),$(this).parent().parent().find(".slct").removeClass("active"))},$(".drop").find("li").bind("click",dropli);$("#sort2").bind("change",function(){$.cookie("su_2",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("su_2",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r"),2==$(this).val()&&$("#date_table").show()}),$("[list_number=t2]").next().find("li").bind("click",function(){2==$(this).find("a").attr("rel")&&$("#date_table").show()});$("#sort1").bind("change",function(){$.cookie("su_1",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("su_1",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort_stock3").bind("change",function(){$.cookie("su_st_3",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("su_st_3",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort_stock1").bind("change",function(){$.cookie("su_st_1",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("su_st_1",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$(".name_stock_search_input").bind("change keyup input click",function(){$.cookie("su_st_2",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("su_st_2",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r"),""!=$(this).val()?($(this).next().show(),$(".js--sort").addClass("greei_input"),$(".js--sort").find("input").prop("readonly",!0)):($(this).next().hide(),$(".js--sort").removeClass("greei_input"),$(".js--sort").find("input").removeAttr("readonly"))}),$(".dell_stock_search").bind("change keyup input click",function(){$.cookie("su_st_2",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$(this).prev().val(""),$(".js--sort").removeClass("greei_input"),$(".js--sort").find("input").removeAttr("readonly"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r"),$(this).hide()});$("#sortb4").bind("change",function(){$.cookie("bi_4",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("bi_4",$(this).val(),"add"),$(".show_sort_supply").removeClass("active_supply"),$(".show_sort_supply").addClass("active_supply")});$("#sortb3").bind("change",function(){$.cookie("bi_3",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("bi_3",$(this).val(),"add"),$(".show_sort_supply").removeClass("active_supply"),$(".show_sort_supply").addClass("active_supply")});$("#sort3").bind("change",function(){$.cookie("su_3",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("su_3",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort4").bind("change",function(){$.cookie("su_4",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("su_4",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort_stock4").bind("change",function(){$.cookie("su_st_4",null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("su_st_4",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#city").bind("change",function(){var e="url="+window.location.href+"&id="+$(this).val();$(".menu2_prime").hide(),$(".menu3_prime").hide(),AjaxClient("menu_prime","city","GET",e,"AfterChangeCity","1",0)}),window.changekvartal=function(){var e="url="+window.location.href+"&id="+$(this).val();$(".menu3_prime").hide(),AjaxClient("menu_prime","kvartal","GET",e,"AfterChangeKvartal","1",0)},$("#kvartal").bind("change",changekvartal)}),window.Modernizr=function(d,r){function e(e){f.cssText=e}function s(e,t){return typeof e===t}function o(e,t){for(var i in e)if(f[e[i]]!==r)return"pfx"!=t||e[i];return!1}function t(e,t,i){var a=e.charAt(0).toUpperCase()+e.substr(1),n=(e+" "+v.join(a+" ")+a).split(" ");return s(t,"string")||s(t,"undefined")?o(n,t):function(e,t,i){for(var a in e){var n=t[e[a]];if(n!==r)return!1===i?e[a]:s(n,"function")?n.bind(i||t):n}return!1}(n=(e+" "+g.join(a+" ")+a).split(" "),t,i)}function i(e,t,i,a){var n,r,s,o=d.createElement("div"),l=d.body,c=l||d.createElement("body");if(parseInt(i,10))for(;i--;)(s=d.createElement("div")).id=a?a[i]:p+(i+1),o.appendChild(s);return n=["­","<style>",e,"</style>"].join(""),o.id=p,(l?o:c).innerHTML+=n,c.appendChild(o),l||(c.style.background="",u.appendChild(c)),r=t(o,e),l?o.parentNode.removeChild(o):c.parentNode.removeChild(c),!!r}var a,n,l={},u=d.documentElement,p="modernizr",c=d.createElement(p),f=c.style,h=" -webkit- -moz- -o- -ms- ".split(" "),m="Webkit Moz O ms",v=m.split(" "),g=m.toLowerCase().split(" "),_={},y=[],b=y.slice,$={}.hasOwnProperty;n=s($,"undefined")||s($.call,"undefined")?function(e,t){return t in e&&s(e.constructor.prototype[t],"undefined")}:function(e,t){return $.call(e,t)},Function.prototype.bind||(Function.prototype.bind=function(a){var n=this;if("function"!=typeof n)throw new TypeError;var r=b.call(arguments,1),s=function(){if(this instanceof s){function e(){}e.prototype=n.prototype;var t=new e,i=n.apply(t,r.concat(b.call(arguments)));return Object(i)===i?i:t}return n.apply(a,r.concat(b.call(arguments)))};return s});var k,w,x;k=[,"csstransforms3d"],w=[,["@media (",h.join("transform-3d),("),p,")","{#csstransforms3d{left:9px;position:absolute;height:3px;}}"].join("")].join(""),i(w,function(e,t){for(var i=d.styleSheets[d.styleSheets.length-1],a=(i&&(i.cssRules&&i.cssRules[0]?i.cssRules[0].cssText:i.cssText),e.childNodes),n={};x--;)n[a[x].id]=a[x];l.csstransforms3d=9===(n.csstransforms3d&&n.csstransforms3d.offsetLeft)&&3===n.csstransforms3d.offsetHeight},x=k.length,k);for(var C in _.csstransforms3d=function(){var e=!!t("perspective");return e&&"webkitPerspective"in u.style&&(e=l.csstransforms3d),e},_.csstransitions=function(){return t("transition")},_)n(_,C)&&(a=C.toLowerCase(),l[a]=_[C](),y.push((l[a]?"":"no-")+a));return e(""),c=null,function(e,t){function s(e){var t,i={},a=e.createElement,n=(0,e.createDocumentFragment)();e.createElement=function(e){var t=(i[e]||(i[e]=a(e))).cloneNode();return c.shivMethods&&t.canHaveChildren&&!r.test(e)?n.appendChild(t):t},e.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+("string"==typeof(t=c.elements)?t.split(" "):t).join().replace(/\w+/g,function(e){return i[e]=a(e),n.createElement(e),'c("'+e+'")'})+");return n}")(c,n)}function i(e){var t,i,a,n,r;return e.documentShived||(c.shivCSS&&!o&&(a="article,aside,details,figcaption,figure,footer,header,hgroup,nav,section{display:block}audio{display:none}canvas,video{display:inline-block;*display:inline;*zoom:1}[hidden]{display:none}audio[controls]{display:inline-block;*display:inline;*zoom:1}mark{background:#FF0;color:#000}",n=(i=e).createElement("p"),r=i.getElementsByTagName("head")[0]||i.documentElement,n.innerHTML="x<style>"+a+"</style>",t=!!r.insertBefore(n.lastChild,r.firstChild)),l||(t=!s(e)),t&&(e.documentShived=t)),e}var o,l,a,n=e.html5||{},r=/^<|^(?:button|form|map|select|textarea)$/i;(a=t.createElement("a")).innerHTML="<xyz></xyz>",o="hidden"in a,l=1==a.childNodes.length||function(){try{t.createElement("a")}catch(e){return!0}var e=t.createDocumentFragment();return void 0===e.cloneNode||void 0===e.createDocumentFragment||void 0===e.createElement}();var c={elements:n.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:!1!==n.shivCSS,shivMethods:!1!==n.shivMethods,type:"default",shivDocument:i};e.html5=c,i(t)}(this,d),l._version="2.5.3",l._prefixes=h,l._domPrefixes=g,l._cssomPrefixes=v,l.testProp=function(e){return o([e])},l.testAllProps=t,l.testStyles=i,u.className=u.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(" js "+y.join(" ")),l}(this.document),function(e,p){function u(e){return"[object Function]"==n.call(e)}function f(e){return"string"==typeof e}function h(){}function m(e){return!e||"loaded"==e||"complete"==e||"uninitialized"==e}function v(){var e=b.shift();$=1,e?e.t?_(function(){("c"==e.t?g.injectCss:g.injectJs)(e.s,0,e.a,e.x,e.e,1)},0):(e(),v()):$=0}function t(e,t,i,a,n){return $=0,t=t||"j",f(e)?function(i,a,e,t,n,r,s){function o(e){if(!c&&m(l.readyState)&&(u.r=c=1,$||v(),l.onload=l.onreadystatechange=null,e))for(var t in"img"!=i&&_(function(){w.removeChild(l)},50),C[a])C[a].hasOwnProperty(t)&&C[a][t].onload()}s=s||g.errorTimeout;var l={},c=0,d=0,u={t:e,s:a,e:n,a:r,x:s};1===C[a]&&(d=1,C[a]=[],l=p.createElement(i)),"object"==i?l.data=a:(l.src=a,l.type=i),l.width=l.height="0",l.onerror=l.onload=l.onreadystatechange=function(){o.call(this,d)},b.splice(t,0,u),"img"!=i&&(d||2===C[a]?(w.insertBefore(l,k?null:y),_(o,s)):C[a].push(l))}("c"==t?l:s,e,t,this.i++,i,a,n):(b.splice(this.i++,0,e),1==b.length&&v()),this}function o(){var e=g;return e.loader={load:t,i:0},e}var i,g,a=p.documentElement,_=e.setTimeout,y=p.getElementsByTagName("script")[0],n={}.toString,b=[],$=0,r="MozAppearance"in a.style,k=r&&!!p.createRange().compareNode,w=k?a:y.parentNode,s=(a=e.opera&&"[object Opera]"==n.call(e.opera),a=!!p.attachEvent&&!a,r?"object":a?"script":"img"),l=a?"script":s,c=Array.isArray||function(e){return"[object Array]"==n.call(e)},x=[],C={},S={timeout:function(e,t){return t.length&&(e.timeout=t[0]),e}};(g=function(e){function d(e,t,i,a,n){var r=function(e){e=e.split("!");var t,i,a,n=x.length,r=e.pop(),s=e.length;for(r={url:r,origUrl:r,prefixes:e},i=0;i<s;i++)a=e[i].split("="),(t=S[a.shift()])&&(r=t(r,a));for(i=0;i<n;i++)r=x[i](r);return r}(e),s=r.autoCallback;r.url.split(".").pop().split("?").shift(),r.bypass||(t=t&&(u(t)?t:t[e]||t[a]||t[e.split("/").pop().split("?")[0]]||v),r.instead?r.instead(e,t,i,a,n):(C[r.url]?r.noexec=!0:C[r.url]=1,i.load(r.url,r.forceCSS||!r.forceJS&&"css"==r.url.split(".").pop().split("?").shift()?"c":void 0,r.noexec,r.attrs,r.timeout),(u(t)||u(s))&&i.load(function(){o(),t&&t(r.origUrl,n,a),s&&s(r.origUrl,n,a),C[r.url]=2})))}function t(e,t){function i(i,e){if(i){if(f(i))e||(o=function(){var e=[].slice.call(arguments);l.apply(this,e),c()}),d(i,o,t,0,r);else if(Object(i)===i)for(n in a=function(){var e,t=0;for(e in i)i.hasOwnProperty(e)&&t++;return t}(),i)i.hasOwnProperty(n)&&(e||--a||(u(o)?o=function(){var e=[].slice.call(arguments);l.apply(this,e),c()}:o[n]=function(t){return function(){var e=[].slice.call(arguments);t&&t.apply(this,e),c()}}(l[n])),d(i[n],o,t,n,r))}else e||c()}var a,n,r=!!e.test,s=e.load||e.both,o=e.callback||h,l=o,c=e.complete||h;i(r?e.yep:e.nope,!!s),s&&i(s)}var i,a,n=this.yepnope.loader;if(f(e))d(e,0,n,0);else if(c(e))for(i=0;i<e.length;i++)f(a=e[i])?d(a,0,n,0):c(a)?g(a):Object(a)===a&&t(a,n);else Object(e)===e&&t(e,n)}).addPrefix=function(e,t){S[e]=t},g.addFilter=function(e){x.push(e)},g.errorTimeout=1e4,null==p.readyState&&p.addEventListener&&(p.readyState="loading",p.addEventListener("DOMContentLoaded",i=function(){p.removeEventListener("DOMContentLoaded",i,0),p.readyState="complete"},0)),e.yepnope=o(),e.yepnope.executeStack=v,e.yepnope.injectJs=function(e,t,i,a,n,r){var s,o,l=p.createElement("script");a=a||g.errorTimeout;for(o in l.src=e,i)l.setAttribute(o,i[o]);t=r?v:t||h,l.onreadystatechange=l.onload=function(){!s&&m(l.readyState)&&(s=1,t(),l.onload=l.onreadystatechange=null)},_(function(){s||t(s=1)},a),n?l.onload():y.parentNode.insertBefore(l,y)},e.yepnope.injectCss=function(e,t,i,a,n,r){var s;a=p.createElement("link"),t=r?v:t||h;for(s in a.href=e,a.rel="stylesheet",a.type="text/css",i)a.setAttribute(s,i[s]);n||(y.parentNode.insertBefore(a,y),_(t,0))}}(this,document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))};var isIE=-1!=navigator.appVersion.indexOf("MSIE"),isWin=-1!=navigator.appVersion.toLowerCase().indexOf("win"),isOpera=-1!=navigator.userAgent.indexOf("Opera");function ControlVersion(){var t,e;try{t=(e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7")).GetVariable("$version")}catch(e){}if(!t)try{e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6"),t="WIN 6,0,21,0",e.AllowScriptAccess="always",t=e.GetVariable("$version")}catch(e){}if(!t)try{t=(e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3")).GetVariable("$version")}catch(e){}if(!t)try{e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3"),t="WIN 3,0,18,0"}catch(e){}if(!t)try{e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash"),t="WIN 2,0,0,11"}catch(e){t=-1}return t}function GetSwfVer(){var e=-1;if(null!=navigator.plugins&&0<navigator.plugins.length){if(navigator.plugins["Shockwave Flash 2.0"]||navigator.plugins["Shockwave Flash"]){var t=navigator.plugins["Shockwave Flash 2.0"]?" 2.0":"",i=navigator.plugins["Shockwave Flash"+t].description.split(" "),a=i[2].split("."),n=a[0],r=a[1],s=i[3];""==s&&(s=i[4]),"d"==s[0]?s=s.substring(1):"r"==s[0]&&0<(s=s.substring(1)).indexOf("d")&&(s=s.substring(0,s.indexOf("d")));e=n+"."+r+"."+s}}else-1!=navigator.userAgent.toLowerCase().indexOf("webtv/2.6")?e=4:-1!=navigator.userAgent.toLowerCase().indexOf("webtv/2.5")?e=3:-1!=navigator.userAgent.toLowerCase().indexOf("webtv")?e=2:isIE&&isWin&&!isOpera&&(e=ControlVersion());return e}function DetectFlashVer(e,t,i){if(versionStr=GetSwfVer(),-1==versionStr)return!1;if(0!=versionStr){versionArray=isIE&&isWin&&!isOpera?(tempArray=versionStr.split(" "),tempString=tempArray[1],tempString.split(",")):versionStr.split(".");var a=versionArray[0],n=versionArray[1],r=versionArray[2];if(a>parseFloat(e))return!0;if(a==parseFloat(e)){if(n>parseFloat(t))return!0;if(n==parseFloat(t)&&r>=parseFloat(i))return!0}return!1}}function AC_AddExtension(e,t){return-1!=e.indexOf("?")?e.replace(/\?/,t+"?"):e+t}function AC_Generateobj(e,t,i){var a="";if(isIE&&isWin&&!isOpera){for(var n in a+="<object ",e)a+=n+'="'+e[n]+'" ';for(var n in a+=">",t)a+='<param name="'+n+'" value="'+t[n]+'" /> ';a+="</object>"}else{for(var n in a+="<embed ",i)a+=n+'="'+i[n]+'" ';a+="> </embed>"}document.write(a)}function AC_FL_RunContent(){var e=AC_GetArgs(arguments,".swf","movie","clsid:d27cdb6e-ae6d-11cf-96b8-444553540000","application/x-shockwave-flash");AC_Generateobj(e.objAttrs,e.params,e.embedAttrs)}function AC_SW_RunContent(){var e=AC_GetArgs(arguments,".dcr","src","clsid:166B1BCA-3F9C-11CF-8075-444553540000",null);AC_Generateobj(e.objAttrs,e.params,e.embedAttrs)}function AC_GetArgs(e,t,i,a,n){var r=new Object;r.embedAttrs=new Object,r.params=new Object,r.objAttrs=new Object;for(var s=0;s<e.length;s+=2){switch(e[s].toLowerCase()){case"classid":break;case"pluginspage":r.embedAttrs[e[s]]=e[s+1];break;case"src":case"movie":e[s+1]=AC_AddExtension(e[s+1],t),r.embedAttrs.src=e[s+1],r.params[i]=e[s+1];break;case"onafterupdate":case"onbeforeupdate":case"onblur":case"oncellchange":case"onclick":case"ondblclick":case"ondrag":case"ondragend":case"ondragenter":case"ondragleave":case"ondragover":case"ondrop":case"onfinish":case"onfocus":case"onhelp":case"onmousedown":case"onmouseup":case"onmouseover":case"onmousemove":case"onmouseout":case"onkeypress":case"onkeydown":case"onkeyup":case"onload":case"onlosecapture":case"onpropertychange":case"onreadystatechange":case"onrowsdelete":case"onrowenter":case"onrowexit":case"onrowsinserted":case"onstart":case"onscroll":case"onbeforeeditfocus":case"onactivate":case"onbeforedeactivate":case"ondeactivate":case"type":case"codebase":case"id":r.objAttrs[e[s]]=e[s+1];break;case"width":case"height":case"align":case"vspace":case"hspace":case"class":case"title":case"accesskey":case"name":case"tabindex":r.embedAttrs[e[s]]=r.objAttrs[e[s]]=e[s+1];break;default:r.embedAttrs[e[s]]=r.params[e[s]]=e[s+1]}}return r.objAttrs.classid=a,n&&(r.embedAttrs.type=n),r}!function(p){var n={defaults:{width:"100%",size:"medium",themes:[],placeholder:"Select an item",removable:!1,empty:!1,search:!1,ajax:!1,data:{},scrollContainer:null,zIndex:null},setup:function(e){var t=Object.keys(this.defaults),i=Object.keys(e),a=!0;i.forEach(function(e){-1===p.inArray(e,t)&&(console.error("selectMania | wrong setup settings"),a=!1)}),a&&(this.defaults=p.extend(!0,{},n.defaults,e))}},s={internalSettings:function(e,t){return t.multiple=!1,t.values=[],t.multiple=e.is("[multiple]"),t.disabled=e.is("[disabled]"),e.find("option:selected").each(function(){t.values.push({value:this.value,text:this.text})}),t},getAttrSettings:function(i){var a={};return["width","size","placeholder","removable","empty","search","scrollContainer","zIndex"].forEach(function(e){if(i.is("[data-"+e+"]")){var t=i.attr("data-"+e);"true"!==t&&"false"!==t||(t="true"===t),a[e]=t}}),a},initialize:function(e,t){var i=p.extend(!0,{},t),a=this.getAttrSettings(e);if((i=p.extend(i,a)).empty&&e.val(""),i=this.internalSettings(e,i),this.controlSettings(e,i)){var n=o.build(e,i);n.data("selectMania-originalSelect",e),e.data("selectMania-element",n),!1!==i.ajax&&this.initAjax(n,i),this.updateClean(n),e.addClass("select-mania-original"),n.insertBefore(e),e.appendTo(n),l.bind(n)}},update:function(e){var t=e.data("selectMania-element"),i=t.find(".select-mania-values").first(),a=t.data("selectMania-dropdown").find(".select-mania-items").first();e.is("[disabled]")?t.addClass("select-mania-disabled"):t.removeClass("select-mania-disabled"),t.find(".select-mania-value").remove(),a.empty(),e.find("option:selected").each(function(){p(this).is(":selected")&&i.append(o.buildValue({value:this.value,text:this.text}))}),a.append(o.buildItemList(e.children())),this.updateClean(t),l.bind(t)},destroy:function(e){var t=e.data("selectMania-element");e.insertAfter(t),t.remove(),e.removeClass("select-mania-original")},openDropdown:function(e){var t=e.closest(".select-mania");if(t.is("[data-selectMania-scrollContainer]")){var i=p(t.attr("data-selectMania-scrollContainer"));s.positionDropdown(e),e.addClass("select-mania-absolute"),i.off("scroll.selectMania").on("scroll.selectMania",function(){i.off("scroll.selectMania"),s.closeDropdown(p(".select-mania-dropdown.open"))}),p(window).off("resize.selectMania").on("resize.selectMania",function(){s.positionDropdown(e)})}e.stop().addClass("open").slideDown(100),e.find(".select-mania-items").scrollTop(0),this.focusSearch(e),p(document).off("keydown.selectMania").on("keydown.selectMania",l.keyboardControl)},closeDropdown:function(e){var t=e.data("selectMania-element");if(p(document).off("keydown.selectMania"),e.find(".select-mania-item").removeClass("select-mania-hover"),e.hasClass("select-mania-absolute")){var i=e.data("selectMania-element").find(".select-mania-inner").first();e.removeClass("open").hide().insertAfter(i),p(window).off("resize.selectMania");var a=p(t.attr("data-selectMania-scrollContainer"));0<a.length&&a.off("scroll.selectMania")}else e.stop().removeClass("open").slideUp(100)},positionDropdown:function(e){var t=e.data("selectMania-element"),i=e.find(".select-mania-items"),a=i.scrollTop(),n=t.offset(),r=t.outerWidth(),s=t.outerHeight();e.appendTo("body").css({position:"absolute",top:n.top+s,left:n.left,width:r}),i.scrollTop(a)},selectItem:function(e){var t=e.closest(".select-mania-dropdown"),i=t.data("selectMania-element"),a=i.data("selectMania-originalSelect");if(!e.is(".select-mania-selected")){var n=e.attr("data-value"),r=o.buildValue({value:n,text:e.text()});i.is(".select-mania-multiple")?(i.find(".select-mania-values").append(r),s.addMultipleVal(a,n)):(t.find(".select-mania-item").removeClass("select-mania-selected"),i.find(".select-mania-values .select-mania-value").remove(),i.find(".select-mania-values").append(r),a.val(n)),e.addClass("select-mania-selected"),a.trigger("change")}t.is(".select-mania-absolute")&&s.positionDropdown(t),i.is(".select-mania-multiple")||s.closeDropdown(t),s.updateClean(i),l.bind(i)},focusSearch:function(e){e.find(".select-mania-search-input").focus()},addMultipleVal:function(e,t){var i=e.val();i instanceof Array||(i=[]),i.push(t),e.val(i)},removeMultipleVal:function(e,t){var i=e.val();i instanceof Array||(i=[]),i.splice(p.inArray(t,i),1),e.val(i)},updateClean:function(e){var t=e.data("selectMania-originalSelect");null!==t.val()&&0<t.val().length?e.find(".select-mania-clear-icon").show():e.find(".select-mania-clear-icon").hide()},doSearch:function(e){var t=e.data("selectMania-dropdown"),i=t.find(".select-mania-search-input").first().val().toLowerCase().trim();""!==i?(t.find(".select-mania-item").each(function(){-1!==p(this).text().toLowerCase().indexOf(i)?p(this).removeClass("select-mania-hidden"):p(this).addClass("select-mania-hidden")}),t.find(".select-mania-group").each(function(){0<p(this).find(".select-mania-item:not(.select-mania-hidden)").length?p(this).removeClass("select-mania-hidden"):p(this).addClass("select-mania-hidden")})):t.find(".select-mania-group, .select-mania-item").removeClass("select-mania-hidden")},doSearchAjax:function(t){var i=this,e=t.data("selectMania-dropdown").find(".select-mania-search-input").first().val();t.data("selectMania-ajaxReady",!1),t.data("selectMania-ajaxPage",1),i.dropdownLoading(t),t.data("selectMania-ajaxFunction")(e,1,t.data("selectMania-ajaxData"),function(e){i.dropdownLoading(t,!0),s.replaceItems(t,e),l.bind(t),i.initAjax(t)})},addItems:function(e,t){this.addOrReplaceItems(e,t,!1)},replaceItems:function(e,t){this.addOrReplaceItems(e,t,!0)},addOrReplaceItems:function(e,t,i){var a=e.data("selectMania-dropdown"),n=e.data("selectMania-originalSelect"),r=a.find(".select-mania-items"),s=p(t);this.getVal(e).forEach(function(e){s.filter(function(){return p(this).attr("value")===e.value&&p(this).text()===e.text}).prop("selected",!0)}),$builtItems=o.buildItemList(s),!0===i&&(n.find("option").remove(":not(:checked)"),r.empty()),r.append($builtItems),n.append(s),l.bind(e)},initAjax:function(e,t){"object"==typeof t&&(t.hasOwnProperty("ajax")&&"function"==typeof t.ajax&&e.data("selectMania-ajaxFunction",t.ajax),t.hasOwnProperty("data")&&"object"==typeof t.data&&e.data("selectMania-ajaxData",t.data)),e.data("selectMania-ajaxPage",1),e.data("selectMania-ajaxReady",!0),e.data("selectMania-ajaxScrollDone",!1)},dropdownLoading:function(e,t){var i=!1;void 0!==t&&!0===t&&(i=!0);var a=e.find(".select-mania-items-container").first();if(a.find(".icon-loading-container").remove(),!0!==i){var n=p('<div class="icon-loading-container"></div>');n.append('<i class="icon-loading"></i>'),a.append(n)}},getVal:function(e){var t=[];return e.find(".select-mania-value").each(function(){var e=p(this).find(".select-mania-value-text").first().text();t.push({value:p(this).attr("data-value"),text:e})}),t},clear:function(e){var t=e.data("selectMania-dropdown");e.find(".select-mania-value").remove(),t.find(".select-mania-item").removeClass("select-mania-selected");var i=e.data("selectMania-originalSelect");e.is(".select-mania-multiple")?i.val([]):i.val("")},setVal:function(i,e){var a=this,n=i.data("selectMania-originalSelect");a.clear(i),1<e.length&&!i.is(".select-mania-multiple")&&(e=e.slice(0,1)),e.forEach(function(e){var t=p.extend({value:"",text:"",selected:!0},e);a.setOneValSelectMania(i,t),a.setOneValOriginal(n,t)}),a.updateClean(i),l.bind(i)},setOneValSelectMania:function(e,t){var i=o.buildValue(t);e.find(".select-mania-values").append(i);var a=e.find('.select-mania-item[data-value="'+t.value+'"]').filter(function(){return p(this).text()===t.text});0<a.length&&a.first().addClass("select-mania-selected")},setOneValOriginal:function(e,t){var i=e.find('option[value="'+t.value+'"]').filter(function(){return p(this).text()===t.text});if(i.length<1){var a=o.buildOption(t);e.append(a)}else{i.first()[0].selected=!0}},controlTarget:function(e,t){return-1===p.inArray("isSelect",t)||e.is("select")?-1===p.inArray("isInitialized",t)||e.hasClass("select-mania-original")?-1!==p.inArray("notInitialized",t)&&e.hasClass("select-mania-original")?(console.error("selectMania | ignore because already initialized"),console.log(e[0]),!1):!(-1!==p.inArray("isSingle",t)&&1<e.length)||(console.error("selectMania | check method can be called on single element only"),console.log(e[0]),!1):(console.error("selectMania | select is not initialized"),console.log(e[0]),!1):(console.error("selectMania | invalid select element"),console.log(e[0]),!1)},controlSettings:function(e,t){return!1!==t.ajax&&"function"!=typeof t.ajax?(t.ajax=!1,console.error("selectMania | invalid ajax function"),console.log(e[0]),console.log(t),!1):-1===p.inArray(t.size,["tiny","small","medium","large"])?(t.size="medium",console.error("selectMania | invalid size"),console.log(e[0]),console.log(t),!1):null!==t.scrollContainer&&p(t.scrollContainer).length<1?(t.scrollContainer=null,console.error("selectMania | invalid scroll container"),console.log(e[0]),console.log(t),!1):!(null!==t.zIndex&&(isNaN(parseInt(t.zIndex))||!isFinite(t.zIndex)))||(t.zIndex=null,console.error("selectMania | invalid z-index"),console.log(e[0]),console.log(t),!1)},controlValues:function(e,t){return t instanceof Array||(console.error("selectMania | values parameter is not a valid array"),console.log(e[0]),console.log(t),!1)},navigateItem:function(e,t){var i=e.closest(".select-mania"),a=e.find(".select-mania-items"),n=".select-mania-item:not(.select-mania-disabled):not(.select-mania-hidden)";i.hasClass("select-mania-multiple")&&(n+=":not(.select-mania-selected)");var r=e.find(n),s=e.find(n+".select-mania-hover"),o=p();if(0<s.length?"next"===t?o=r.slice(r.index(s)+1).first():"previous"===t&&(o=r.slice(0,r.index(s)).last()):o=r.first(),0<o.length){e.find(".select-mania-item").removeClass("select-mania-hover"),o.addClass("select-mania-hover");var l=o.position(),c=o.outerHeight(!0),d=a.height(),u=a.scrollTop();l.top<0?a.scrollTop(u+l.top):l.top+c>d&&a.scrollTop(u+l.top+c-d)}}},o={build:function(e,t){var i="select-mania-"+t.size,a='style="width:'+t.width+';"',n=p('<div class="select-mania '+i+'" '+a+"></div>");t.multiple&&n.addClass("select-mania-multiple"),t.disabled&&n.addClass("select-mania-disabled"),t.themes instanceof Array&&0<t.themes.length&&t.themes.forEach(function(e){n.addClass("select-mania-theme-"+e)}),!1!==t.ajax&&n.addClass("select-mania-ajax"),null!==t.scrollContainer&&n.attr("data-selectMania-scrollContainer",t.scrollContainer);var r=this.buildInner(t),s=this.buildDropdown(e,t);return n.append(r).append(s),n.data("selectMania-dropdown",s),s.data("selectMania-element",n),n},buildInner:function(e){var t=this,i=p('<div class="select-mania-inner"></div>'),a=p('<div class="select-mania-values"></div>'),n=p('<div class="select-mania-placeholder">'+e.placeholder+"</div>");a.append(n),e.values.forEach(function(e){a.append(t.buildValue(e))}),i.append(a);var r=p('<div class="select-mania-clear"></div>');return(e.removable||e.multiple)&&r.append('<i class="select-mania-clear-icon icon-cross">'),i.append(r),i.append('<div class="select-mania-add"><i class="select-mania-add-icon icon-add"></div>'),i.append(p('<div class="select-mania-arrow"><i class="select-mania-arrow-icon icon-arrow-down"></i></div>')),i},buildValue:function(e){var t='<div class="select-mania-value"  data-value="'+e.value+'"><div class="select-mania-value-text">'+e.text+'</div><div class="select-mania-value-clear"><i class="select-mania-value-clear-icon icon-cross"></i></div></div>';return p(t)},buildOption:function(e){var t=p('<option value="'+e.value+'">'+e.text+"</option>");return t[0].selected=e.selected,t},buildDropdown:function(e,t){var i="select-mania-"+t.size,a=p('<div class="select-mania-dropdown '+i+'"></div>');if(t.multiple&&a.addClass("select-mania-multiple"),t.search){var n=p('<div class="select-mania-dropdown-search"></div>');n.append('<input class="select-mania-search-input" />'),a.append(n)}var r=p('<div class="select-mania-items-container"></div>'),s=p('<div class="select-mania-items"></div>');return s.append(this.buildItemList(e.children())),r.append(s),a.append(r),t.themes instanceof Array&&0<t.themes.length&&t.themes.forEach(function(e){a.addClass("select-mania-theme-"+e)}),null!==t.zIndex&&a.css("z-index",t.zIndex),a},buildItemList:function(e){var t=this,i=p();return e.each(function(){p(this).is("optgroup")?i=i.add(t.buildItemGroup(p(this))):p(this).is("option")&&(i=i.add(t.buildItem(p(this))))}),i},buildItemGroup:function(e){var t=this,i=p('<div class="select-mania-group"></div>'),a=p('<div class="select-mania-group-inner"></div>'),n=p('<div class="select-mania-group-title"></div>');e.is("[data-icon]")&&n.append('<div class="select-mania-group-icon"><i class="'+e.attr("data-icon")+'"></i></div>'),n.append('<div class="select-mania-group-text">'+e.attr("label")+"</div>"),i.append(n);var r=e.is(":disabled");return r&&i.addClass("select-mania-disabled"),e.find("option").each(function(){a.append(t.buildItem(p(this),r))}),i.append(a),i},buildItem:function(e,t){var i=e[0],a=p('<div class="select-mania-item" data-value="'+i.value+'"></div>');return e.is("[class]")&&a.addClass(e.attr("class")),e.is("[data-icon]")&&a.append('<div class="select-mania-item-icon"><i class="'+e.attr("data-icon")+'"></i></div>'),a.append('<div class="select-mania-item-text">'+i.text+"</div>"),!e.is(":disabled")&&!0!==r.def(t)||a.addClass("select-mania-disabled"),e.is(":selected")&&a.addClass("select-mania-selected"),a}},l={bind:function(e){var t=this,i=e.data("selectMania-originalSelect"),a=e.data("selectMania-dropdown");e.is(".select-mania-disabled")?(i.off("focus.selectMania"),i.off("blur.selectMania"),e.find(".select-mania-clear-icon").off("click.selectMania"),e.find(".select-mania-value-clear-icon").off("click.selectMania"),e.find(".select-mania-inner").off("click.selectMania"),a.find(".select-mania-item:not(.select-mania-disabled)").off("mouseenter.selectMania"),a.find(".select-mania-item:not(.select-mania-disabled)").off("click.selectMania"),a.find(".select-mania-search-input").off("input.selectMania"),a.find(".select-mania-items").off("wheel.selectMania"),a.find(".select-mania-items").off("scroll.selectMania")):(p(document).off("click.selectMania").on("click.selectMania",t.documentClick),i.off("focus.selectMania").on("focus.selectMania",t.focus),i.off("blur.selectMania").on("blur.selectMania",t.blur),e.find(".select-mania-clear-icon").off("click.selectMania").on("click.selectMania",t.clearValues),e.find(".select-mania-value-clear-icon").off("click.selectMania").on("click.selectMania",t.clearValue),e.find(".select-mania-inner").off("click.selectMania").on("click.selectMania",t.dropdownToggle),a.find(".select-mania-item:not(.select-mania-disabled)").off("mouseenter.selectMania").on("mouseenter.selectMania",t.hoverItem),a.find(".select-mania-item:not(.select-mania-disabled)").off("click.selectMania").on("click.selectMania",t.itemSelection),a.find(".select-mania-search-input").off("input.selectMania").on("input.selectMania",t.inputSearch),a.find(".select-mania-items").off("wheel.selectMania").on("wheel.selectMania",t.scrollControl),e.is(".select-mania-ajax")&&a.find(".select-mania-items").off("scroll.selectMania").on("scroll.selectMania",t.scrollAjax))},dropdownToggle:function(e){e.stopPropagation();var t=p(this).closest(".select-mania").data("selectMania-dropdown");t.is(".open")?s.closeDropdown(t):(s.closeDropdown(p(".select-mania-dropdown.open")),s.openDropdown(t))},documentClick:function(e){p(e.target).closest(".select-mania-dropdown").length<1&&s.closeDropdown(p(".select-mania-dropdown.open"))},clearValues:function(e){e.stopPropagation();var t=p(this).closest(".select-mania"),i=t.data("selectMania-dropdown"),a=t.data("selectMania-originalSelect");s.clear(t),i.is(".select-mania-absolute")&&s.positionDropdown(i),a.trigger("change"),s.updateClean(t)},clearValue:function(e){e.stopPropagation();var t=p(this).closest(".select-mania"),i=t.data("selectMania-dropdown"),a=p(this).closest(".select-mania-value");i.find('.select-mania-item[data-value="'+a.attr("data-value")+'"]').removeClass("select-mania-selected"),a.remove();var n=t.data("selectMania-originalSelect");s.removeMultipleVal(n,a.attr("data-value")),i.is(".select-mania-absolute")&&s.positionDropdown(i),n.trigger("change"),s.updateClean(t)},itemSelection:function(){var e=p(this);s.selectItem(e)},inputSearch:function(){var e=p(this);$selectManiaEl=e.closest(".select-mania-dropdown").data("selectMania-element");var t=200;$selectManiaEl.is(".select-mania-ajax")&&(t=400),clearTimeout(e.data("selectMania-searchTimer")),e.data("selectMania-searchTimer",setTimeout(function(){$selectManiaEl.is(".select-mania-ajax")?s.doSearchAjax($selectManiaEl):s.doSearch($selectManiaEl)},t))},scrollAjax:function(e){var t=p(this),i=t.closest(".select-mania-dropdown").data("selectMania-element");if(!0!==i.data("selectMania-ajaxScrollDone")&&t.scrollTop()>=t[0].scrollHeight-t.outerHeight()-12&&!0===i.data("selectMania-ajaxReady")){var a=i.data("selectMania-ajaxPage")+1,n=i.find(".select-mania-search-input").first().val();i.data("selectMania-ajaxReady",!1),i.data("selectMania-ajaxPage",a),s.dropdownLoading(i),i.data("selectMania-ajaxFunction")(n,a,i.data("selectMania-ajaxData"),function(e){s.dropdownLoading(i,!0),""!==e.trim()?(s.addItems(i,e),l.bind(i),i.data("selectMania-ajaxReady",!0)):i.data("selectMania-ajaxScrollDone",!0)})}},scrollControl:function(e){var t=p(this);return e.originalEvent.deltaY<0?0<t.scrollTop():t.scrollTop()+t.innerHeight()<t[0].scrollHeight},focus:function(e){var t=p(this);t.data("selectMania-element").addClass("select-mania-focused"),t.off("keydown.selectMania").on("keydown.selectMania",l.keyboardOpening)},blur:function(e){var t=p(this);t.data("selectMania-element").removeClass("select-mania-focused"),t.off("keydown.selectMania")},hoverItem:function(e){var t=p(this);t.closest(".select-mania-dropdown").find(".select-mania-item").removeClass("select-mania-hover"),t.addClass("select-mania-hover")},keyboardOpening:function(e){var t=p(this),i=t.data("selectMania-element").data("selectMania-dropdown");i.hasClass("open")||-1===p.inArray(e.keyCode,[13,32,37,38,39,40])||(e.preventDefault(),e.stopPropagation(),t.blur(),s.openDropdown(i))},keyboardControl:function(e){var t=p(".select-mania-dropdown.open").first();if(0<t.length&&-1!==p.inArray(e.keyCode,[9,13,27,38,40]))switch(e.preventDefault(),e.stopPropagation(),e.keyCode){case 13:var i=t.find(".select-mania-item:not(.select-mania-disabled):not(.select-mania-hidden).select-mania-hover").first();0<i.length&&s.selectItem(i);break;case 9:case 27:s.closeDropdown(t);break;case 38:s.navigateItem(t,"previous");break;case 40:s.navigateItem(t,"next")}}},r={def:function(e){return void 0===e?null:e}},i={init:function(e){var t=p.extend(!0,{},n.defaults,e);return this.each(function(){var e=p(this);s.controlTarget(e,["isSelect","notInitialized"])&&s.initialize(e,t)})},update:function(){return this.each(function(){var e=p(this);s.controlTarget(e,["isInitialized"])&&s.update(e)})},destroy:function(){return this.each(function(){var e=p(this);s.controlTarget(e,["isInitialized"])&&s.destroy(e)})},check:function(){if(s.controlTarget(this,["isSingle"]))return this.hasClass("select-mania-original")},get:function(){if(s.controlTarget(this,["isSingle","isInitialized"])){var e=this.data("selectMania-element");return s.getVal(e)}},set:function(e){if(s.controlTarget(this,["isSingle","isInitialized"])&&s.controlValues(this,e)){var t=this.data("selectMania-element");s.setVal(t,e)}},clear:function(){return this.each(function(){var e=p(this);if(s.controlTarget(e,["isInitialized"])){var t=e.data("selectMania-element");s.clear(t),e.trigger("change"),s.updateClean(t)}})},setup:function(){return this.each(function(){var e=p(this);if(s.controlTarget(e,["isInitialized"])){var t=e.data("selectMania-element");s.clear(t),e.trigger("change"),s.updateClean(t)}})}};p.fn.selectMania=function(e){if(!(this.length<1)){if(i[e]){var t=Array.prototype.slice.call(arguments,1);return i[e].apply(this,t)}if("object"==typeof e||!e)return i.init.apply(this,arguments);console.error("selectMania | wrong method called"),console.log(this)}},p.extend({selectManiaSetup:function(e){n.setup(e)}})}(jQuery),function(S){S.fn.circliful=function(x,e){var C=S.extend({fgcolor:"#556b2f",bgcolor:"#eee",fill:!1,width:15,dimension:200,fontsize:15,percent:50,animationstep:1,iconsize:"20px",iconcolor:"#999",border:"default",complete:null},x);return this.each(function(){var a,i,e=["fgcolor","bgcolor","fill","width","dimension","fontsize","animationstep","endPercent","icon","iconcolor","iconsize","border"],n={},r="",s=0,o=S(this),l=!1;if(o.addClass("circliful"),i=o,S.each(e,function(e,t){null!=i.data(t)?n[t]=i.data(t):n[t]=S(C).attr(t),"fill"==t&&null!=i.data("fill")&&(l=!0)}),null!=o.data("text")&&(a=o.data("text"),null!=o.data("icon")&&(r=S("<i></i>").addClass("fa "+S(this).data("icon")).css({color:n.iconcolor,"font-size":n.iconsize})),null!=o.data("type")&&"half"==(b=S(this).data("type"))?k(o,"circle-text-half",n.dimension/1.45):k(o,"circle-text",n.dimension)),null!=S(this).data("total")&&null!=S(this).data("part")){var t=S(this).data("total")/100;percent=(S(this).data("part")/t/100).toFixed(3),s=(S(this).data("part")/t).toFixed(3)}else null!=S(this).data("percent")?(percent=S(this).data("percent")/100,s=S(this).data("percent")):percent=C.percent/100;null!=S(this).data("info")&&(S(this).data("info"),null!=S(this).data("type")?(b=S(this).data("type"),w(o,"half"==b?.9:1.25)):w(o,1.25)),S(this).width(n.dimension+"px");var c=S("<canvas></canvas>").attr({width:n.dimension,height:n.dimension}).appendTo(S(this)).get(0),d=c.getContext("2d"),u=c.width/2,p=c.height/2,f=(n.percent,Math.PI,c.width/2.5),h=2.3*Math.PI,m=0,v=0===n.animationstep?s:0,g=Math.max(n.animationstep,0),_=2*Math.PI,y=Math.PI/2,b="",$=!0;function k(e,t,i){S("<span></span>").appendTo(e).addClass(t).text(a).prepend(r).css({"line-height":i+"px","font-size":n.fontsize+"px"})}function w(e,t){S("<span></span>").appendTo(e).addClass("circle-info-half").css("line-height",n.dimension*t+"px")}null!=S(this).data("type")&&"half"==(b=S(this).data("type"))&&(h=2*Math.PI,m=3.13,_=+Math.PI,y=Math.PI/.996),function e(t){d.clearRect(0,0,c.width,c.height),d.beginPath(),d.arc(u,p,f,m,h,!1),d.lineWidth=n.width+1,d.strokeStyle=n.bgcolor,d.stroke(),l&&(d.fillStyle=n.fill,d.fill()),d.beginPath(),d.arc(u,p,f,-y,_*t-y,!1),"outline"==n.border?d.lineWidth=n.width+13:"inline"==n.border&&(d.lineWidth=n.width-13),d.strokeStyle=n.fgcolor,d.stroke(),v<s&&(v+=g,requestAnimationFrame(function(){e(Math.min(v,s)/100)},o)),v==s&&$&&void 0!==x&&S.isFunction(x.complete)&&(x.complete(),$=!1)}(v/100)})}}(jQuery),function(f){"use strict";function h(e,t){if(this.createTextRange){var i=this.createTextRange();i.collapse(!0),i.moveStart("character",e),i.moveEnd("character",t-e),i.select()}else this.setSelectionRange&&(this.focus(),this.setSelectionRange(e,t))}function m(e){var t=this.value.length;if(e="start"==e.toLowerCase()?"Start":"End",document.selection){var i,a,n,r=document.selection.createRange();return(i=r.duplicate()).expand("textedit"),i.setEndPoint("EndToEnd",r),n=(a=i.text.length-r.text.length)+r.text.length,"Start"==e?a:n}return void 0!==this["selection"+e]&&(t=this["selection"+e]),t}var v={codes:{46:127,188:44,109:45,190:46,191:47,192:96,220:92,222:39,221:93,219:91,173:45,187:61,186:59,189:45,110:46},shifts:{96:"~",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",48:")",45:"_",61:"+",91:"{",93:"}",92:"|",59:":",39:'"',44:"<",46:">",47:"?"}};f.fn.number=function(e,d,u,p){p=void 0===p?",":p,d=void 0===d?0:d;var t="\\u"+("0000"+(u=void 0===u?".":u).charCodeAt(0).toString(16)).slice(-4),i=new RegExp("[^"+t+"0-9]","g"),a=new RegExp(t,"g");return!0===e?this.is("input:text")?this.on({"keydown.format":function(e){var t=f(this),i=t.data("numFormat"),a=e.keyCode?e.keyCode:e.which,n="",r=m.apply(this,["start"]),s=m.apply(this,["end"]),o="",l=!1;if(v.codes.hasOwnProperty(a)&&(a=v.codes[a]),!e.shiftKey&&65<=a&&a<=90?a+=32:!e.shiftKey&&69<=a&&a<=105?a-=48:e.shiftKey&&v.shifts.hasOwnProperty(a)&&(n=v.shifts[a]),""==n&&(n=String.fromCharCode(a)),8!=a&&45!=a&&127!=a&&n!=u&&!n.match(/[0-9]/)){var c=e.keyCode?e.keyCode:e.which;if(46==c||8==c||127==c||9==c||27==c||13==c||(65==c||82==c||80==c||83==c||70==c||72==c||66==c||74==c||84==c||90==c||61==c||173==c||48==c)&&!0===(e.ctrlKey||e.metaKey)||(86==c||67==c||88==c)&&!0===(e.ctrlKey||e.metaKey)||35<=c&&c<=39||112<=c&&c<=123)return;return e.preventDefault(),!1}if(0==r&&s==this.value.length?8==a?(r=s=1,this.value="",i.init=0<d?-1:0,i.c=0<d?-(d+1):0,h.apply(this,[0,0])):n==u?(r=s=1,this.value="0"+u+new Array(d+1).join("0"),i.init=0<d?1:0,i.c=0<d?-(d+1):0):45==a?(r=s=2,this.value="-0"+u+new Array(d+1).join("0"),i.init=0<d?1:0,i.c=0<d?-(d+1):0,h.apply(this,[2,2])):(i.init=0<d?-1:0,i.c=0<d?-d:0):i.c=s-this.value.length,i.isPartialSelection=r!=s,0<d&&n==u&&r==this.value.length-d-1)i.c++,i.init=Math.max(0,i.init),e.preventDefault(),l=this.value.length+i.c;else if(45!=a||0==r&&0!=this.value.indexOf("-"))if(n==u)i.init=Math.max(0,i.init),e.preventDefault();else if(0<d&&127==a&&r==this.value.length-d-1)e.preventDefault();else if(0<d&&8==a&&r==this.value.length-d)e.preventDefault(),i.c--,l=this.value.length+i.c;else if(0<d&&127==a&&r>this.value.length-d-1){if(""===this.value)return;"0"!=this.value.slice(r,r+1)&&(o=this.value.slice(0,r)+"0"+this.value.slice(r+1),t.val(o)),e.preventDefault(),l=this.value.length+i.c}else if(0<d&&8==a&&r>this.value.length-d){if(""===this.value)return;"0"!=this.value.slice(r-1,r)&&(o=this.value.slice(0,r-1)+"0"+this.value.slice(r),t.val(o)),e.preventDefault(),i.c--,l=this.value.length+i.c}else 127==a&&this.value.slice(r,r+1)==p?e.preventDefault():8==a&&this.value.slice(r-1,r)==p?(e.preventDefault(),i.c--,l=this.value.length+i.c):0<d&&r==s&&this.value.length>d+1&&r>this.value.length-d-1&&isFinite(+n)&&!e.metaKey&&!e.ctrlKey&&!e.altKey&&1===n.length&&(o=s===this.value.length?this.value.slice(0,r-1):this.value.slice(0,r)+this.value.slice(r+1),this.value=o,l=r);else e.preventDefault();!1!==l&&h.apply(this,[l,l]),t.data("numFormat",i)},"keyup.format":function(e){var t,i=f(this),a=i.data("numFormat"),n=e.keyCode?e.keyCode:e.which,r=m.apply(this,["start"]),s=m.apply(this,["end"]);0!==r||0!==s||189!==n&&109!==n||(i.val("-"+i.val()),r=1,a.c=1-this.value.length,a.init=1,i.data("numFormat",a),t=this.value.length+a.c,h.apply(this,[t,t])),""===this.value||(n<48||57<n)&&(n<96||105<n)&&8!==n&&46!==n&&110!==n||(i.val(i.val()),0<d&&(a.init<1?(r=this.value.length-d-(a.init<0?1:0),a.c=r-this.value.length,a.init=1,i.data("numFormat",a)):r>this.value.length-d&&8!=n&&(a.c++,i.data("numFormat",a))),46!=n||a.isPartialSelection||(a.c++,i.data("numFormat",a)),t=this.value.length+a.c,h.apply(this,[t,t]))},"paste.format":function(e){var t=f(this),i=e.originalEvent,a=null;return window.clipboardData&&window.clipboardData.getData?a=window.clipboardData.getData("Text"):i.clipboardData&&i.clipboardData.getData&&(a=i.clipboardData.getData("text/plain")),t.val(a),e.preventDefault(),!1}}).each(function(){var e=f(this).data("numFormat",{c:-(d+1),decimals:d,thousands_sep:p,dec_point:u,regex_dec_num:i,regex_dec:a,init:!!this.value.indexOf(".")});""!==this.value&&e.val(e.val())}):this.each(function(){var e=f(this),t=+e.text().replace(i,"").replace(a,".");e.number(isFinite(t)?+t:0,d,u,p)}):this.text(f.number.apply(window,arguments))};var a=null,n=null;f.isPlainObject(f.valHooks.text)?(f.isFunction(f.valHooks.text.get)&&(a=f.valHooks.text.get),f.isFunction(f.valHooks.text.set)&&(n=f.valHooks.text.set)):f.valHooks.text={},f.valHooks.text.get=function(e){var t,i=f(e).data("numFormat");return i?""===e.value?"":(t=+e.value.replace(i.regex_dec_num,"").replace(i.regex_dec,"."),(0===e.value.indexOf("-")?"-":"")+(isFinite(t)?t:0)):f.isFunction(a)?a(e):void 0},f.valHooks.text.set=function(e,t){var i=f(e).data("numFormat");if(i){var a=f.number(t,i.decimals,i.dec_point,i.thousands_sep);return f.isFunction(n)?n(e,a):e.value=a}return f.isFunction(n)?n(e,t):void 0},f.number=function(e,t,i,a){a=void 0===a?"1000"!==new Number(1e3).toLocaleString()?new Number(1e3).toLocaleString().charAt(1):"":a,i=void 0===i?new Number(.1).toLocaleString().charAt(1):i,t=isFinite(+t)?Math.abs(t):0;var n="\\u"+("0000"+i.charCodeAt(0).toString(16)).slice(-4),r="\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4);e=(e+"").replace(".",i).replace(new RegExp(r,"g"),"").replace(new RegExp(n,"g"),".").replace(new RegExp("[^0-9+-Ee.]","g"),"");var s,o,l=isFinite(+e)?+e:0,c="";return 3<(c=(t?(s=l,o=t,""+ +(Math.round(0<(""+s).indexOf("e")?s:s+"e+"+o)+"e-"+o)):""+Math.round(l)).split("."))[0].length&&(c[0]=c[0].replace(/\B(?=(?:\d{3})+(?!\d))/g,a)),(c[1]||"").length<t&&(c[1]=c[1]||"",c[1]+=new Array(t-c[1].length+1).join("0")),c.join(i)}}(jQuery);var date_graf=function(){$("#date_hidden_table_gr1").val()>$("#date_hidden_table_gr2").val()&&($("#date_hidden_table_gr2").val(""),$("#date_table_gr2").val(""))},edit_grafik_click=function(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_edit_grafic.php?id="+$(this).attr("for"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1};function width_auto_input(){$(".js-input-width-auto").each(function(e,t){$(this).after('<div class="input-buffer"></div>')})}function mild_div(){if($(this).parents(".mild").is(".chechers")){$(this).parents(".mild").removeClass("chechers");$(this).parents("[invoice_material]").find(".mild_inp").val(0);nds_invoice()}else{$(this).parents(".mild").addClass("chechers");$(this).parents("[invoice_material]").find(".mild_inp").val(1);$(this).parents("[invoice_material]").find(".price_nds_in_").prop("readonly",!0).addClass("grey_edit"),$(this).parents("[invoice_material]").find(".price_nds_in_").val(0),$(this).parents("[invoice_material]").find(".price_in_").val(0),$(this).parents("[invoice_material]").find(".price_in_").prop("readonly",!0).addClass("grey_edit"),itog_invoice()}}function save_invoicess1(){var s=0;$(".save__s").removeClass("error_formi"),$(".akt_ss").removeClass("redaas_invcoice"),0==$("#ispol").val()&&($("#ispol").prev().prev().addClass("error_formi"),s=1),""==$("#date_hidden_table").val()&&($("#date_hidden_table").next(".save__s").addClass("error_formi"),s=1),""==$("#number_invoice").val()&&($("#number_invoice").addClass("error_formi"),s=1),$(".messa_invoice:visible").each(function(e,t){var i=$(this).attr("invoices_messa"),a=parseFloat($("[invoice_material="+i+"]").find(".count_in_").val()),n=parseFloat($("[invoices_messa="+i+"]").find(".count_defect_in_").val()),r=$("[invoices_messa="+i+"]").find(".text_zayva_message_").val();(""==n||a<n||0==n)&&(s=1,alert_message("error","Заполните количество брака")),0==$("[invoices_messa="+i+"]").find(".photo-akt-invoice .li-image").length&&(s=1,alert_message("error","Подгрузити файл акта на отбраковку")),""==r&&(s=1,alert_message("error","Заполните комментарий по браку"))}),1==s?alert_message("error","Не все поля заполнены"):$("#lalala_add_form").submit()}function material_defect_dell(){var e=$(this).attr("id_rel");$("[invoice_material="+e+"]").find(".defect_inp").val("0"),$("[invoice_material="+e+"]").next().hide(),$("[invoices_messa="+e+"]").find(".count_defect_in_").val(""),$("[invoices_messa="+e+"]").find(".text_zayva_message_").val("")}function material_defect(){var e=$(this).attr("id_rel");0==$("[invoice_material="+e+"]").find(".defect_inp").val()?($("[invoice_material="+e+"]").find(".defect_inp").val("1"),$("[invoice_material="+e+"]").next().show()):($("[invoice_material="+e+"]").find(".defect_inp").val("0"),$("[invoice_material="+e+"]").next().hide(),$("[invoices_messa="+e+"]").find(".count_defect_in_").val(""),$("[invoices_messa="+e+"]").find(".text_zayva_message_").val(""))}function change_option_invoice(){var e=$("[name=nds_ff]").val();$(".price_in_,.price_nds_in_").val(0);var t=0;0==$(".js-ispol_type_invoice").val()&&(t=1),$(".js-ispol_type_invoice").prev("ul").find("a[rel="+t+"]").trigger("click"),0==e?($("[name=nds_ff]").val("1"),$(".yes_nds").parents("th").removeClass("active_n_ac"),$(".no_nds").parents("th").addClass("active_n_ac")):($("[name=nds_ff]").val("0"),$(".no_nds").parents("th").removeClass("active_n_ac"),$(".yes_nds").parents("th").addClass("active_n_ac")),nds_invoice()}function cost_mild(){$("[invoice_material]").each(function(e,t){1==$(this).find(".mild_inp").val()&&($(this).find(".price_nds_in_").prop("readonly",!0).addClass("grey_edit"),$(this).find(".price_nds_in_").val(0),$(this).find(".price_in_").val(0),$(this).find(".price_in_").prop("readonly",!0).addClass("grey_edit"))})}function nds_invoice(){var e=$(".js-ispol_type_invoice").val();if($(".js-number-invoice-x").is("[readonly]")||$(".price_in_,.price_nds_in_").removeAttr("readonly").removeClass("grey_edit"),$("[name=nds_ff]").val(e),1==e)$(".price_nds_in_").prop("readonly",!0).addClass("grey_edit"),$(".cosy_title").empty().append("Цена"),$(".price_in_").prev("label").empty().append("ЦЕНА"),$(".price_nds_in_").val(0),$(".title_itog_invoice").empty().append("Итого сумма"),$(".checkbox_cost_inv").hide();else{$(".checkbox_cost_inv").show(),$(".cosy_title").empty().append('Цена без Ндс<div class="checkbox_cost_inv no_nds"><i></i></div>'),0==$(".yes_nds").length&&$(".checkbox_cost_inv").remove(),$(".price_in_").prev("label").empty().append("ЦЕНА БЕЗ НДС");var t=$("[name=nds_ff]").val();$(".js-number-invoice-x").is(".grey_edit");$(".js-number-invoice-x").is(".grey_edit")||(0==t?($(".price_nds_in_").removeAttr("readonly").removeClass("grey_edit"),$(".price_in_").val(0),$(".price_in_").prop("readonly",!0).addClass("grey_edit")):($(".price_in_").removeAttr("readonly").removeClass("grey_edit"),$(".price_nds_in_").val(0),$(".price_nds_in_").prop("readonly",!0).addClass("grey_edit"))),$(".title_itog_invoice").empty().append("Итого сумма с ндс");t=$("[name=nds_ff]").val();$(".yes_nds,.no_nds").parents("th").removeClass("active_n_ac"),0==t?$(".yes_nds").parents("th").addClass("active_n_ac"):$(".no_nds").parents("th").addClass("active_n_ac")}itog_invoice()}function itog_invoice(){var c=$(".js-ispol_type_invoice").val(),e=$("[invoice_material]"),d=0,u=0;if(e.each(function(e,t){var i=parseFloat($(this).find(".count_in_").val()),a=parseFloat($(this).find(".price_in_").val()),n=parseFloat($(this).find(".price_nds_in_").val()),r=parseFloat($(this).find(".defect_inp").val());if(0==c){var s=$("[name=nds_ff]").val();if(0!=n&&""!=n&&$.isNumeric(n)&&0==s){var o=(i*n).toFixed(2);if($(this).find(".price_in_").val((100*n/118).toFixed(2)),0!=r){var l=$(this).next().find(".count_defect_in_").val();$.isNumeric(l)&&""!=l&&(u+=l*n)}}else{if(1==s&&$.isNumeric(a)&&""!=a){o=(i*(1.18*a)).toFixed(2);$(this).find(".price_nds_in_").val((1.18*a).toFixed(2))}if(0!=r){l=$(this).next().find(".count_defect_in_").val();$.isNumeric(l)&&""!=l&&(u+=l*(1.18*a))}}}else{o=(i*a).toFixed(2);if(0!=r){l=$(this).next().find(".count_defect_in_").val();$.isNumeric(l)&&""!=l&&(u+=l*a)}}0!=o&&""!=o&&$.isNumeric(o)?($(this).find(".summa_ii").empty().append(o),d=(parseFloat(d)+parseFloat(o)).toFixed(2)):$(this).find(".summa_ii").empty().append("0")}),0!=u&&""!=u&&$.isNumeric(u)?($(".itogss_defect").show(),$(".itog_invoice_defect").empty().append(u.toFixed(2))):($(".itogss_defect").hide(),$(".itog_invoice_defect").empty().append("0")),$(".itog_invoice").empty().append(d),0!=d&&0==c){var t=(d/1.18*.18).toFixed(2);$(".itog_invoice_nds").empty().append(t),$(".itogss_nds").show()}else $(".itog_invoice_nds").empty(),$(".itogss_nds").hide()}function dell_invoice_material_prime(){var e=$(this).attr("id_rel"),t=$("[name=dom]").val();CookieList(window.b_cm+"_"+t,e,"del","sort"),alert(window.b_cm+"_"+t),$("[invoice_material="+e+"]").remove(),$("[invoices_messa="+e+"]").next().remove(),$("[invoices_messa="+e+"]").remove(),itog_invoice()}function dell_invoice_material(){var e=$(this).attr("id_rel");$("[invoice_material="+e+"]").hide(),$("[invoices_messa="+e+"]").hide(),AjaxClient("invoices","dell_material","GET","url="+window.location.href+"&id="+e,"AfterDellMaterialInvoice",e,0)}function view_stock(){1==$(".js-type-stock-view1").val()?($(".js-options-invoice-1").slideDown("slow"),$(".js-options-invoice-0").slideUp("slow"),$(".no_bill_material").hide(),$(".search_bill").hide()):($(".js-options-invoice-0").slideDown("slow"),$(".js-options-invoice-1").slideUp("slow"))}function AddInvoiceMaterial(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_add_material_invoice_2021.php?id="+$(this).attr("for")+"&col="+$(this).attr("col"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function save_invoicess(){var i=0;$(".js-save-form-invoices").find(".gloab").each(function(e,t){""==$(this).val()||"0"==$(this).val()?($(this).parents(".input_2021").addClass("required_in_2021"),$(this).parents(".list_2021").addClass("required_in_2021"),i++):($(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".list_2021").removeClass("required_in_2021"))}),0==$(".js-save-form-invoices").find(".js-type-soft-view1").val()?$(".js-save-form-invoices").find(".gloab2").each(function(e,t){""==$(this).val()||"0"==$(this).val()?($(this).parents(".input_2021").addClass("required_in_2021"),$(this).parents(".list_2021").addClass("required_in_2021"),i++):($(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".list_2021").removeClass("required_in_2021"))}):$(".js-save-form-invoices").find(".gloab1").each(function(e,t){""==$(this).val()||"0"==$(this).val()?($(this).parents(".input_2021").addClass("required_in_2021"),$(this).parents(".list_2021").addClass("required_in_2021"),i++):($(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".list_2021").removeClass("required_in_2021"))}),0==i?$(".js-save-form-invoices").submit():alert_message("error","Не все поля заполнены")}function ClickUpS(){var e=$(this).attr("oneli");$(this).val()==e&&$(this).val("")}function KeyUpS(){var t=$(this),i=$(this).attr("sopen"),a=0;$(this).is("[fns]")&&(a=$(this).attr("fns"));var n=t.parents(".input_2021").attr("list_number");t.parents(".input_2021").find(".js-hidden-search").val(0),1<=jQuery.trim(t.val().length)?$(".fox_dell1").show():$(".fox_dell1").hide(),delays(function(){if(jQuery.trim(t.val().length)>=search_min2){var e="url="+window.location.href+"&search="+encodeURIComponent(t.val())+"&option="+a;t.parents(".input_2021").find(".b_loading_small").empty().append('<div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div>').show(),AjaxClient("search",i,"GET",e,"AfterSearchTuroper",n+","+i,0,1)}},search_deley2)}function AfterSearchTuroper(e,t){null!=t&&("string"==typeof t?t=t.split(","):t[0]=t);var i=$(".input-search-list[list_number="+t[0]+"]").find(".js-keyup-search[sopen="+t[1]+"]");"ok"==e.status?(i.parents(".input_2021").find(".js-drop-search").empty().append(e.query),i.parents(".input_2021").find(".js-drop-search").css("transform","scaleY(1)"),i.parents(".input-search-list").find("i").addClass("open-search-active")):i.parents(".input_2021").find(".js-drop-search").css("transform","scaleY(0)");var a=i.attr("oneli");""!=a&&i.parents(".input_2021").find(".js-drop-search").prepend('<li><a href="javascript:void(0);" rel="0">'+a+"</a></li>"),i.parents(".input_2021").find(".b_loading_small").hide()}function open_search(){var e=$(this).parents(".input-search-list").find("i");e.is(".open-search-active")?(e.removeClass("open-search-active"),$(this).parents(".input-search-list").find(".js-drop-search").css("transform","scaleY(0)")):(e.addClass("open-search-active"),$(this).parents(".input-search-list").find(".js-drop-search").css("transform","scaleY(1)")),$(".slct").each(function(e,t){$(this).removeClass("active"),$(this).next().css("transform","scaleY(0)")}),elemss=$(this).parents(".input-search-list").attr("list_number"),$(".drop-search").each(function(e,t){$(this).parents(".input_2021").attr("list_number")!=elemss&&($(this).parents(".input-search-list").find("i").removeClass("open-search-active"),$(this).parents(".input-search-list").find(".js-drop-search").css("transform","scaleY(0)"))})}function drop_search(){var e=$(this).find("a").html(),t=$("<div>"+e+"</div>");t.find(".green-base").remove();var i=t.text(),a=$(this).find("a").attr("rel"),n=$(this).parents(".input_2021");n.find(".click-search-name").empty().append(i).slideDown("slow"),n.find(".click-search-icon").slideDown("slow"),n.find(".js-hidden-search").val(a).change(),n.find(".js-keyup-search").val(i),n.removeClass("required_in_2021"),$(this).parents(".input-search-list").find("i").removeClass("open-search-active"),input_2021()}function JsMoreB(){var e=$(this).parents(".js-more-block");e.is(".show-more-all")?e.removeClass("show-more-all"):e.addClass("show-more-all")}function del_button_block(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_block_new.php?id="+$(this).attr("for"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function edit_button_block(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_edit_block_new.php?id="+$(this).attr("for"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function add_button_rabota(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_add_rabota_new.php?id="+$(this).attr("for")+"&freez="+$("#frezezz").val(),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function add_button_block(){return $(".content_block").is("[dom]")&&$.isNumeric($(".content_block").attr("dom"))&&$.arcticmodal({type:"ajax",url:"forms/form_add_block.php?id="+$(".content_block").attr("dom"),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}}),!1}function alert_message(e,t){var i=1;$(".alert_wrapper .div-box").find(".alert-message").each(function(){value=$(this).attr("alert-id"),value>i&&(i=value)}),$(".alert_wrapper .div-box").prepend(function(){$(this).find(".alert-message ").addClass("show-alert")},'<div alert-id="'+(i+1)+'" class="  alert-message '+e+'-a"><div class="alert-icon"></div><div class="alert-content">'+t+'</div><div class="alert-close js-alert-close"></div></div>'),setTimeout(function(){$(".alert-message[alert-id="+(i+1)+"]").addClass("show-alert")},500),setTimeout(function(){$(".alert-message[alert-id="+(i+1)+"]").addClass("hide-alert"),setTimeout(function(){$(".alert-message[alert-id="+(i+1)+"]").remove()},500)},5e3)}function add_invoice1(){$.arcticmodal({type:"ajax",url:"forms/form_add_stock.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function PrintStock_(){$.arcticmodal({type:"ajax",url:"forms/form_print_stock.php?id="+$("#sort_stock4").val(),beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function js_edit_supply_mat_stock(){var e=$(this).closest(".box-modal"),i=0;(e.find(".js-form-supply-mats .gloab").each(function(e,t){""==$(this).val()?($(this).parents(".input_2021").addClass("required_in_2021"),$(this).parents(".list_2021").addClass("required_in_2021"),i++):($(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".list_2021").removeClass("required_in_2021"))}),0==e.find(".js-type-stock-prime1").val()?e.find(".js-form-supply-mats .gloab2").each(function(e,t){""==$(this).val()?($(this).parents(".input_2021").addClass("required_in_2021"),$(this).parents(".list_2021").addClass("required_in_2021"),i++):($(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".list_2021").removeClass("required_in_2021"))}):e.find(".js-form-supply-mats .gloab1").each(function(e,t){""==$(this).val()?($(this).parents(".input_2021").addClass("required_in_2021"),$(this).parents(".list_2021").addClass("required_in_2021"),i++):($(this).parents(".input_2021").removeClass("required_in_2021"),$(this).parents(".list_2021").removeClass("required_in_2021"))}),0==i)?(AjaxClient("supply","svyz_sklad","POST",0,"AfterSVS",e.find(".gloab-cc").attr("for"),"form_supply_edit_mat_stock"),e.find(".js-edit-supply-block-x").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 17px;top: auto;right: auto;left: auto; display: inline-block;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>')):alert_message("error","Не все поля заполнены")}function list_number(){2==$(this).find("a").attr("rel")&&($("#date_table").show(),$(".bookingBox_range").css({display:"block"}))}function dava_supply(){var e=$(this).find(".choice-radio i"),t=$(".content_block").attr("iu"),i=1;if(!e.is(".active_task_cb"))i=0;$.cookie("dava_"+t,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("dava_"+t,i,"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")}function erase_basket(){$(".users_rule").attr("iu");var e=$(".content_block").attr("iu");$.cookie("basket_supply_"+e,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$(".checher_supply").removeClass("checher_supply"),basket_supply()}function menu_supply_basket_21(e){e.stopPropagation();var t=$(this).find("a").attr("rel");2==t&&erase_basket(),1==t&&("undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close")),e.stopPropagation(),add_soply())}function menu_supply_basket_acc_21(e){e.stopPropagation();var t=$(this).find("a").attr("rel");if(1==t&&save_soply(),2==t){var i=$(".content_block").attr("iu");$.cookie("current_supply_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$.cookie("basket_score_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$.cookie("basket_supply_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$(".js-basket-supply-acc").hide(),$(".js-basket-supply-acc").removeClass("more-active-s"),$(".js-basket-supply-acc").removeClass("more-active-s1"),$(".js-basket-supply-acc .more_supply1").find("i").empty(),$(".checher_supply").removeClass("checher_supply"),$(".score_active").removeClass("score_active"),alert_message("ok","Текущий счет закрыт")}if(3==t){var a=$.cookie("current_supply_"+i);null!=a&&$.arcticmodal({type:"ajax",url:"forms/form_sign_acc.php?id="+a,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}}function basket_supply(){$(".users_rule").attr("iu");var e=$(".content_block").attr("iu"),t=$.cookie("basket_supply_"+e),i=$.cookie("basket_score_"+e);if(null==$.cookie("current_supply_"+e))if(null==t)$(".js-basket-supply").hide(),$(".js-basket-supply").removeClass("more-active-s");else{$(".js-basket-supply").addClass("more-active-s"),$(".js-basket-supply").show(),$(".add_nar").show(),$(".add_zayy").show(),$(".add_score").length||ToolTip();var a=t.split(".").length;$(".add_score .score_").empty().append(a),$(".js-basket-supply .more_supply1").find("i").empty().append(a),$(".js-basket-supply").addClass("more-active-s")}else{if($(".js-basket-supply").hide(),$(".js-basket-supply").removeClass("more-active-s"),$(".js-basket-supply-acc").show(),$(".js-basket-supply-acc").removeClass("more-active-s1"),$(".js-basket-supply-acc").addClass("more-active-s"),null!=i)a=i.split(".").length;else a="",$(".js-basket-supply-acc").addClass("more-active-s1"),$(".js-basket-supply-acc").removeClass("more-active-s");$(".js-basket-supply-acc .more_supply1").find("i").empty().append(a)}}function add_soply(){$(".users_rule").attr("iu");var e=$(".content_block").attr("iu");null!=$.cookie("basket_supply_"+e)&&$.arcticmodal({type:"ajax",url:"forms/form_add_soply_2021.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function st_div_supply(){$(".users_rule").attr("iu");var e=$(".content_block").attr("iu"),t=$(this).parents(".tr_dop_supply");if(null==$.cookie("current_supply_"+e))var i="basket_supply_";else i="basket_score_";t.is(".checher_supply")?(t.removeClass("checher_supply"),CookieList(i+e,t.attr("supply_id"),"del")):(t.addClass("checher_supply"),CookieList(i+e,t.attr("supply_id"),"add")),basket_supply(),ToolTip()}function save_soply(){var e=$(".content_block").attr("iu");null!=$.cookie("current_supply_"+e)&&AjaxClient("supply","update_soply","GET","url="+window.location.href,"Afterupdate_soply",1,0)}function Afterupdate_soply(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){var i=$(".content_block").attr("iu"),a=$.cookie("basket_score_"+i),n=$.cookie("current_supply_"+i),r=a.split(".");$("[rel_score="+n+"]").next().remove(),$("[rel_score="+n+"]").remove();for(var s=0;s<r.length;s++){$("[supply_id="+r[s]+"]").find(".scope_scope").append('<div rel_score="'+n+'" data-tooltip="счет №'+e.number+" ("+e.dates+')" class="menu_click score_a"><span>№'+e.number+" ("+e.date+")</span><strong><label>"+$.number(parseFloat(e.sum).toFixed(2),2,"."," ")+"</label></strong><i>"+r.length+'</i><form class="none"  action="acc/'+n+'/" style=" padding:0; margin:0;" method="post" enctype="multipart/form-data"><input name="a" value="open" type="hidden"></form></div><div class="menu_supply menu_su122"><ul class="drops no_active" data_src="0" style="left: -50px; top: 5px; transform: scaleY(0);"><li><a href="javascript:void(0);" rel="1">Открыть</a></li><li><a href="javascript:void(0);" rel="2">Сделать текущим</a></li><li><a href="javascript:void(0);" rel="3">Согласовать</a></li><li><a href="javascript:void(0);" rel="4">Удалить</a></li></ul><input rel="x" name="vall" class="option_score1" value="0" type="hidden"></div>')}alert_message("ok","Текущий счет сохранен"),$.cookie("current_supply_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$.cookie("basket_score_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$.cookie("basket_supply_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),$(".js-basket-supply-acc").hide(),$(".js-basket-supply-acc").removeClass("more-active-s"),$(".js-basket-supply-acc").removeClass("more-active-s1"),$(".js-basket-supply-acc .more_supply1").find("i").empty(),$(".js-basket-supply-acc .more_supply1").find(".dop-21").empty(),$(".checher_supply").removeClass("checher_supply"),$(".score_active").removeClass("score_active")}e.status}function option_score1(){var e=$(this).val(),t=$(this).parents(".menu_supply").prev().attr("rel_score");if(2==e){$(".checher_supply").removeClass("checher_supply");var i=$(".content_block").attr("iu");$.cookie("current_supply_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("current_supply_"+i,t,"add"),$(".score_active").removeClass("score_active"),$("[rel_score="+t+"]").addClass("score_active"),AjaxClient("supply","current_soply","GET","url="+window.location.href+"&id="+t,"Aftercurrent_soply",t,0)}if(3==e){var a=$(this).parents(".menu_supply").prev().attr("rel_score");$.arcticmodal({type:"ajax",url:"forms/form_sign_acc.php?id="+a,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}1==e&&$("[rel_score="+t+"]:first").find("form").submit(),4==e&&$.arcticmodal({type:"ajax",url:"forms/form_dell_soply.php?id="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterLoading:function(e,t){e.body.parents(".arcticmodal-container").addClass("yoi"),$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},beforeClose:function(e,t){"undefined"!=typeof timerId&&clearInterval(timerId),BodyScrool()}})}function UpdateStatusADA(e){0!=e&&($("[id_ada="+e+"]").hide().after('<div class="loader_inter"><div></div><div></div><div></div><div></div></div>'),AjaxClient("supply","update_ada","GET","url="+window.location.href+"&id="+e,"AfterUpdateStatusADA",e,0))}function AfterUpdateStatusADA(e,t){"reg"==e.status&&WindowLogin(),"error"==e.status&&$(".loader_inter").remove(),"ok"==e.status&&($("[id_ada="+t+"]").empty().append(e.echo),ToolTip(),$(".loader_inter").remove(),$("[id_ada="+t+"]").show())}function Aftercurrent_soply(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){var i=$(".content_block").attr("iu");$(".js-basket-supply-acc").show(),$(".js-basket-supply-acc").find(".dop-21").empty().append("<label>текущий счет</label>"+e.status_echo),$(".js-basket-supply-acc").find("i").empty().append(e.count),$.cookie("basket_score_"+i,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("basket_score_"+i,e.basket,"add");for(var a=e.basket.split("."),n=0;n<a.length;n++)$("[supply_id="+a[n]+"]").addClass("checher_supply");basket_supply()}e.status}function tek_acc(e){$(".checher_supply").removeClass("checher_supply");var t=$(".content_block").attr("iu");$.cookie("current_supply_"+t,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}),CookieList("current_supply_"+t,e,"add"),$(".score_active").removeClass("score_active"),$("[rel_score="+e+"]").addClass("score_active"),AjaxClient("supply","current_soply","GET","url="+window.location.href+"&id="+e,"Aftercurrent_soply",e,0)}function Zindex(){var i=50;$(".js-zindex").each(function(e,t){$(this).css("z-index",i),i--})}$(function(){width_auto_input();var e=$(".js-input-width-auto"),t=$(".input-buffer");e.on("input",function(){t.text(e.val()),e.width(t.width())})}),$(function(){$("body").on("change keyup input click",".add_invoicess",save_invoicess),$("body").on("change keyup input click",".add_material_invoice",AddInvoiceMaterial),$("body").on("change keyup input click",".js-type-stock-view",view_stock),$("body").on("change keyup input click",".del_invoice_material",dell_invoice_material),$("body").on("change keyup input click",".del_invoice_material_prime",dell_invoice_material_prime),$("body").on("change keyup input click",".js-ispol_type_invoice",nds_invoice),$("body").on("change keyup input click",".price_nds_in_,.price_in_,.count_in_,.count_defect_in_,.del_invoice_akt,.material_defect",itog_invoice),$("body").on("change keyup input click",".checkbox_cost_inv",change_option_invoice),$("body").on("change keyup input click",".material_defect",material_defect),$("body").on("change keyup input click",".del_invoice_akt",material_defect_dell),$("body").on("click",".mild_mild",mild_div),$("body").on("change keyup input click",".add_invoicess1",save_invoicess1),$("body").on("change keyup input click",".price_nds_in_,.price_in_,.count_in_,.slct_box,#date_table,[name=number_invoices],[name=ispol_work],.js-ispol_type_invoice,.upload-but-2022,.upload-but-2021,.js-dell-image,.del_image_invoice,.del_invoice_material,.add_material_invoice,.count_defect_in_,.text_zayva_message_,.material_defect,.del_invoice_akt,.checkbox_cost_inv,.mild_mild",function(){$(".transfer_invoicess").hide(),$(".add_invoicess1").show()})}),window.search_min2=0,window.search_deley2=500,$(function(){var e;e=0;$("body").on("keyup",".js-keyup-search",KeyUpS),$("body").on("click",".js-keyup-search",ClickUpS),$("body").on("change keyup input click",".js-drop-search li",drop_search),$("body").on("change keyup input click",".js-open-search",open_search)}),$(document).ready(function(){$("body").on("click",".js-more",JsMoreB)}),$(function(){}),$(function(){$(".add__razdel").bind("change keyup input click",add_button_block)}),$(function(){$("body").on("change keyup input click",".js-add-stock",add_invoice1),$("body").on("change keyup input click",".js-print-stock",PrintStock_)}),$(function(){$("body").on("change keyup input click",".menu_jjs .js-menu-jjs-basket",menu_supply_basket_21),$("body").on("change keyup input click",".menu_jjs .js-menu-jjs-basket-acc",menu_supply_basket_acc_21),$(".scope_scope").on("change",".option_score1",option_score1),$(".tr_dop_supply").on("click",".st_div_supply",st_div_supply),basket_supply(),$(".js-call-no-v").find(".drop").on("change keyup input click","li",list_number),$("body").on("change keyup input click",".js-dava-click",dava_supply)}),$(function(){Zindex()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
